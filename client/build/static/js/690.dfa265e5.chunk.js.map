{"version":3,"file":"static/js/690.dfa265e5.chunk.js","mappings":"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","sources":["components/ui/sideBar.js","helpers/domHandlers.js"],"sourcesContent":["import { useState, useContext } from 'react';\r\nimport { StateContext } from '../../context/StateContext';\r\nimport { MsgContext } from '../../context/msgcontext';\r\nimport { showLoading, hideLoading } from '../ui/loading';\r\nimport { connectToChain, blockchainNetworks, currentAddress } from '../../helpers/web3Helpers';\r\nimport { expandABox } from '../../helpers/domHandlers';\r\nimport '../../styles/sideBar.css';\r\nconst {log} = console;\r\n\r\nconst WalletBox = ( )=>{\r\n    const { state, setState } = useContext( StateContext );\r\n    const { msgStacks, setMsgStacks } = useContext( MsgContext );\r\n    let activeChain, inactiveChain = [];\r\n    let daBalance = state.ethBalance, activNetwrkIndx = null;\r\n    \r\n    const setChain = async ( e, chosenNetwork, index )=>{\r\n        showLoading();\r\n        \r\n        const walletConnected = await connectToChain( chosenNetwork );\r\n        if ( walletConnected.code ){\r\n            hideLoading();\r\n            return setMsgStacks((prev)=>({...prev, messages:[\"Please confirm wallet connection to continue!\"], substate:state.currsubState }) );\r\n        }\r\n        \r\n        return hideLoading();\r\n    }\r\n\r\n    blockchainNetworks.forEach( ( element, i ) => {\r\n        if( state.chainID === element.networkParameters.chainId ){\r\n            activNetwrkIndx = i;\r\n            activeChain = <div className='currentChain' key={i} onClick={ (e)=>{ expandABox( null, document.getElementById('inactiveNetworks'), 'expandedInactiveNetworks', 'inactiveNetworks' ) } } >\r\n                <img src={(blockchainNetworks[i].logo)?blockchainNetworks[i].logo:'solidity_icon.svg'} alt='' style={{ height:'35px', width:'35px', borderRadius:'7.5px' }} />\r\n                <span> { blockchainNetworks[i].name } </span>\r\n                <img src='./inverted-triangle.svg' style={{ height:'15px', width:'15px', margin:'auto 0px auto auto' }} alt='' />\r\n            </div>\r\n        }else{\r\n            inactiveChain.push(\r\n                <div className='inactiveChains' key={i} onClick={ (e)=>{ return setChain( e, blockchainNetworks[i], i ); } } >\r\n                    <img src={(blockchainNetworks[i].logo)?blockchainNetworks[i].logo:'solidity_icon.svg'} alt='' />\r\n                    <span> { blockchainNetworks[i].name } </span>\r\n                </div>\r\n            )\r\n        }\r\n    });\r\n    \r\n    if( state.account !== null && state.sideBar === true ){\r\n        return(\r\n            <div id='sideBarpopup'>\r\n                <div className='sideBar'>\r\n                    <button className='closeSideBar' onClick={()=>{ return setState((prev)=>({...prev, sideBar:!state.sideBar })) }} >X</button>\r\n                    <div className='currentNetwork'>\r\n                        <span>Current Network:</span>\r\n                        {activeChain}\r\n                        <div id='inactiveNetworks' className='inactiveNetworks'> {inactiveChain} </div>\r\n                        <span>Address:</span>\r\n                        <div style={{fontSize:'9px', width:'100%', padding:'10px',margin:'10px 0px', border:'solid 1px rgb( 52, 52, 52 )', display:'flex', verticalAlign:'middle', flexDirection:'row', overflow:'hidden', borderRadius:'10px', boxSizing:'border-box'}}> <div style={{width:'calc( 100% - 35px )', display:'inline-block', boxSizing:'border-box', overflowX:'hidden', margin:'0px'}}> <span> {state.account} </span> </div> <span style={{ margin:'auto', textAlign:'right', color:'rgb( 120, 120, 120 )', fontWeight:'bold', cursor:'pointer' }} onClick={(e)=>navigator.clipboard.writeText(state.account)} > copy</span> </div>\r\n                        <div style={{padding:'10px', boxSizing:'border-box', width:'100% !important', border:'solid 1px rgb( 52, 52, 52 )', borderRadius:'10px', margin:'10px 0px', overflow:'hidden'}}>Balance: {daBalance.split('.')[0]+'.'+daBalance.split('.')[1].substring(0, 2)+blockchainNetworks[activNetwrkIndx].networkParameters.nativeCurrency.symbol}</div>\r\n                    </div>\r\n                    <div className='walletOptions'>\r\n  \r\n                        {/* <div className='currentChain' onClick={(e)=>( networkSelected.status )? connectWallet():false}>\r\n                            <img src='./metamask.svg' alt='' style={{ height:'35px', width:'35px', borderRadius:'7.5px' }}/>\r\n                            <span>Metamask Wallet</span>\r\n                        </div>\r\n                        <div className='currentChain'>\r\n                            <img src='./bravelogo.svg' alt='' style={{ height:'35px', width:'35px', borderRadius:'7.5px' }}/>\r\n                            <span>Brave Browser</span>\r\n                        </div>\r\n                        <div className='currentChain'>\r\n                            <img src='./walletconnect.svg' alt='' style={{ height:'35px', width:'35px', borderRadius:'7.5px' }}/>\r\n                            <span>Wallet Connect</span>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WalletBox;","const expandABox  = ( e, expandee, expandedClass, contractedClass )=>{\r\n    // element that calls the click event should be a button or element containing inner text\r\n    let ele = (e)?e.target:null;\r\n\r\n    // Check if div to be expanded is already expanded via a css class\r\n    // If it is expanded then swap class for a contracted css class ( which in this case is overflowY set to 'hidden' )\r\n    if ( expandee.classList.contains( expandedClass ) ) {\r\n        expandee.classList.remove( expandedClass );\r\n        expandee.classList.add( contractedClass ); // 'contract-container');\r\n        if( ele )\r\n            ele.innerText = \"expand\"\r\n    }else{\r\n        // If element contains contracted class instead then toggle it and replace it for expanded class\r\n        expandee.classList.add( expandedClass );\r\n        expandee.classList.remove( contractedClass );\r\n        if(ele)\r\n            ele.innerText = \"less\"\r\n    }\r\n};\r\n\r\nconst divSwapper = (node1, node2)=>{\r\n    node1.parentNode.replaceChild(node1, node2);\r\n    node1.parentNode.insertBefore(node2, node1); \r\n}\r\n\r\nexport { expandABox, divSwapper }"],"names":["log","console","state","setState","useContext","StateContext","msgStacks","setMsgStacks","MsgContext","activeChain","inactiveChain","daBalance","ethBalance","activNetwrkIndx","blockchainNetworks","element","i","chainID","networkParameters","chainId","className","onClick","e","expandABox","document","getElementById","src","logo","alt","style","height","width","borderRadius","name","margin","push","async","chosenNetwork","index","showLoading","connectToChain","code","hideLoading","prev","messages","substate","currsubState","setChain","account","sideBar","id","fontSize","padding","border","display","verticalAlign","flexDirection","overflow","boxSizing","overflowX","textAlign","color","fontWeight","cursor","navigator","clipboard","writeText","split","substring","nativeCurrency","symbol","expandee","expandedClass","contractedClass","ele","target","classList","contains","remove","add","innerText","divSwapper","node1","node2","parentNode","replaceChild","insertBefore"],"sourceRoot":""}