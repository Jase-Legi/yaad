{"version":3,"file":"static/js/858.b69ff4fb.chunk.js","mappings":"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","sources":["components/form/formcomps.js","helpers/stringValidator.js"],"sourcesContent":["function BoxTitle( { data } ){\r\n    // console.log(`type:${ data.textType }`)\r\n    switch ( data.textType ) {\r\n        case 'h2':\r\n            data.textType = <h2 className={( data.textClass )? data.textClass :''} id={( data.textID )? data.textID :''}>{ data.text }</h2>;\r\n            break;\r\n        case 'span':\r\n            data.textType = <span className={( data.textClass )? data.textClass :''} id={( data.textID )? data.textID :''}>{ data.text }</span>;\r\n            break;\r\n        case 'h1':\r\n            data.textType = <h1 className={( data.textClass )? data.textClass :''} id={( data.textID )? data.textID :''}>{ data.text }</h1>;\r\n            break;\r\n        case 'h3':\r\n                data.textType = <h3 className={( data.textClass )? data.textClass :''} id={( data.textID )? data.textID :''}>{ data.text }</h3>;\r\n                break;\r\n        case 'h4':\r\n            data.textType = <h4 className={( data.textClass )? data.textClass :''} id={( data.textID )? data.textID :''}>{ data.text }</h4>;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return ( <div className={( data.divClass )? data.divClass :''} id={( data.divID )? data.divID :''}> { data.textType } </div> )\r\n};\r\n\r\nfunction Buttonz( { data} ){\r\n    return (\r\n        <button className={( data.class )? data.class :''} id={( data.id )? data.id :''} style={{zIndex: 11}} onClick={ data.func }> { data.value } </button>\r\n    )\r\n};\r\n\r\nfunction DaInput( { data } ){\r\n    let daInput;\r\n    \r\n    if( data.hidden){\r\n        switch ( data.type) {\r\n            case 'file':\r\n                daInput = <input className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :''} name={( data.name )? data.name :''} readOnly={( data.readOnly)? data.readOnly:false} type='file' multiple={( data.multiple )? data.multiple :''} accept={( data.accept)? data.accept:'*'} onChange={( data.onChange )? data.onChange :()=>{ return; }} hidden/>;\r\n                break;\r\n            case 'textarea':\r\n                daInput = <textarea className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :'' } name={( data.name )? data.name :''} value={ data.value } readOnly={( data.readOnly)? data.readOnly:false} onChange={( data.onChange )? data.onChange :()=>{ return; }} hidden></textarea>;\r\n                break;\r\n            case 'text':\r\n                daInput = <input className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :'' } name={( data.name )? data.name :''} type=' data.text ' value={ data.value } readOnly={( data.readOnly)? data.readOnly:false} onChange={( data.onChange )?(e)=> data.onChange(e):()=>{ return; }} hidden/>;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return(daInput);\r\n    }else{\r\n        switch ( data.type) {\r\n            case 'file':\r\n                daInput = <input className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :''} name={( data.name )? data.name :''} type='file' multiple={( data.multiple )? data.multiple :''} accept={( data.accept)? data.accept:'*'} onChange={( data.onChange )? data.onChange :()=>{ return; }} onClick={( data.onClick )?(e)=> data.onClick :()=>{ return; }}/>;\r\n                break;\r\n            case 'textarea':\r\n                daInput = <textarea className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :'' } name={( data.name )? data.name :''} placeholder={( data.placeholder )? data.placeholder :''} onChange={( data.onChange )? data.onChange :()=>{ return; }} onClick={( data.onClick )?(e)=> data.onClick (e):()=>{ return; }} ></textarea>;\r\n                break;\r\n            case 'text':\r\n                daInput = <input className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :'' } name={( data.name )? data.name :''} type=' data.text ' placeholder={( data.placeholder )? data.placeholder :''} onChange={( data.onChange )? data.onChange :()=>{ return; }} onClick={( data.onClick )?(e)=> data.onClick (e):()=>{ return; }}/>;\r\n                break;\r\n            case 'number':\r\n                daInput = <input className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :'' } name={( data.name )? data.name :''} type='number' placeholder={( data.placeholder )? data.placeholder :''} onChange={( data.onChange )? data.onChange :()=>{ return; }} onClick={( data.onClick )?(e)=> data.onClick (e):()=>{ return; }} />;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return( <div className={( data.class )? data.class :''} id={( data.id )? data.id :''}> {daInput} </div> );\r\n    }\r\n};\r\n\r\nexport {DaInput, Buttonz, BoxTitle,}","const isAplhaNumeric = (str, extraCharacters )=>{\r\n    const trimmedString = ( !str )?false:str.trim();\r\n    const trimmedStringLength = trimmedString.length;\r\n\r\n    for ( let ind = 0; ind < trimmedStringLength; ind++) {\r\n        let  get_code = str.charCodeAt(ind);\r\n        //  /* numeric (0-9) = 48-57 */  /* upper alpha (A-Z) = 65-90*/ /* lower alpha (a-z) = 97-122*/  /*_ = 95*/\r\n        if ( !( get_code > 47 && get_code < 58 ) && !( get_code > 64 && get_code < 91 ) && !( get_code > 96 && get_code < 123  ) ) {\r\n            if ( extraCharacters ) {\r\n                if ( extraCharacters.includes( str[ind] ) ){\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    return true;\r\n};\r\n\r\nconst isNumeric = ( str )=>{\r\n    const trimmedString = ( !str )?false:str.trim();\r\n    const trimmedStringLength = trimmedString.length;\r\n    let dotOccurrences = 0;\r\n\r\n    for ( let ind = 0; ind < trimmedStringLength; ind++) {\r\n        let  get_code = str.charCodeAt(ind);\r\n        //  /* numeric (0-9) = 48-57 */\r\n        if ( !( get_code > 47 && get_code < 58 ) ) {\r\n            if ( '.' === str[ind] ) {\r\n                if ( dotOccurrences === 1 ){\r\n                    return false;\r\n                }\r\n                dotOccurrences++;\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    return true;\r\n};\r\n\r\nconst stringLengthRange = ( str, min, max)=>{\r\n    const trimmedString = ( !str )?false:str.trim();\r\n    const trimmedStringLength = trimmedString.length;\r\n    if( !max && ( trimmedStringLength >= min )){\r\n        return true;\r\n    }\r\n\r\n    if( ( trimmedStringLength >= min ) && ( trimmedStringLength <= max ) ){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport { isAplhaNumeric, stringLengthRange, isNumeric }"],"names":["BoxTitle","data","textType","className","textClass","id","textID","text","divClass","divID","Buttonz","class","style","zIndex","onClick","func","value","DaInput","daInput","hidden","type","typeClass","typeId","name","readOnly","multiple","accept","onChange","e","placeholder","isAplhaNumeric","str","extraCharacters","trimmedStringLength","trim","length","ind","get_code","charCodeAt","includes","isNumeric","dotOccurrences","stringLengthRange","min","max"],"sourceRoot":""}