{"version":3,"file":"static/js/972.46f7a5cd.chunk.js","mappings":"+PAEMA,EAAe,yCAAG,WAAQC,EAAUC,EAAgBC,EAAcC,EAAYC,GAA5D,0FACdC,EAAYC,SAASC,eAAeL,IAChCM,UAAY,GAChBC,EAAST,EAASU,OACxBC,QAAQC,IAAR,wBAA6BH,IACb,IAAXA,EALe,yCAMTL,EAAS,CAAE,iBAAkBD,KANpB,OAUpB,IAFIU,EAAW,GACXC,EAAa,EATG,WAUVC,GACN,IAAIC,EAAShB,EAASe,IAEtBE,EAAAA,EAAAA,GAAkBD,GAAQ,YAAoB,IAAD,eAAfE,EAAe,KAATC,EAAS,KACzC,GAAIA,GACA,GAAGA,EAAIC,MAAM,uBAAuB,CAChC,IAAMC,EAAMf,SAASgB,cAAc,OAEnCD,EAAIE,iBAAkB,QAAQ,WAC1B,GAAIF,EAAIG,OAAS,KAASH,EAAII,QAAU,IAAM,CAC1CX,IACAD,EAASa,KAAM,CAAER,KAAAA,EAAMC,IAAAA,IACvB,IAAMQ,EAAOrB,SAASgB,cAAc,OACpCK,EAAKC,YAAYP,GACjBM,EAAKE,UAAUC,IAAK7B,GAA+B,uBACnDI,EAAUuB,YAAYD,EACzB,MACGN,EAAIU,SACJ5B,EAAWuB,KAAKX,GAGpB,GAAKN,IAAaK,EAAaX,EAAWO,OACtC,OAAON,EAAU,CAAE,KAAMD,EAAcU,EAASH,OAAS,EAAIG,EAAS,MAE7E,IACDQ,EAAIW,IAAM,qBAAcb,EAAd,YAA4BD,CACzC,MAEG,GADAf,EAAWuB,KAAKX,GACbf,EAASU,SAAWP,EAAWO,OAC9B,OAAON,EAAS,CAAE,+DAAgED,SAK1F,GADAA,EAAWuB,KAAKX,GACbf,EAASU,SAAWP,EAAWO,OAC9B,OAAON,EAAS,CAAE,wEAAyED,GAGtG,GAhDe,EAUVY,EAAI,EAAGA,EAAIN,EAASM,IAAO,EAA3BA,GAVU,4CAAH,8D,UCDfkB,EAAU,SAACC,GAGb,IAFA,IAAwBC,EAAMC,EAA1BC,EAAMH,EAAMxB,OAET2B,EAAM,GAETD,EAAQE,KAAKC,MAAMD,KAAKE,SAAWH,GAInCF,EAAOD,IAFPG,GAGAH,EAAMG,GAAOH,EAAME,GACnBF,EAAME,GAASD,EAEnB,OAAOD,CACV,EAEKO,EAA6B,yCAAI,WAAQC,EAAOC,EAAQ5B,EAAG6B,GAA1B,gFAGnC,GAFAA,EAAuB,OAAZA,QAAgCC,IAAZD,EAAwB,GAAIA,GAC3D7B,EAAW,OAANA,QAAoB8B,IAAN9B,EAAkB,EAAEA,GAChC2B,EAAMhC,OAET,IADMoC,EAAeJ,EAAM3B,GAAQgC,EAAO,EACpCA,EAAOD,EAAapC,QAClBsC,EAAMF,EAAaC,GACvBH,EAAQlB,KAAKsB,GACbP,EAA8BC,EAAOC,EAAQ5B,EAAE,EAAG6B,GAClDA,EAAQK,MACRF,SAGJJ,EAAOjB,KAAKkB,EAAQM,SAbW,2CAAJ,4DCjB7BC,EAAc,SAAEC,EAAGC,EAAUC,EAAeC,GAE9C,IAAIC,EAAMJ,EAAEK,OAIPJ,EAASxB,UAAU6B,SAAUJ,IAC9BD,EAASxB,UAAUE,OAAQuB,GAC3BD,EAASxB,UAAUC,IAAKyB,GACxBC,EAAIG,UAAY,WAGhBN,EAASxB,UAAUC,IAAKwB,GACxBD,EAASxB,UAAUE,OAAQwB,GAC3BC,EAAIG,UAAY,OAEvB,EAEKC,EAAa,SAACC,EAAOC,GACvBD,EAAME,WAAWC,aAAaH,EAAOC,GACrCD,EAAME,WAAWE,aAAaH,EAAOD,EACxC,E,2DCghCD,MAphCA,SAA0BK,GACPC,OAAOC,SAASC,KADF,IAAD,MAK5B,GAAoCC,EAAAA,EAAAA,YAAYC,EAAAA,GAA7BC,GAAnB,EAAQC,UAAR,EAAmBD,cACnB,GAA4BF,EAAAA,EAAAA,YAAYI,EAAAA,GAAhCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAWbC,EAAe,SAAEC,GACnB,IAAIC,EAAS,EAIb,OAHAD,EAAOE,SAAQ,SAAChC,EAAKiC,EAAMC,GACvBH,GAAY/B,EAAImC,SAAYnC,EAAIoC,OAAO1E,OAASsC,EAAIoC,OAAO1E,OAAO,CACrE,IACMqE,CACV,EAEGJ,EAAMU,KAAKC,eAAiB,EAE5B,IAAMC,EAAuB,SAACnC,GAAK,IAAD,EAE1BoC,EACJ,QAFAC,EAAAA,EAAAA,MAEQd,EAAMe,cACV,IAAK,kBACDC,aAAaC,QACbJ,EAAQ,CAAEb,MAAM,OAAQU,KAAK,IAC7B,MACJ,IAAK,8CACDV,EAAMkB,SAAY,KAClBL,EAAQ,CAAEE,aAAa,mCACvB,MACJ,QACI,UAAOf,EAAMU,YAAb,cAAO,EAAYS,UACnBN,EAAQ,CAAEE,aAAc,mBAIhC,OAAOd,GAAS,SAACmB,GAAD,eAAC,UAAYA,GAASP,EAAtB,GACnB,EAEKQ,EAAc,yCAAG,WAAO5C,GAAP,mFACnBqC,EAAAA,EAAAA,IAAYrC,GADO,UAEG6C,EAAAA,EAAAA,MAFH,UAEbC,EAFa,OAGfvB,EAAMU,KAAKc,WAA6C,KAAhCxB,EAAMU,KAAKc,UAAUC,OAH9B,yCAIR5B,GAAc,SAACuB,GAAD,eAAC,UAAYA,GAAb,IAAmBM,SAAS,CAAE,6BAA+BC,SAAS3B,EAAMe,cAA5E,KAJN,UAOff,EAAMU,KAAKkB,aAAiD,KAAlC5B,EAAMU,KAAKkB,YAAYH,OAPlC,yCAQR5B,GAAc,SAACuB,GAAD,eAAC,UAAYA,GAAb,IAAmBM,SAAS,CAAE,mBAAqBC,SAAS3B,EAAMe,cAAlE,KARN,gBAYfc,MAAMC,GAAaC,MAAM,SAAAC,GAAC,OAAEA,EAAEC,MAAJ,IAAYF,KAAtC,yCAA4C,WAAOG,GAAP,iGAEpCC,EAAkB,CAClBC,SAAU,WACVC,QAAS,CACT,WAAY,CACRC,QAASJ,IAGbK,SAAS,CACTC,gBAAgB,CACZ,IAAK,CACL,IAAI,CAAC,SAKbxG,QAAQC,IAAR,sBAA2BwG,KAAKC,UAAU1C,EAAM2C,aAjBR,UAkBhBC,EAAAA,EAAAA,IAAgBC,EAAAA,GAAAA,IAlBA,UAkBlCC,EAlBkC,OAmBpCC,EAAe,IAAIC,UACL,IAAdF,EApBoC,uBAoBZG,EAAAA,EAAAA,MApBY,mBAoBU,GApBV,cAqBxCF,EAAaG,OAAO,eAAgBT,KAAKC,UAAUP,IArBX,UAsBTN,MAAO7B,EAAMmD,cAAc,kBAAmB,CAAEC,OAAO,OAAOC,KAAMN,IAAgBhB,MAAK,SAACuB,GAAD,OAAeA,EAAYC,MAA3B,IAAmCxB,MAAK,SAACyB,GAAD,OAAYA,CAAZ,IAtBxH,eAsBlCC,EAtBkC,OAuBlCC,EAAMD,EAAiBC,IACvBC,EAAWF,EAAiBE,SAC5BC,EAAU,IAAIC,EAAAA,GAAgBH,EAAKC,EAAUG,EAAAA,IAzBX,UA0BjBF,EAAQG,OAAO/D,EAAMU,KAAKc,UAAWxB,EAAMU,KAAKkB,aAAaG,MAAK,SAACiC,GAAD,OAAMA,CAAN,IAAUC,OAAM,SAACxF,GAAD,OAAKA,CAAL,IA1BjE,WA0BlCyF,EA1BkC,OA2BxClI,QAAQC,IAAR,mBAAwBsF,EAAxB,wBAA+CkB,KAAKC,UAAUwB,EAASC,UACvEpB,EAAe,MACXmB,EAASE,KA7B2B,wBA8BpCnB,EAAAA,EAAAA,IAAYxE,GA9BwB,+BAmCrCyF,EAAS3C,QAnC4B,wBAoCpC0B,EAAAA,EAAAA,IAAYxE,GApCwB,kBAqC7BwB,GAAU,SAACmB,GAAD,eAAC,UAAcA,GAAf,IAAqBL,aAAc,mCAAoCL,MAAK,kBAAIU,EAAKV,MAAV,IAAgB2D,iBAAkBH,EAAS3C,QAAS+C,cAAc,WAAD,OAAaC,EAAAA,GAAAA,KAAb,iCAAyDL,EAAS3C,YAA9M,KArCmB,4CAA5C,uDAZe,yDAqDfvF,QAAQC,IAAR,wBArDe,kFAAH,sDA0DduI,EAAkB,yCAAG,WAAQ/F,EAAGgG,GAAX,oGACvB3D,EAAAA,EAAAA,IAAYrC,GACGiG,GAAY,EAEW,SAAlCjG,EAAEK,OAAO6F,aAAa,SAA0D,gBAAlClG,EAAEK,OAAO6F,aAAa,SAA+D,aAAlClG,EAAEK,OAAO6F,aAAa,QAJpG,sBAMdlG,EAAEK,OAAO8F,MAAM7I,OAAS,GAA8B,OAAzBiE,EAAMU,KAAKS,WAN1B,0CAMuD8B,EAAAA,EAAAA,IAAYxE,IANnE,OAM8EoG,EAAepG,EAAEK,OAAO8F,MANtG,YAOdC,EAAa9I,OAAS,GAPR,wBAOc0C,EAAEK,OAAO5B,UAAUE,OAAO,YAPxC,mBAO4D6F,EAAAA,EAAAA,IAAYxE,IAPxE,yBASbrD,EAAiByJ,EAAc,sBAAuB,kBAAmB,IAAI,YAAkC,IAAD,eAA9BC,EAA8B,KAAzBC,EAAyB,KAAbC,EAAa,KAEhH,OADaD,EACD,OAARD,GAAkBC,EAAWhJ,SAAW8I,EAAa9I,SACrDkH,EAAAA,EAAAA,IAAYxE,GACLoB,GAAa,SAACuB,GAAD,eAAC,UAAYA,GAAb,IAAmBO,SAAU3B,EAAMe,aAAcW,SAAkB,OAARoD,EAAc,CAACA,GAAK,CAAE,4DAAjF,MAGpBnJ,SAASC,eAAe,aAAaD,SAASC,eAAe,WAAWqJ,YAAgBJ,EAAa9I,OAAS,EAAG,OAAO,iBAC5HiE,EAAMU,KAAKS,UAAY6D,GAChB/B,EAAAA,EAAAA,IAAYxE,GACtB,IAnBkB,6CAwBa,YAAhCA,EAAEK,OAAO6F,aAAa,MAxBH,oBAyBnBO,EAAmC,OAArBlF,EAAMmF,WAAuBnF,EAAMkB,SAArC,UAA8ClB,EAAMU,KAAK0E,OAAQpF,EAAMmF,mBAAvE,aAA8C,EAAuCE,KAC7FC,EAAO,GACXtJ,QAAQC,IAAR,gBAAsBwI,IACH,OAAfA,IACA,UAAAzE,EAAMU,KAAK0E,cAAX,SAAmB/E,SAAQ,SAAChC,EAAIiC,EAAMC,GAC9BlC,EAAIgH,OAASH,GACbI,EAAKvI,KAAM,oDAElB,KAGCmI,GAAaI,EAAKvI,KAAM,uBACxBiD,EAAMU,KAAKS,WAAamE,EAAKvI,KAAM,qCAChC,OAAJuI,QAAI,IAAJA,OAAA,EAAAA,EAAMvJ,QAAS,GAtCD,wBAsCOkH,EAAAA,EAAAA,IAAYxE,GAtCnB,kBAsC8BoB,GAAa,SAACuB,GAAD,eAAC,UAAYA,GAAb,IAAmBO,SAAU3B,EAAMe,aAAcW,SAAS4D,GAA1D,KAtC3C,WAyCvBZ,EAA2C,YAAhCjG,EAAEK,OAAO6F,aAAa,QAAuB,EAElD3E,EAAMU,KAAKS,WAA+C,YAAhC1C,EAAEK,OAAO6F,aAAa,MA3C/B,wBA4CnB3E,EAAMU,KAAK6E,WAAgBvF,EAAMU,KAAK6E,YAAgD,KAAlC,UAAAvF,EAAMU,KAAK6E,kBAAX,eAAuBxJ,QAAkBiE,EAAMU,KAAK6E,WAAd,GA5CvE,kBA6CZ3E,KA7CY,QAgDnB4E,EAAWxF,EAAMU,KAAKS,UAAUpF,OAChB,OAAf0I,GAAwBC,IAAc1E,EAAMU,KAAK0E,OAAOrI,KAAK,CAAEsI,KAAMH,EAAWzE,OAAQ,KAAOgE,EAAazE,EAAMU,KAAK0E,OAAOrJ,OAAO,GAEhIK,EAAI,EAnDS,aAmDNA,EAAIoJ,GAnDE,oBAoDbC,EAASzF,EAAMU,KAAKS,UAAU/E,GAAGG,KACjCC,EAAMwD,EAAMU,KAAKS,UAAU/E,GAAGI,KAEjCkI,EAvDgB,iBAwDXgB,MAAMC,QAAQ3F,EAAMU,KAAK6E,YACzBvF,EAAMU,KAAK6E,WAAWxI,KAAK,CAAC6I,WAAYxJ,EAAGG,KAAMkJ,EAAQjJ,IAAAA,IAEzDwD,EAAMU,KAAK6E,WAAa,CAAC,CAACK,WAAYxJ,EAAGG,KAAMkJ,EAAQjJ,IAAAA,IA3D5C,yCA8DTwD,EAAMU,KAAK0E,OAAQX,GAAahE,OAAO1D,KAAK,CAAE6I,WAAYxJ,EAAGG,KAAMkJ,EAAQjJ,IAAAA,IA9DlE,QAmDQJ,IAnDR,iDAkEhBwE,KAlEgB,4CAAH,wDAqElBiF,EAAQ,yCAAG,WAAOpH,GAAP,yEACa,4CAAvBuB,EAAMe,aADI,yCAEFd,GAAS,SAACmB,GAAD,eAAC,UAAaA,GAAd,IAAoBL,aAAc,yCAA0C+E,SAAU1E,EAAKL,cAA3F,KAFP,WAITD,EAAAA,EAAAA,MACyB,OAArBd,EAAMmF,WALD,uBAMLnF,EAAMU,KAAK0E,OAAOW,OAAQ/F,EAAMmF,WAAY,IAC5ClC,EAAAA,EAAAA,MAPK,kBAQErC,KARF,gCAUFA,KAVE,4CAAH,sDAcRoF,EAAc,SAACvH,IACjBqC,EAAAA,EAAAA,IAAYrC,GACZ,IAAMwH,EAAYjG,EAAMkB,SACxB,GAA0B,4CAAvBlB,EAAMe,aACL,OAAOd,GAAS,SAACmB,GAAD,eAAC,UAAYA,GAAb,IAAmBL,aAAc,6CAAjC,IAEhB,IAAImF,GAAgB,EACpB,OAAMC,EAAAA,EAAAA,IAAgBF,EAAW,CAAE,IAAK,IAAI,QAAYG,EAAAA,EAAAA,IAAmBH,EAAW,EAAG,KACzFjG,EAAMU,KAAK0E,OAAO/E,SAAQ,SAAChC,EAAKiC,EAAMC,GAC7BlC,EAAIgH,OAASY,EAAUxE,SACxByE,GAAgB,EAEvB,KAEsB,IAAlBA,IACDjD,EAAAA,EAAAA,IAAYxE,GACLoB,GAAa,SAACuB,GAAD,eAAC,UAAYA,GAAb,IAAmBM,SAAS,CAAE,sDAA9B,MAGxB1B,EAAMU,KAAK0E,OAAQpF,EAAMmF,YAAaE,KAAOrF,EAAMkB,SAE5CN,WAd2FqC,EAAAA,EAAAA,IAAYxE,EAgBrH,EAEK4H,EAAe,yCAAG,WAAO5H,GAAP,4EAChB6H,EAAatG,EAAMU,KAAK0E,OAAQpF,EAAMmF,YAAa3E,SACvD7E,SAASC,eAAe,qBAAqBsB,UAAUqJ,OAAO,4BAC9D5K,SAASC,eAAe,qBAAqBsB,UAAUqJ,OAAO,yBAC9D5K,SAASC,eAAe,2BAA2BsB,UAAUqJ,OAAO,yBACpE5K,SAASC,eAAe,2BAA2BsB,UAAUqJ,OAAO,0BACpE5K,SAASC,eAAe,+BAA+BoD,WAA4B,IAAfsH,EAAsB,KAAK,MAC/FtG,EAAMU,KAAK0E,OAAQpF,EAAMmF,YAAa3E,UAAYR,EAAMU,KAAK0E,OAAQpF,EAAMmF,YAAa3E,SACxFP,GAAS,SAACmB,GAAD,OAAQA,CAAR,IARW,2CAAH,sDAuCfoF,EAAW,yCAAG,WAAQ/H,EAAGgI,GAAX,gHAChB3F,EAAAA,EAAAA,IAAYrC,MACNiI,EAAYxG,EAAcF,EAAMU,KAAK0E,SAC1BqB,GAHD,uBAIZxD,EAAAA,EAAAA,IAAYxE,GAJA,kBAKLoB,GAAa,SAACuB,GAAD,eAAC,UAAYA,GAAb,IAAmBM,SAAU,CAAC,+FAAD,OAAiGgF,EAAjG,6BAAwI/E,SAAU3B,EAAM2G,iBAArL,KALR,wBAOG/D,EAAAA,EAAAA,IAAgBC,EAAAA,GAAAA,IAPnB,WAQD,KADX+D,EAPY,mDAQe,GARf,eAUhB5G,EAAMU,KAAKmG,QAAUD,EAEfE,EAZU,yCAYY,WAAQC,EAAU3B,GAAlB,0FACpB4B,EAAkB,GAAIhH,EAAMU,KAAKuG,UAAY,GACjD7B,EAAO8B,UACC5G,EAAO,EAHS,YAGNA,EAAO8E,EAAOrJ,QAHR,iBAIpBiL,EAAgBjK,KAAM,CAAEsI,KAAMD,EAAO9E,GAAM+E,KAAM7E,SAAU4E,EAAO9E,GAAME,SAAUC,OAAO,KAChF0G,EAAM,EALK,YAKFA,EAAM/B,EAAO9E,GAAMG,OAAO1E,QALxB,wBAMVqL,EAAU,CACZC,eAAe,CACfhC,KAAK,GAAD,OAAKD,EAAO9E,GAAM+E,KAAlB,aAA2BD,EAAO9E,GAAMG,OAAO0G,GAAKvB,YACxD0B,UAAW,CACPC,YAAY,6DACZlC,KAAK,GAAD,OAAKD,EAAO9E,GAAM+E,KAAlB,aAA2BD,EAAO9E,GAAMG,OAAO0G,GAAKvB,cAG5D4B,cAAe,CACXC,WAAY,IAGhBC,EAAYd,EAAO,KAAKe,KAAKC,MAAM,IAAIxC,EAAO9E,GAAMG,OAAO0G,GAAK3K,IAChEqL,EAAW,IAAI7E,SAnBH,WAoBS8E,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,IAAuB3C,EAAO9E,GAAMG,OAAO0G,GAAK5K,OApBtE,eAoBVyL,EApBU,OAqBhBH,EAAS3E,OAAQ,MAAO8E,EAAYN,GACpCG,EAAS3E,OAAQ,cAAeT,KAAKC,UAAU0E,IAtB/B,UAuBSvF,MAAM,GAAD,OAAK7B,EAAMmD,cAAX,UAAkC,CAACC,OAAO,OAAQC,KAAMwE,IAAY9F,MAAK,SAACkG,GAAD,OAAQA,EAAK1E,MAAb,IAAqBxB,MAAK,SAACmG,GAAD,OAAWA,CAAX,IAvBjH,QAuBVC,EAvBU,OAwBhB/C,EAAO9E,GAAMG,OAAO0G,GAAKiB,SAAWD,EAAWE,SAC/CrI,EAAMU,KAAKuG,UAAUlK,KAAK,CAAE6I,WAAYR,EAAO9E,GAAMG,OAAO0G,GAAKvB,WAAY0C,YAAYhI,EAAMiI,YAAYpB,EAAKiB,SAASD,EAAWE,WACpIrB,EAAgB1G,GAAMG,OAAO1D,KAAK,CAAE6I,WAAYR,EAAO9E,GAAMG,OAAO0G,GAAKvB,WAAY0C,YAAYhI,EAAMiI,YAAYpB,EAAKiB,SAASD,EAAWE,WA1B5H,QAKgClB,IALhC,uBAGgB7G,IAHhB,gDA8BjB0G,GA9BiB,4CAZZ,wDA6CVwB,EA7CU,yCA6CgB,WAAQC,GAAR,0FACxBC,EAAa,GACTC,EAAI,EAFgB,YAEbA,EAAIF,EAAY1M,QAFH,wBAGlBqL,EAAU,CACZC,eAAe,CACfhC,KAAK,cAAD,OAAgBsD,EAAhB,KACJrB,UAAW,CACPC,YAAY,+DAGhBC,cAAe,CACXC,WAAY,IAKhBC,EAAYd,EAAO,KAAKe,KAAKC,MAAM,IAAIa,EAAYE,GAAGnM,IACtDqL,EAAW,IAAI7E,SAjBK,SAkBAnB,OAAOkG,EAAAA,EAAAA,IAAwBU,EAAYE,GAAGpM,OAlB9C,cAkBlBqM,EAlBkB,iBAmBCA,EAAUC,OAnBX,eAmBlBb,EAnBkB,OAoBxBH,EAAS3E,OAAQ,MAAO8E,EAAYN,GAEpCG,EAAS3E,OAAQ,cAAeT,KAAKC,UAAU0E,IAC/CpL,QAAQC,IAAR,mBAvBwB,UAwBD4F,MAAM,GAAD,OAAK7B,EAAMmD,cAAX,UAAkC,CAACC,OAAO,OAAQC,KAAMwE,IAAW9F,MAAK,SAACkG,GAAD,OAAQA,EAAK1E,MAAb,IAAqBxB,MAAK,SAACmG,GAAD,OAAUA,CAAV,IAxBtG,QAwBlBY,EAxBkB,OAyBxBL,EAAYE,GAAGP,SAAWU,EAAST,SACnCK,EAAW3L,KAAK,CAAE6I,WAAY6C,EAAYE,GAAG/C,WAAY2C,YAAaI,EAAGP,SAAUU,EAAST,WA1BpE,QAEWM,IAFX,gDA4BrBD,GA5BqB,4CA7ChB,sDA4EVK,EA5EU,yCA4EM,WAAOC,GAAP,kFAElB,IADIC,EAAM,EAAOC,EAAa,GAAa5C,EAAa,GACjD2C,EAAMD,EAAOjN,QACbiN,EAAOC,GAAKzI,UACX8F,EAAWvJ,KAAKiM,EAAOC,GAAK5D,MAEhC8D,EAAMH,EAAOC,GAAKxI,OAAO2I,KAAI,SAAEC,EAAGC,GAC9B,MAAO,CAAEC,WAAYP,EAAOC,GAAK5D,KAAMO,WAAYoD,EAAOC,GAAKxI,OAAO6I,GAAG1D,WAAY4D,MAAOH,EAAEjB,SACjG,IAEDc,EAAWnM,KAAKoM,GAChBF,IAXc,OAalBE,EAAM,KAbY,kBAcX,CAACD,EAAY5C,IAdF,2CA5EN,sDA6FVmD,EA7FU,yCA6FS,WAAQP,EAAYQ,GAApB,4EAErB,IADIC,EAAO,EACHA,EAAOT,EAAWnN,QAClB2N,EAAWE,SAASV,EAAWS,GAAM,GAAGJ,aACxCL,EAAWS,GAAM5M,KAAK,CAACwM,WAAYL,EAAWS,GAAM,GAAGJ,WAAYC,MAAO,QAE9EG,IANiB,yBAQdT,GARc,2CA7FT,wDAwGVW,EAxGU,yCAwGS,WAAQb,EAAQc,GAAhB,uFACjBC,EAAI,EADa,SACgBvB,EAAyBsB,GADzC,OAErB,IADiBrB,EADI,OAEdsB,EAAIf,EAAOjN,QACViO,EAAQvB,EAAa9K,KAAKC,MAAMD,KAAKE,SAAW4K,EAAY1M,SAChEiN,EAAOe,GAAGhE,OAAO,EAAG,EAAG,CAAEwD,WAAY,aAAc3D,WAAYoE,EAAMpE,WAAY4D,MAAOQ,EAAM5B,WAC9F2B,IALiB,2CAxGT,wDAiHVE,EAjHU,yCAiHU,WAAQC,EAAgBC,EAAaC,GAArC,yFAClBpB,EAAS,GADS,SAGKlC,EAAqBoD,EAAgBC,GAH1C,cAGhBE,EAHgB,gBAIGtB,EAAcsB,GAJjB,cAIhBC,EAJgB,gBAKOb,EAAiBa,EAAW,GAAIA,EAAW,IALlD,cAKhBC,EALgB,iBAOhBzM,EAA8ByM,EAAgBvB,GAP9B,yBAQhB1L,EAAQ0L,GARQ,cAUV,OAAPoB,QAAO,IAAPA,OAAA,EAAAA,EAASrO,QAAS,GAVD,kCAUa8N,EAAkBb,EAAQoB,GAVvC,iCAWfpB,GAXe,4CAjHV,oEA+HGiB,EAAmBjK,EAAMU,KAAKc,UAAWxB,EAAMU,KAAK0E,OAAQpF,EAAMU,KAAK6E,YA/H1E,eA+HZiF,EA/HY,OAgIVC,EAAiBD,EAAMzO,OACvB2O,EAjIU,yCAiIC,WAAOC,GAAP,qFACTC,EAAM,KAENA,EADgB,kBAATD,EACDA,EAEAlI,KAAKC,UAAUiI,GAEnBE,GAAQ,IAAIC,aAAcC,OAAOH,GAAK7O,OAP/B,kBAQN8O,GARM,2CAjID,gEA4IOH,EAASF,GAAOzI,MAAK,SAACiJ,GAAD,OAAOA,CAAP,IA5I5B,WA4IVC,EA5IU,OA8IhBjP,QAAQC,IAAR,yBAA8BgP,EAA9B,WAEMC,EAhJU,yCAgJC,WAAOV,EAAOW,EAAOC,GAArB,qFACTvD,EAAW,IAAI7E,UACVE,OAAO,OAAQT,KAAKC,UAAU8H,IACvC3C,EAAS3E,OAAO,cAAeT,KAAKC,UAAUyI,IAHjC,SAIatJ,MAAOuJ,EAAQ,CAAChI,OAAO,OAAQC,KAAMwE,IAAW9F,MAAK,SAACsJ,GAAD,OAAQA,EAAK9H,MAAb,IAAqBxB,MAAK,SAACmG,GAAD,OAAUA,CAAV,IAJ5F,cAIPoD,EAJO,OAKbzD,EAAW,KALE,kBAMNyD,GANM,2CAhJD,0DAyJZH,EAAQ,CAAE9D,eAAe,CAAEhC,KAAMrF,EAAMU,KAAKc,UAAW8F,UAAW,CAAC,GAAKE,cAAe,CAAEC,WAAY,MAGtGwD,EAAW,KA5JE,kCA6JQC,EAAUV,EAAOW,EAAT,UAAmBnL,EAAMmD,cAAzB,gBA7JhB,QA6JZmI,EA7JY,OA8JZtP,QAAQC,IAAR,kBA9JY,wBAiKZqP,EAAc,CAACjD,SAAU,MAjKb,eAoKVkD,EApKU,yCAoKE,WAAOrC,EAAYrM,EAAOC,GAA1B,kFAEd,IADI0O,EAAc,GAAUC,EAASvC,EAAWnN,OADlC,WAELuN,GACL,IAAOoC,EAAiBxC,EAAWI,GAAGqC,QAAQ,SAAAtC,GAAC,MAAe,QAAZA,EAAEG,KAAL,IACzCoC,EAAwBF,EAAe3P,OACvC8P,EAASlQ,SAASgB,cAAc,UACtCkP,EAAOhP,MAAQA,EACfgP,EAAO/O,OAASA,EAGhB,IAFA,IAAMgP,EAAMD,EAAOE,WAAY,MAC3BC,EAAa,EACTC,EAAI,EAAGA,EAAIL,EAAuBK,IAAK,CAC3C,IAAKC,EAAgBR,EAAeO,GACpC,IAEI,IAAIE,EAAuB,IAANF,GAAajM,EAAMU,KAAK6E,WAAWxJ,OAAS,EAAIiE,EAAMU,KAAK6E,WAAWxJ,OAAOiE,EAAMU,KAAKuG,UAAUlL,OACvHqQ,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYE,IAAM,CAClC,IAAMC,EAAsB,IAANL,GAAajM,EAAMU,KAAK6E,WAAWxJ,OAAS,EAAIiE,EAAMU,KAAK6E,WAAW8G,GAAGrM,EAAMU,KAAKuG,UAAUoF,GACpH,GAAIC,EAAUlE,WAAa8D,EAAc1C,MAAO,CAAC,IAAD,aAC5CxN,QAAQC,IAAR,0BAA+BgQ,IAG/B,IAAIvP,EAAM,IAAI6P,MACVC,EAAsB,IAANP,GAAajM,EAAMU,KAAK6E,WAAWxJ,OAAS,EAAIuQ,EAAU/P,KAAKyD,EAAMU,KAAK0E,OAAOkH,EAAUhE,aAAa7H,OAAO6L,EAAU/D,aAAahM,KA6B1J,OA5BAG,EAAIW,KAAM0K,EAAAA,EAAAA,IAAuByE,GAEjC9P,EAAIE,iBAAkB,QAAtB,uBAA8B,8FAE1BkP,EAAIW,UAAU/P,EAAK,EAAG,EAAGG,EAAOC,GAC5BkP,IAAeJ,EAHO,kCAIIc,EAAAA,EAAAA,IAAkB,KAAMb,EAAOc,UAAU,cAJ7C,UAIhBC,EAJgB,OAKtBpB,EAAYzO,KAAM,CAAEsI,KAAK,gBAAD,OAAkBiE,GAAKuD,WAAYnB,EAAgBnP,KAAMqQ,IAC3EE,EANgB,yCAML,WAAQpM,EAAMqM,EAAUlG,EAASmG,EAAYC,GAA7C,qFACTC,EAAU,IAAIlK,UACVE,OAAO,OAAQT,KAAKC,UAAU1C,EAAMU,OAC5CwM,EAAQhK,OAAO,WAAYlD,EAAMU,KAAKc,WACtC0L,EAAQhK,OAAO,UAAWlD,EAAMU,KAAKkB,aACrCsL,EAAQhK,OAAO,UAAW0D,GAC1BsG,EAAQhK,OAAO,WAAY+J,GAG3BC,EAAU,MACNC,EAAc1K,KAAK2K,MAAM3K,KAAKC,UAAU2K,KAChChI,KAAOrF,EAAMU,KAAKc,UAAU8L,MAAM,KAAKC,KAAK,KAX3C,kBAYNtN,GAAS,SAACmB,GAAD,eAAC,UAAYA,GAAb,IAAmBV,MAAK,kBAAKU,EAAKV,MAAX,IAAiBc,UAAWJ,EAAKV,KAAKc,UAAWI,YAAaR,EAAKV,KAAKkB,YAAa4L,QAASR,EAAYvC,eAAAA,EAAgBgD,UAAW,CAACN,KAAgBpM,aAAc,mCAA3L,KAZH,4CANK,8DAoBlBuI,IAAOmC,EAAO,EApBI,kCAqBZqB,EAAS9M,EAAMU,KAAMV,EAAMU,KAAKc,UAAWoF,EAAQ4E,EAAaF,GArBpD,QAwB1BU,IAxB0B,6CA0B9B,aAlC4C,yBAkC5C,MAAMI,CACT,CACJ,CAIJ,CAHC,MAAOsB,GACL1R,QAAQC,IAAR,kCAAuCwG,KAAKC,UAAUgL,IAEzD,CACJ,CA3DS,EAELpE,EAAI,EAAGA,EAAImC,EAAQnC,IAAM,EAAzBA,GAFK,2CApKF,0DAmOVqE,EAnOU,yCAmOoB,WAAO3E,EAAQ4E,GAAf,gFAGhC,IAFMnC,EAAUmC,GAAS5E,EAAOjN,OAC5B8R,EAAa,GACTvE,EAAI,EAAGA,EAAImC,EAAQnC,IACvBuE,EAAW9Q,KAAKiM,EAAOM,IAJK,OAOhCkB,EAAQ,KAPwB,kBASzBe,EAAUsC,EAAY,IAAM,MATH,2CAnOpB,kEA+OMF,EAA4BnD,EAAO/D,GA/OzC,2DAAH,wDAkPXqH,EAAS,yCAAG,WAAOrP,GAAP,uFACdqC,EAAAA,EAAAA,MACIiN,EAAStP,EAAGA,EAAEK,OAAO,KACrBkP,EAAYD,EAAKnJ,MAEdqJ,EALO,yCAKY,WAAO5S,GAAP,kFAClB6S,EAAgB,GADE,UAEH7S,GAFG,IAEtB,IAFsB,iBAEbgB,EAFa,QAGd8R,EAAQ,IAAIC,WAChBD,EAAME,WAAN,uBAAkB,0FACTC,EAAYjS,EAAOgJ,KAAKiI,MAAM,MACzBvH,OAAQ1J,EAAOgJ,KAAKiI,MAAM,KAAKvR,OAAO,EAAG,GACnDmS,EAAcnR,KAAK,CAACsI,KAAMiJ,EAAUf,KAAK,KAAMrL,SAAUiM,EAAMI,SAE5DL,EAAcnS,SAAWV,EAASU,SACjCiE,EAAMU,KAAK+M,UAAYS,EACvBlO,EAAMe,aAAe,4CACrBd,GAAS,SAACmB,GAAD,OAAQA,CAAR,KACT6B,EAAAA,EAAAA,OATU,2CAalBkL,EAAMK,WAAWnS,EAjBC,EAEtB,uBAA8B,GAFR,0EALZ,+DA0BR4R,EAAiBD,GA1BT,2CAAH,sDA6BTS,EAAkB,SAAChQ,GACrB,IAAMI,EAAMJ,EAAEK,OACR4P,EAAQ7P,EAAI8F,aAAa,MACzBsB,EAAYpH,EAAI2K,MAAM/H,OAE5B,GAAKkN,EAAiB9P,EAAI2K,MAAQxJ,EAAMU,KAAKc,cAA7C,CACA,GAAmB,KAAdyE,EAAmB,OAAO,EAE/B,OAASyI,GACL,IAAK,eACD,KAAMvI,EAAAA,EAAAA,IAAgBF,EAAW,CAAE,IAAK,SAAYG,EAAAA,EAAAA,IAAmBH,EAAW,EAAG,IAA2C,YAAlCpH,EAAI2K,MAAQxJ,EAAMU,KAAKc,WACrHxB,EAAMU,KAAKc,UAAYyE,EACvBpH,EAAI+P,aAAa,cAAe3I,GAChC,MACJ,IAAK,iBACD,KAAME,EAAAA,EAAAA,IAAgBF,EAAW,CAAE,IAAK,SAAYG,EAAAA,EAAAA,IAAmBH,EAAW,EAAG,GAA4C,YAApCpH,EAAI2K,MAAQxJ,EAAMU,KAAKkB,aACpH5B,EAAMU,KAAKkB,YAAcqE,EACzBpH,EAAI+P,aAAa,cAAe3I,GAChC,MACJ,QACI,KAAME,EAAAA,EAAAA,IAAgBF,EAAW,CAAE,IAAK,SAAYG,EAAAA,EAAAA,IAAmBH,EAAW,EAAG,IAAqC,YAA5BpH,EAAI2K,MAAQxJ,EAAMkB,UAChHlB,EAAMkB,SAAW+E,EACjBpH,EAAI+P,aAAa,cAAe3I,GAjByB,CAqBpE,EAED,SAAS4I,IACL,SAASC,EAAT,GAAiC,IACzBC,EADWC,EAAa,EAAbA,UACGC,EAAgB,GAAIC,EAASvT,SAASC,eAAe,gBAAiBuT,EAAW,MAEnGC,EAAAA,EAAAA,YAAU,WACN,GAAG/O,QAAQgP,KAAK1T,SAAS2T,uBAAuB,aAAa,SAACC,GAC1DN,EAAclS,KAAMwS,EAAQC,wBAAwBC,IAAM9T,SAASC,eAAe,SAAS8T,UAC9F,GACJ,GAAC,CAAER,EAAQD,IAEZ,IAAMU,EAAyB,SAAEC,EAAOC,GACpC,GAA0C,aAAvCD,EAAM9Q,OAAO6F,aAAa,WACzBoK,GAAe,EAEG,cAAfa,EAAME,MAAuC,eAAfF,EAAME,MAAsB,CACzD,IAAoB,IAAjBf,EAAwB,OAAO,EAClC,IAAIgB,EAAMH,EAAM9Q,OAAQkR,EAAWD,EAAIE,YAAaC,EAAQvU,SAASC,eAAe,SAAUuU,EAAsBN,EAAYO,EAAczU,SAAS2T,uBAAuB,YAAae,EAAcN,EAAIO,aAAa,EAC1NP,EAAI7S,UAAUC,IAAI,oBAClBgS,EAAWgB,EACXJ,EAAIQ,MAAM1T,MAAQmT,EAAS,KAC3BD,EAAIQ,MAAMd,IAAsB,eAAfG,EAAME,KAAyBF,EAAMY,QAAQ,GAAGC,QAAUP,EAAMR,UAAaW,EAAa,KAAOT,EAAMa,QAAUP,EAAMR,UAAaW,EAAa,KAElK7Q,OAAOkR,YAAc,SAACjS,IACE,IAAjBsQ,IACCgB,EAAIQ,MAAMd,IAAQhR,EAAEgS,QAAUP,EAAMR,UAAaW,EAAa,KAC9DpB,EAAc5O,SAAQ,SAACkP,EAASlD,GACvB8D,EAAsB9D,GACd5N,EAAEgS,QAAUP,EAAMR,UAAc,GAASH,GAAiB9Q,EAAEgS,QAAUP,EAAMR,UAAc,GAASH,EAAU,KAClHtQ,EAAWmR,EAAY/D,GAAGjN,WAAY2Q,EAAI3Q,YAC1C+P,EAAW9C,EACX8D,EAAsB9D,GAI1B8D,EAAsB9D,GACb5N,EAAEgS,QAAUP,EAAMR,UAAc,GAASH,EAAU,IAAY9Q,EAAEgS,QAAUP,EAAMR,UAAc,GAASH,EAAU,MACvHtQ,EAAW8Q,EAAI3Q,WAAYgR,EAAY/D,GAAGjN,YAC1C+P,EAAW9C,EACX8D,EAAsB9D,EAGjC,IAER,EAED7M,OAAOmR,YAAc,SAAClS,IACE,IAAjBsQ,IACCgB,EAAIQ,MAAMd,IAAUhR,EAAE+R,QAAQ,GAAGC,QAAUP,EAAMR,UAAcW,EAAc,KAC7EpB,EAAc5O,SAAQ,SAACkP,EAASlD,GACvB8D,EAAsB9D,GACf5N,EAAE+R,QAAQ,GAAGC,QAAUP,EAAMR,UAAc,GAAQH,GAAgB9Q,EAAE+R,QAAQ,GAAGC,QAAUP,EAAMR,UAAc,GAASH,EAAU,KACrItQ,EAAWmR,EAAY/D,GAAGjN,WAAY2Q,EAAI3Q,YAC1C+P,EAAW9C,EACX8D,EAAsB9D,GAIzB8D,EAAsB9D,GACf5N,EAAE+R,QAAQ,GAAGC,QAAUP,EAAMR,UAAc,GAASH,EAAU,IAAY9Q,EAAE+R,QAAQ,GAAGC,QAAUP,EAAMR,UAAc,GAASH,EAAU,MAC5ItQ,EAAY8Q,EAAI3Q,WAAYgR,EAAY/D,GAAGjN,YAC3C+P,EAAW9C,EACX8D,EAAsB9D,EAGjC,IAGR,CACJ,CAER,EAEKuE,EAAmB,SAAEhB,EAAOiB,GAK9B,GAJ0C,aAAvCjB,EAAM9Q,OAAO6F,aAAa,WAA0B7D,EAAAA,EAAAA,MAEvDiO,GAAe,EAEI,YAAfa,EAAME,MAAqC,aAAfF,EAAME,MAAsC,gBAAfF,EAAME,KAAuB,CAC5EF,EAAM9Q,OACZ5B,UAAUE,OAAO,oBAIrB,IAHA,IAAIgT,EAAczU,SAAS2T,uBAAuB,YAC9CrD,EAAI,EAEAA,EAAImE,EAAYrU,QACpBqU,EAAYnE,GAAG/O,UAAUE,OAAO,mBAChCgT,EAAYnE,GAAG/O,UAAUE,OAAO,eAChC6O,IAKJ,GAFA8C,GAAe,EAE4B,aAAvCa,EAAM9Q,OAAO6F,aAAa,SAAyB,CACnD,GAAIkM,IAAc1B,EAAS,CACvB,IAAI2B,EAAY9Q,EAAMU,KAAK0E,OAAOW,OAAQ8K,EAAW,GAAI,GACzD7Q,EAAMU,KAAK0E,OAAOW,OAAOoJ,EAAU,EAAG2B,EACzC,CAED,OADA7Q,GAAS,SAACmB,GAAD,iBAAaA,EAAb,KACF6B,EAAAA,EAAAA,KACV,CACJ,CAEJ,EAEK8N,EAAQ,yCAAG,WAAQtS,EAAGuS,EAAY1Q,GAAvB,4EACb7B,EAAEwS,kBACIpS,EAAMJ,EAAEK,QACP0K,QACHxJ,EAAMU,KAAK0E,OAAQ4L,GAAavQ,OAAQH,GAAOsF,WAAa/G,EAAI2K,MAChE3K,EAAI+P,aAAc,cAAe/P,EAAI2K,QAL5B,2CAAH,0DAkBR0H,EAAiB,WAEnB,IADA,IAAIC,EAAU,GAAIC,EAAcpR,EAAMU,KAAK0E,OAAQ4J,EAAUvR,OAAQgD,OAAO1E,OADrD,WAEbsV,GACN,IAAIC,EAAM,qBAAiBtR,EAAMU,KAAK0E,OAAQ4J,EAAUvR,OAAQgD,OAAQ4Q,GAAQ7U,IAAtE,mBAAoFwD,EAAMU,KAAK0E,OAAQ4J,EAAUvR,OAAQgD,OAAQ4Q,GAAQ9U,MACnJgV,EAAYvR,EAAMU,KAAK0E,OAAQ4J,EAAUvR,OAAQgD,OAAQ4Q,GAAQzL,WACjEuL,EAAQpU,MAAK,iBAAiByU,UAAU,wBAA3B,WACT,gBAAKA,UAAU,UAAf,UACI,gBAAKnU,IAAKiU,EAAQG,IAAI,QAE1B,iBAAKD,UAAU,YAAf,WACI,kBAAOA,UAAU,eAAeE,GAAI,aAAaL,EAAOM,YAAcJ,EAAYzB,KAAK,OAAOzK,KAAK,OAAOuM,QAAS,SAACnT,GAAMA,EAAEK,OAAO0K,MAAQ+H,CAAU,EAAEM,SAAU,SAACpT,GAAD,OAAKsS,EAAUtS,EAAGuQ,EAAUvR,MAAO4T,EAAnC,KACjK,mBAAQG,UAAU,YAAYI,QAAU,SAACnT,GAAD,OApBvC,SAAEA,EAAGuS,EAAYK,GAM9B,OALAvQ,EAAAA,EAAAA,MACAd,EAAMU,KAAK0E,OAAQ4L,GAAavQ,OAAOsF,OAAQsL,EAAO,GACC,IAAlDrR,EAAMU,KAAK0E,OAAQ4L,GAAavQ,OAAO1E,QAAeiE,EAAMU,KAAK0E,OAAOW,OAAQiL,EAAY,IAEjG/N,EAAAA,EAAAA,MACOhD,GAAS,SAACmB,GAAD,iBAAaA,EAAb,GACnB,CAa4D0Q,CAAUrT,EAAGuQ,EAAUvR,MAAO4T,EAAnC,EAAxC,oBANeA,GALJ,EAEbA,EAAQ,EAAGA,EAAQD,EAAaC,IAAW,EAA3CA,GAaV,OAAOF,CACV,EAED,OACI,iBAAKK,UAAU,oBAAoBO,YAAa,SAACtT,GAAD,OAAKkR,EAAwBlR,EAAGuQ,EAAUvR,MAA1C,EAAmDuU,UAAW,SAACvT,GAAD,OAAKmS,EAAkBnS,EAAGuQ,EAAUvR,MAApC,EAA6CwU,aAAc,SAACxT,GAAD,OAAKkR,EAAwBlR,EAAGuQ,EAAUvR,MAA1C,EAAmDyU,cAAe,SAACzT,GAAD,OAAKmS,EAAkBnS,EAAGuQ,EAAUvR,MAApC,EAA6C0U,WAAY,SAAC1T,GAAD,OAAKmS,EAAkBnS,EAAGuQ,EAAUvR,MAApC,EAApS,WACI,iBAAK+T,UAAU,WAAf,WACI,oBAAQA,UAAU,eAAeI,QAAS,SAACnT,GAAD,OArd5C,SAAEA,EAAG6B,IACnBQ,EAAAA,EAAAA,MAEA,IADA,IAAIsR,EAAK,EACFA,EAAKzW,SAAS2T,uBAAuB,oBAAqBvT,QAC1DqW,IAAO9R,IACF3E,SAAS2T,uBAAuB,oBAAoB8C,GAAIlV,UAAU6B,SAAS,aAC3EpD,SAAS2T,uBAAuB,oBAAoB8C,GAAIlV,UAAUC,IAAI,YAEvExB,SAAS2T,uBAAuB,iBAAiB8C,GAAIlV,UAAU6B,SAAS,mBACvEpD,SAAS2T,uBAAuB,iBAAiB8C,GAAIlV,UAAUE,OAAO,mBAG9EgV,IAGDzW,SAAS2T,uBAAuB,oBAAoBhP,GAAMpD,UAAU6B,SAAS,aAC5EpD,SAAS2T,uBAAuB,iBAAiBhP,GAAMpD,UAAUC,IAAI,kBACrExB,SAAS2T,uBAAuB,oBAAoBhP,GAAMpD,UAAUE,OAAO,YAC3EzB,SAAS2T,uBAAuB,gBAAgBhP,GAAMiQ,MAAM8B,gBAAkB,uBAE9E1W,SAAS2T,uBAAuB,iBAAiBhP,GAAMpD,UAAUE,OAAO,kBACxEzB,SAAS2T,uBAAuB,oBAAoBhP,GAAMpD,UAAUC,IAAI,YACxExB,SAAS2T,uBAAuB,gBAAgBhP,GAAMiQ,MAAM8B,gBAAkB,uBAGlFpP,EAAAA,EAAAA,KACH,CA2bkEqP,CAAW7T,EAAGuQ,EAAUvR,MAA7B,EAA1C,WACI,gBAAK+T,UAAU,UAAUjB,MAAO,CAAC1T,MAAM,OAAQ0V,MAAO,OAAQzV,OAAO,OAAQ0V,aAAa,MAAOC,KAAK,QAAShD,IAAI,QAASiD,UAAU,aAAcL,gBAAgB,sBAAuBT,QAAS,WAAK,OAAO,CAAM,EAAtN,UACI,gBAAKJ,UAAU,WAAWjB,MAAO,CAAC1T,MAAM,MAAOC,OAAO,MAAO6V,OAAO,MAAOH,aAAa,MAAOH,gBAAiBrS,EAAMU,KAAK0E,OAAQ4J,EAAUvR,OAAQ+C,SAAU,iBAAiB,SAAUkS,UAAU,aAAcE,WAAY5S,EAAMU,KAAK0E,OAAQ4J,EAAUvR,OAAQ+C,SAAU,+BAA+B,+BAAgCqS,UAAW7S,EAAMU,KAAK0E,OAAQ4J,EAAUvR,OAAQ+C,SAAU,+BAA+B,gCAAra,UACI,gBAAKgR,UAAU,YAAYjB,MAAO,CAAC1T,MAAM,MAAOC,OAAO,MAAO2S,IAAI,MAAOqD,MAAM,MAAON,aAAa,MAAOH,gBAAiBrS,EAAMU,KAAK0E,OAAQ4J,EAAUvR,OAAQ+C,SAAU,qBAAqB,qBAAsBkS,UAAU,qBAIvO,gBAAKlB,UAAU,aAAf,UACI,gCAASxR,EAAMU,KAAK0E,OAAQ4J,EAAUvR,OAAQ4H,KAA9C,UAEJ,gBAAKmM,UAAU,0BAAf,UACI,gBAAKA,UAAU,gBAAgBnU,IAAI,0BAA0BoU,IAAI,WAGzE,gBAAKD,UAAU,iBAAf,UACI,gBAAKA,UAAU,sBAAsBI,QAAS,SAACnT,GAAD,OAAKwB,GAAS,SAACmB,GAAD,eAAC,UAAYA,GAAb,IAAmB+D,WAAW6J,EAAUvR,MAAOsD,aAAc,2CAA7D,GAAd,EAA9C,UACI,gBAAK1D,IAAI,kBAAkBoU,IAAI,uBAI3C,iBAAKD,UAAU,4BAAf,WACI,mBAAQA,UAAU,iBAAiBI,QAAS,kBAAI3R,GAAS,SAACmB,GAAD,eAAC,UAAYA,GAAb,IAAmB+D,WAAW6J,EAAUvR,MAAOsD,aAAc,yCAA7D,GAAb,EAA5C,gBACA,SAACmQ,EAAD,SAIf,CAED,GAAGlR,EAAMU,KAAK0E,OAAOrJ,OAAS,EAAE,CAE5B,IADA,IAAIgX,EAAW/S,EAAMU,KAAK0E,OAAOrJ,OAAQiX,EAAY,EAAG7B,EAAU,GACjD6B,EAAYD,EAAUC,IACnC7B,EAAQpU,MAAK,SAAC+R,EAAD,CAAQE,UAAW,CAAEvR,MAAMuV,IAAkBA,IAE9D,OAAO7B,CACV,CACJ,CAID,SAAS8B,IAAS,IAAD,EAkBb,IAAG,UAAAjT,EAAMU,KAAK0E,cAAX,eAAmBrJ,QAAS,GACxBiE,EAAMU,KAAK6E,WAAW,CAGrB,IAFA,IAAM2N,EAAWlT,EAAMU,KAAK6E,WAAWxJ,OAAYoX,EAAU,GADxC,WAGX9B,GACN,IAAM5L,EAAS,qBAAezF,EAAMU,KAAK6E,WAAW8L,GAAO7U,IAA5C,YAA2DwD,EAAMU,KAAK6E,WAAW8L,GAAO9U,KACvG4W,EAAQpW,MAAM,iBAAiByU,UAAU,mBAA3B,WAA8C,iBAAKA,UAAU,iBAAf,WAAgC,gBAAKnU,IAAKoI,EAAQgM,IAAI,MAAI,gBAAKD,UAAU,YAAf,UAA2B,kBAAOA,UAAU,kBAAkB1B,KAAM,OAAQ6B,YAAc3R,EAAMU,KAAK6E,WAAY8L,GAAQzL,WAAagM,QAAU,SAACnT,GAAOA,EAAEK,OAAO0K,MAAQxJ,EAAMU,KAAK6E,WAAY8L,GAAQzL,UAAW,EAAGiM,SAAU,SAACpT,GAAD,OAvB/U,SAAEA,EAAG2U,GACpB3U,EAAEwS,iBAAkB,IAAMpS,EAAMJ,EAAEK,OAE9BD,EAAI2K,QACJxJ,EAAMU,KAAK6E,WAAY6N,GAAexN,WAAa/G,EAAI2K,MACvD3K,EAAI+P,aAAa,cAAe/P,EAAI2K,OAE3C,CAgBsW6J,CAAY5U,EAAG4S,EAApB,UAA2C,mBAAQG,UAAU,QAAQE,GAAI,yBAAyBL,EAAOO,QAAU,SAACnT,GAAD,OAdvc,SAAEA,EAAG2U,GAAiB,IAAD,EAK/B,OAJAtS,EAAAA,EAAAA,MACAd,EAAMU,KAAK6E,WAAWQ,OAAQqN,EAAc,GACN,KAAlC,UAAApT,EAAMU,KAAK6E,kBAAX,eAAuBxJ,gBAAwBiE,EAAMU,KAAK6E,WAC9DtF,GAAS,SAACmB,GAAD,iBAAaA,EAAb,KACF6B,EAAAA,EAAAA,KACV,CAQydqQ,CAAO7U,EAAG4S,EAAf,EAAxE,iBAAzWA,GALP,EAGXA,EAAQ,EAAGA,EAAQ6B,EAAU7B,IAAU,EAAvCA,GAKV,OAAQ,qCAAG,iBAAKG,UAAU,eAAf,eAA+B,4CAA/B,OAAH,IAAqE2B,EAArE,KAA8E,iBAAK3B,UAAU,aAAaE,GAAG,WAAWE,QAAS,SAACnT,GAAD,OAAKwB,GAAS,SAACmB,GAAD,eAAC,UAAYA,GAAb,IAAmBL,aAAa,wCAAhC,GAAd,EAAnD,eAA8I,iBAAKyQ,UAAU,oBAAf,eAAoC,gCAApC,OAA9I,KAAwM,2CAAxM,OAA9E,MACX,CAER,CAED,IAAI7Q,EAAiBX,EAAMU,KAAN,eAA8B6S,EAAa,CAAC,EASjE,SAASC,IAAc,IAAD,EAClB,IAAG,UAAAxT,EAAMU,KAAK8M,eAAX,eAAoBzR,QAAS,EAAE,CAG9B,IAFA,IAAI0X,EAAY,EAAOtC,EAAU,GAE1BsC,GAAS,UAAGzT,EAAMU,KAAK8M,eAAd,aAAG,EAAoBzR,SAAO,CAAC,IAAD,EACpC2X,GAAS3L,EAAAA,EAAAA,IAAuB/H,EAAMU,KAAK8M,QAAQiG,GAAWlX,MACpE4U,EAAQpU,MAAK,gBAAqByU,UAAU,wBAA/B,UAAuD,gBAAKA,UAAW,UAAhB,UAA2B,gBAAKA,UAAU,cAAcnU,IAAKqW,EAAQjC,IAAI,QAAtHgC,IACvBA,GACH,CAED,OAAO,iBAAKjC,UAAU,iBAAf,WACH,iBAAKE,GAAG,uBAAuBF,UAAU,uBAAzC,WACI,8CACEL,MAEN,mBAAQK,UAAU,eAAeI,QAAS,SAACnT,GAAMD,EAAYC,EAAG9C,SAASC,eAAgB,wBAA0B,gCAAiC,kCAAsC,EAA1L,sBAEP,CAcJ,EAtCDwT,EAAAA,EAAAA,YAAU,WACHpP,EAAMU,KAAN,WAA2BC,IAC1B4S,EAAU,KAAWvT,EAAMU,KAAN,UAAwBC,GAAgB0E,KAC7DkO,EAAU,SAAevT,EAAMU,KAAN,UAAwBC,GAAgBuB,SAExE,GAAC,CAACvB,IAmCH,IAAIgO,EAAuC,oCAAvB3O,EAAMe,aAE1B,SAAS4S,IAAc,IAAD,EAElB,IAAG,UAAA3T,EAAMU,KAAK+M,iBAAX,eAAsB1R,QAAS,GAA4B,qCAAvBiE,EAAMe,aAAoD,CACvEf,EAAMU,KAAK+M,UAA2C1R,OADkB,IAAD,IAqBzF6X,GAAqB,iBAAKpC,UAAU,iBAAf,WACrB,gBAAKjB,MAAO,CAAEzT,OAAO,OAAQD,MAAM,OAAQ8V,OAAO,qBAAsBkB,OAAO,WAAYjC,QAAS,SAACnT,GAAD,OAAKoD,MAAMC,GAAaC,MAAM,SAAAC,GAAC,OAAEA,EAAEC,MAAJ,IAAYF,KAAtC,yCAA4C,WAAOG,GAAP,+FAA2BjC,GAAS,SAACmB,GAAD,eAAC,UAAYA,GAAb,IAAmBF,SAAS,CAACgB,SAAAA,GAAWnB,aAAa,+CAArD,KAApC,2CAA5C,sDAAL,EAApG,UACI,gBAAK1D,IAAI,kBAAkBoU,IAAI,QAEnC,iBAAKC,GAAG,uBAAuBF,UAAU,uBAAzC,WACI,oCAAKxR,EAAMU,KAAK+M,UAAU,UAA1B,aAAK,EAAyBpI,KAA9B,WACA,oCAAOrF,EAAMU,KAAK+M,UAAU,UAA5B,aAAO,EAAyBvL,eAEpC,mBAAQsP,UAAU,eAAeI,QAAS,SAACnT,GAAD,OAAKD,EAAYC,EAAG9C,SAASC,eAAe,wBAAyB,gCAAiC,uBAAtG,EAA1C,uBAEJ,OAAQ,wCAAkDgY,EAAlD,MACX,CACJ,CAED,SAASE,IACL,OACI,iBAAKvD,MAAO,CAACwD,aAAa,QAA1B,WACI,kBAAOjE,KAAK,OAAO4B,GAAK/C,EAAc,mBAAmB,eAAgBtJ,KAAOsJ,EAAc,mBAAmB,eAAgBqF,OAASrF,EAAc,IAAI,UAAWsF,SAAS,WAAW1D,MAAO,CAAC2D,QAAQ,IAAKC,OAAO,GAAItC,SAAWlD,EAAcb,EAAU9N,EAAMU,KAAK0T,KAAMC,QAAM,KACrR,mBAAQ7C,UAAU,iCAAiCE,GAAG,iCAAiCE,QAAS,SAACnT,GAAK,IAAD,IAAE,IAAI,UAAAuB,EAAMU,KAAKc,iBAAX,eAAsBzF,QAAS,IAAK,UAAAiE,EAAMU,KAAKkB,mBAAX,eAAwB7F,QAAS,EAAK,OAAOkE,GAAS,SAACmB,GAAD,eAAC,UAAYA,GAAb,IAAmB+D,WAAW,KAAMpE,aAAc,yCAAlD,IAAsG,IAAIW,EAAW,GAA8J,OAArJ1B,EAAMU,KAAKkB,aAAeF,EAAS3E,KAAK,+BAAsCiD,EAAMU,KAAKc,WAAaE,EAAS3E,KAAM,6BAAoC2E,EAAS3F,OAAS,EAAY8D,GAAc,SAACuB,GAAD,eAAC,UAAYA,GAAb,IAAmBM,SAAAA,EAAUC,SAAS3B,EAAMe,cAA5C,SAAhD,CAAmH,EAA3kB,mBAGX,CAED,SAASuT,IACL,OAAO,iBAAK9C,UAAU,gBAAf,WACH,gBAAKA,UAAU,wBAAf,UACI,kBAAO1B,KAAK,OAAO4B,GAAG,eAAeF,UAAU,eAAeG,YAAc3R,EAAMU,KAAKc,UAAZ,gBAAgCxB,EAAMU,KAAKc,WAAY,SAAUqQ,SAAUpD,EAAiBmD,QAAS,SAACnT,GAAD,QAAOuB,EAAMU,KAAKc,YAAY/C,EAAEK,OAAO0K,MAAQxJ,EAAMU,KAAKc,UAA1D,OAEpL,gBAAKgQ,UAAU,0BAAf,UACI,kBAAO1B,KAAK,OAAO4B,GAAG,iBAAiBF,UAAU,iBAAiBG,YAAc3R,EAAMU,KAAKkB,YAAZ,kBAAoC5B,EAAMU,KAAKkB,aAAc,WAAYiQ,SAAUpD,EAAiBmD,QAAS,SAACnT,GAAD,QAAOuB,EAAMU,KAAKkB,cAAcnD,EAAEK,OAAO0K,MAAQxJ,EAAMU,KAAKkB,YAA5D,QAGvM,CAED,IAkCI+E,EAAiB4N,EAAmBC,EAASC,EAAcC,GAAUC,GAlCnEC,GAAU,yCAAG,WAAQnW,EAAGoW,GAAX,8FAKf,GAJAlZ,SAASC,eAAe,kBAAkB4N,MAAQqL,GAC9CC,EAAgBD,EAAUvH,MAAM,MAAMvR,SAGxB,UAAGJ,SAASC,eAAe,sBAA3B,aAAG,EAAwCmZ,oBAAmF,KAA9D,UAAApZ,SAASC,eAAe,sBAAxB,eAAwCmZ,mBAEtH,IADAC,EAAM,UAAGrZ,SAASC,eAAe,sBAA3B,aAAG,EAAwCmZ,kBACnCC,EAASF,EAAeE,IAClCrZ,SAASC,eAAe,eAAeC,WAAvC,gBAIR,GAAIiZ,GAAa,UAAGnZ,SAASC,eAAe,sBAA3B,aAAG,EAAwCmZ,mBAIxD,IAHAC,GAAS,UAAArZ,SAASC,eAAe,sBAAxB,eAAwCmZ,mBAAoBD,EAEjExU,EAAO,EACHA,EAAO0U,GACXrZ,SAASC,eAAe,eAAeqZ,WAAWH,GAAe1X,SACjEkD,IAIR,GAAmE,KAA9D,UAAA3E,SAASC,eAAe,sBAAxB,eAAwCmZ,mBAEzC,IADIzU,EAAO,EACHA,EAAOwU,GACXnZ,SAASC,eAAe,eAAeC,WAAvC,gBACAyE,IA1BO,OA8Bf3E,SAASC,eAAe,kBAAkB2U,MAAMzT,OAAUnB,SAASC,eAAe,eAAe0U,aAAa,GAAI,KA9BnG,mBA+BRrN,EAAAA,EAAAA,OA/BQ,2CAAH,wDAiDhB,QAdAmM,EAAAA,EAAAA,YAAW,WACP,GAA4B,gDAAvBpP,EAAMe,aAGP,OAFApF,SAASC,eAAe,kBAAkB4N,MAAQxJ,EAAMkB,SAASgB,SACjE0S,GAAY,KAAM5U,EAAMkB,SAASgB,WAC1Be,EAAAA,EAAAA,KAEd,GAAC,CAAEjD,EAAMe,eAQDf,EAAMe,cACX,IAAK,mCAED,IAAImU,GAA0C,qCAAvBlV,EAAMe,aAC7B4T,GAAmBO,GAAkC,IAAf,SAACZ,EAAD,IACtCE,GAAU,iBAAKhD,UAAU,iBAAiBE,GAAG,eAAnC,WACN,iBAAKF,UAAU,8BAAf,WACI,SAAC,KAAD,CAAU9Q,KAAM,CAACyU,SAAS,eAAgBC,SAAS,KAAMnT,KAAK,yBAC9D,cAAGoT,KAAMrV,EAAMU,KAAK4D,cAAexF,OAAO,SAASwW,IAAI,aAAvD,UAAoE,SAAC,KAAD,CAAU5U,KAAM,CAACyU,SAAS,cAAeC,SAAS,OAAQnT,KAAK,qBAAD,OAAsBjC,EAAMU,KAAK2D,2BAEvK,SAACmP,EAAD,OAEJ,MACJ,IAAK,kCACDmB,IAAgB,SAACL,EAAD,IAChBE,GAAU,iBAAK9C,GAAG,eAAR,WACN,SAAC,KAAD,CAAUhR,KAAM,CAACyU,SAAS,gBAAiBC,SAAS,KAAMnT,KAAK,sBAC/D,SAAC0R,EAAD,KACA,SAACH,EAAD,KACA,SAAC,KAAD,CAAS9S,KAAM,CAAC6U,MAAM,aAAc7D,GAAG,eAAgBlI,MAAO,kBAAmB4K,KAAM/S,KAJjF,OAMV,MACJ,IAAK,wCACL,IAAK,uCACD,IAAImU,GAAqC,0CAAvBxV,EAAMe,aAEpB0U,GADqBD,IAAoC,OAArBxV,EAAMmF,YACR,kBAAOqM,UAAU,YAAYE,GAAG,YAAYrM,KAAK,OAAOyK,KAAK,OAAO6B,YAAiC,OAAnB3R,EAAMkB,SAAmBlB,EAAMkB,SAAS,oBAAqB2Q,SAAUpD,EAAiBmD,QAAS,SAACnT,GAAD,OAAMA,EAAEK,OAAO0K,MAAQxJ,EAAMkB,QAA7B,KAAyC,SAAC,KAAD,CAAUR,KAAM,CAAEyU,SAAS,eAAgBC,SAAS,KAAMnT,KAAK,oBACjU0E,GAAkB,iBAAK6K,UAAU,eAAf,UACZiE,IACF,SAAC,KAAD,CAAU/U,KAAM,CAAEyU,SAAS,eAAgBC,SAAS,OAAQnT,KAAOuT,GAAF,8CAA+E,OAArBxV,EAAMmF,WAAqB,oBAASnF,EAAMU,KAAK0E,OAAQpF,EAAMmF,mBAAlC,aAAS,EAAuCE,MAAK,GAA1I,sDACjE,oBAAQmM,UAAU,WAAWE,GAAG,iBAAiBgE,QAAQ,cAAcnF,MAAO,CAAEoF,SAAU,mBAAoB/D,QAAW4D,GAAc,SAAC/W,GAAoD,OAA9CqC,EAAAA,EAAAA,IAAYrC,GAAkBuB,EAAMkB,UAA+C,OAArBlB,EAAMmF,YAA4KxJ,SAASC,eAAe,eAAega,SAAgB3S,EAAAA,EAAAA,IAAYxE,KAAvNA,EAAEwS,iBAAkBpR,GAAa,SAACuB,GAAD,eAAC,UAAaA,GAAd,IAAoBM,SAAS,CAAE,uBAAyBC,SAAS3B,EAAMe,cAAvE,KAAiGkC,EAAAA,EAAAA,IAAYxE,GAA8E,EAAC,SAACA,GAAsE,OAAhEqC,EAAAA,EAAAA,IAAYrC,GAAI9C,SAASC,eAAe,eAAega,SAAgB3S,EAAAA,EAAAA,IAAYxE,EAAI,EAAriB,eACI,kBAAOqR,KAAM,OAAQ4B,GAAG,cAAcrM,KAAQmQ,GAAc,cAAc,WAAYvB,SAAS,WAAWpC,SAAW,SAACpT,GAAD,OAAK+F,EAAoB/F,EAAGuB,EAAMmF,WAAlC,EAAiDkP,QAAM,QAGhL,gBAAK3C,GAAG,qBACR,mBAAQF,UAAU,aAAaE,GAAM8D,GAAc,iBAAiB,UAAW5D,QAAU,SAACnT,GAAD,OAAK+F,EAAoB/F,EAAGuB,EAAMmF,WAAlC,EAAzF,SACOqQ,GAA+C,kBAAvBxV,EAAMmF,WAA2B,MAAM,SAAU,qBAGpF,MACJ,IAAK,0CACDwB,GAAkB,iBAAK6K,UAAU,eAAf,WACd,SAAC,KAAD,CAAU9Q,KAAM,CAACyU,SAAS,eAAgBC,SAAS,KAAMnT,KAAK,SAAD,iBAAUjC,EAAMU,KAAK0E,OAAQpF,EAAMmF,mBAAnC,aAAU,EAAuCE,KAAjD,gBAC7D,iBAAKkL,MAAO,CAAEsF,QAAQ,sBAAtB,WACI,SAAC,KAAD,CAAUnV,KAAM,CAACyU,SAAS,eAAgBC,SAAS,OAAQnT,KAAK,oBAChE,SAAC,KAAD,CAASvB,KAAM,CAAC6U,MAAM,kBAAmB7D,GAAG,UAAWlI,MAAM,SAAU4K,KAAMpO,SAEjF,iBAAKuK,MAAO,CAAEsF,QAAS,qBAAsBhZ,MAAO,MAAO6V,UAAW,aAAcoD,QAAS,gBAA7F,WACI,SAAC,KAAD,CAAUpV,KAAM,CAACyU,SAAS,eAAgBC,SAAS,OAAQnT,KAAK,mBAChE,mBAAQyP,GAAG,oBAAoBF,WAAgE,IAAnDxR,EAAMU,KAAK0E,OAAQpF,EAAMmF,YAAa3E,SAAoB,2BAA2B,wBAAyBoR,QAAS,SAACnT,GAAM4H,EAAgB5H,EAAI,EAA9L,UACI,gBAAKiT,GAAG,0BAA0BF,WAAgE,IAAnDxR,EAAMU,KAAK0E,OAAQpF,EAAMmF,YAAa3E,SAAoB,wBAAwB,yBAAjI,UACI,iBAAMkR,GAAG,8BAAT,UAA6F,IAAnD1R,EAAMU,KAAK0E,OAAQpF,EAAMmF,YAAa3E,SAAoB,MAAM,eAItH,iBAAK+P,MAAO,CAAEsF,QAAS,qBAAsBhZ,MAAO,MAAO6V,UAAW,aAAcoD,QAAS,eAAgBvD,MAAM,SAAnH,WACI,SAAC,KAAD,CAAU7R,KAAM,CAACyU,SAAS,eAAgBC,SAAS,OAAQnT,KAAK,oBAChE,SAAC,KAAD,CAASvB,KAAM,CAAC6U,MAAM,eAAgB7D,GAAG,UAAWlI,MAAO,SAAU4K,KAAMvO,WAGnF,MACJ,IAAK,4CACL,IAAK,yCACD,IAAIkQ,GAAmC,8CAAvB/V,EAAMe,aAClBiV,GAAiBD,IAAY,SAAC,KAAD,CAASrV,KAAM,CAACuV,UAAU,YAAaC,OAAO,YAAa7Q,KAAK,OAAQyK,KAAK,OAAQ6B,YAAY3R,EAAMU,KAAK0E,OAAQpF,EAAMmF,YAAaE,KAAMwM,SAASpD,MAAoB,SAAC,KAAD,CAAS/N,KAAM,CAAC6U,MAAM,eAAgB7D,GAAG,GAAIlI,MAAM,MAAO4K,KAAMvO,KAE3Qc,GAAkB,iBAAK6K,UAAU,eAAf,WACd,SAAC,KAAD,CAAU9Q,KAAM,CAACyU,SAAS,eAAgBC,SAAS,KAAMnT,KAAO8T,GAAY,qBAAd,yCAA2D/V,EAAMU,KAAK0E,OAAQpF,EAAMmF,mBAApF,aAA2D,EAAuCE,KAAlG,cAC5D2Q,IACF,mBAAQxE,UAAU,iBAAiBI,QAAWmE,GAAY/P,EAAYpF,EAAtE,SAA8FmV,GAAW,SAAS,UAEtH,MACJ,IAAK,+CACDjV,EAAAA,EAAAA,MAIA,IAFA,IAAMqV,GAAanW,EAAMkB,SAASgB,SAASoL,MAAM,MAAMvR,OACnDqa,GAAW,GACL9V,GAAO,EAAGA,GAAO6V,GAAY7V,KACnC8V,GAASrZ,MAAK,mBAAWuD,KACzBA,KAGJ,IAAI+V,IAAgB,gBAAK7E,UAAU,cAAcE,GAAG,cAAhC,SAAgD0E,KACpEzP,GAAkB,iBAAK6K,UAAU,eAAejB,MAAO,CAACsF,QAAQ,QAA9C,WACd,SAAC,KAAD,CAAUnV,KAAM,CAACyU,SAAS,sBAAuBC,SAAS,KAAMnT,KAAK,6BACrE,SAAC,KAAD,CAAUvB,KAAM,CAACyU,SAAS,sBAAuBC,SAAS,OAAQnT,KAAK,wDACvE,iBAAKuP,UAAU,SAASE,GAAG,SAA3B,UACK2E,IACD,qBAAU7E,UAAU,iBAAiBE,GAAG,iBAAiB4E,QAAS,SAAC7X,GAAM,GAAc,UAAVA,EAAE8X,KAA6B,cAAV9X,EAAE8X,KAAiC,WAAV9X,EAAE8X,KAAoB9X,EAAE+X,QAAW,OAAO5B,GAAYnW,EAAGA,EAAEK,OAAO0K,MAAU,EAAEqI,SAAU,SAACpT,GAAD,OAAKuB,EAAMkB,SAASgB,SAAWzD,EAAEK,OAAO0K,KAAxC,QAEvN,SAAC,KAAD,CAAS9I,KAAM,CAAC6U,MAAM,iBAAkB7D,GAAG,GAAIlI,MAAM,SAAU4K,KAAM,WAAK,OAAO,CAAM,QAE3F,MACJ,QACIzN,EAAkB,KAClB3G,EAAMkB,SAAW,KAAMlB,EAAMmF,WAAa,KAC1CsP,EAAiBzU,EAAMU,KAAK0E,OAAOrJ,OAAS,GAAI,mBAAQ2V,GAAK1R,EAAMU,KAAK6E,WAAY,eAAe,WAAYiM,UAAU,aAAaI,QAAS,SAACnT,GAAM,OAAKuB,EAAMU,KAAK6E,WAAsBiB,EAAa/H,EAAG,IAAmBwB,GAAS,SAACmB,GAAD,eAAC,UAAYA,GAAb,IAAmBL,aAAa,wCAAhC,GAA+E,EAAvQ,SAA6Qf,EAAMU,KAAK6E,WAAY,WAAW,uBAAgC,GAC/XoP,IAAgB,SAACL,EAAD,IAAgBI,IAAW,SAACZ,EAAD,IAC3CU,GAAU,qCAAG,gBAAK9C,GAAG,eAAR,UAAuB,SAAC7C,EAAD,OAAkB,SAACoE,EAAD,IAAUwB,KAChEF,GAAoB,iCAAE,SAAC,KAAD,CAAU7T,KAAM,CAACyU,SAAS,eAAgBC,SAAS,KAAMnT,KAAK,YAAhE,KAA6E,SAAC,KAAD,CAAUvB,KAAM,CAACyU,SAAS,eAAgBC,SAAS,OAAQnT,KAAK,+CAIzK,SAASwU,KACL,OAAI9P,GAcI,iBAAK6K,UAAoC,gDAAvBxR,EAAMe,aAAgE,kBAAkB,kBAA1G,WACI,mBAAQyQ,UAAU,WAAWI,QAAShR,EAAtC,eACC+F,MAdL,iBAAK6K,UAAU,kBAAf,WACI,mBAAQA,UAAU,WAAWI,QAAS,kBAAK3R,GAAU,SAACmB,GAAD,eAAC,UAAYA,GAAb,IAAmBpB,MAAM,OAAQU,KAAK,CAAEc,UAAY,KAAMI,YAAc,KAAMwD,OAAO,IAAMrE,aAAa,KAAMoE,WAAY,MAA1H,GAAf,EAAtC,eACCwP,IACD,iBAAKnD,UAAU,cAAf,UACM+C,EACAG,GACAF,OAYrB,CAED,OAAQ,iBAAKhD,UAAU,YAAYE,GAAG,QAA9B,eAAuC,SAAC+E,GAAD,IAAvC,MACX,C","sources":["helpers/imgdatahelpers.js","helpers/generatorhelpers.js","helpers/domHandlers.js","pages/generator.js"],"sourcesContent":["import { imgSignature, getFileExtension } from \"./imgSignatures\";\r\n\r\nconst validateIMGtype = async ( demFiles, childClassName, parentIdName, wrongFiles, callback) => {\r\n    const parentEle = document.getElementById(parentIdName);\r\n    parentEle.innerHTML = \"\";\r\n    const demlen = demFiles.length;\r\n    console.log(`files length: ${demlen}`);\r\n    if ( demlen === 0 ){\r\n        return callback([ \"Upload a file.\", wrongFiles]);\r\n    }\r\n    let imgArray = [];\r\n    let loadedImgs = 0;\r\n    for ( let n = 0; n < demlen ; n++ ) {\r\n        let dafile = demFiles[n];\r\n        // eslint-disable-next-line no-loop-func\r\n        getFileExtension( dafile, ( [ path, ext ] )=>{\r\n            if( ext ){\r\n                if(ext.match(/^(jpg|png|gif|webp)/)){\r\n                    const img = document.createElement(\"img\");\r\n\r\n                    img.addEventListener( 'load', ()=>{\r\n                        if( img.width <= 2000  && img.height <= 2000 ){\r\n                            loadedImgs++;\r\n                            imgArray.push( { path, ext, } );\r\n                            const para = document.createElement(\"div\");\r\n                            para.appendChild(img);\r\n                            para.classList.add((childClassName)?childClassName:'LayerUpldContentBox')\r\n                            parentEle.appendChild(para);\r\n                        }else{\r\n                            img.remove();\r\n                            wrongFiles.push(n);\r\n                        }\r\n\r\n                        if ( demlen === ( loadedImgs + wrongFiles.length ) ){\r\n                            return callback( [ null, wrongFiles, ( imgArray.length > 0 )?imgArray:null ] );\r\n                        }\r\n                    });\r\n                    img.src = `data:image/${ext};base64,`+path;\r\n                }else{\r\n                    wrongFiles.push(n);\r\n                    if(demFiles.length === wrongFiles.length){\r\n                        return callback([ \"Unsupported file types! JPG, JPEG, PNG, WEBP, GIF, JPE only.\", wrongFiles ]);\r\n                    }\r\n                }\r\n            }else{\r\n                wrongFiles.push(n);\r\n                if(demFiles.length === wrongFiles.length){\r\n                    return callback([ \"Unknown file type, images only! Supported types: JPG, JPEG, PNG only.\", wrongFiles ]);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport { validateIMGtype }","\r\nconst shuffle = (arra1)=> {\r\n    var ctr = arra1.length, temp, index;\r\n    // While there are elements in the array\r\n    while (ctr > 0) {\r\n        // Pick a random index\r\n        index = Math.floor(Math.random() * ctr);\r\n        // Decrease ctr by 1\r\n        ctr--;\r\n        // And swap the last element with it\r\n        temp = arra1[ctr];\r\n        arra1[ctr] = arra1[index];\r\n        arra1[index] = temp;\r\n    }\r\n    return arra1;\r\n}\r\n\r\nconst get_all_possible_array_combos =  async ( input, output, n, da_path )=>{\r\n    da_path = (da_path === null || da_path === undefined)? []: da_path;\r\n    n = (n === null || n === undefined)? 0:n;\r\n    if(n < input.length){\r\n        const current_item = input[n]; let gogo = 0;\r\n        while(gogo < current_item.length){\r\n            let val = current_item[gogo];\r\n            da_path.push(val);\r\n            get_all_possible_array_combos(input, output, n+1, da_path);\r\n            da_path.pop();\r\n            gogo++;\r\n        }\r\n    }else{\r\n        output.push(da_path.slice());\r\n    }\r\n};\r\n\r\nexport { shuffle, get_all_possible_array_combos };","const expandABox  = ( e, expandee, expandedClass, contractedClass )=>{\r\n    // element that calls the click event should be a button or element containing inner text\r\n    let ele = e.target;\r\n\r\n    // Check if div to be expanded is already expanded via a css class\r\n    // If it is expanded then swap class for a contracted css class ( which in this case is overflowY set to 'hidden' )\r\n    if ( expandee.classList.contains( expandedClass ) ) {\r\n        expandee.classList.remove( expandedClass );\r\n        expandee.classList.add( contractedClass ); // 'contract-container');\r\n        ele.innerText = \"expand\"\r\n    }else{\r\n        // If element contains contracted class instead then toggle it and replace it for expanded class\r\n        expandee.classList.add( expandedClass );\r\n        expandee.classList.remove( contractedClass );\r\n        ele.innerText = \"less\"\r\n    }\r\n};\r\n\r\nconst divSwapper = (node1, node2)=>{\r\n    node1.parentNode.replaceChild(node1, node2);\r\n    node1.parentNode.insertBefore(node2, node1); \r\n}\r\n\r\nexport { expandABox, divSwapper }","import React, { useContext, useState, useEffect, useMemo } from 'react'\r\nimport { StateContext } from '../context/StateContext';\r\nimport { imgToBase64String, imgURLFromBase64String, base64ToBlob } from \"../helpers/imgBLOBto64\";\r\nimport { ContractFactory } from \"ethers\";\r\nimport { connectToChain, signer,  currentNetwork, blockchainNetworks, currentAddress } from \"../helpers/web3Helpers\";\r\nimport { validateIMGtype } from \"../helpers/imgdatahelpers\";\r\nimport { isAplhaNumeric, stringLengthRange } from \"../helpers/stringValidator\";\r\nimport { shuffle, get_all_possible_array_combos } from \"../helpers/generatorhelpers\";\r\nimport { expandABox, divSwapper } from \"../helpers/domHandlers\";\r\nimport yaadcontract from '../contracts/yaad.json';\r\nimport nftcontract from '../contracts/the_yaad.sol';\r\nimport { DaInput, BoxTitle, Buttonz } from '../components/form/formcomps';\r\nimport { LoadingBox, showLoading, hideLoading } from \"../components/ui/loading\";\r\nimport { MsgContext } from \"../context/msgcontext\";\r\nimport { Link } from 'react-router-dom';\r\nimport  './generator.css'\r\n\r\nfunction RandomGenerator (props){\r\n    const pumpum = window.location.host;\r\n    let baseServerUri = ( pumpum  === \"localhost:3000\")?'api/':'https://yaadlabs.herokuapp.com/api/';\r\n    const homeState = { state:\"home\", data:{ coll_name : null, coll_symbol : null, layers:[] }, currsubState:null, temp_index: null, baseServerUri: baseServerUri,};\r\n    const defaultErrorStack = { intervalId:null, formdata:[], substate:null };\r\n    const { msgStacks, setMsgStacks } = useContext( MsgContext );\r\n    const { state, setState } = useContext( StateContext );\r\n    // useEffect(()=>{\r\n    //     if ( state.data.layers?.length > 0 ){\r\n    //         state.data.possibleCombos = 1;\r\n    //         state.data.layers.forEach((val, indx, arr)=>{\r\n    //             state.data.possibleCombos *= ( val.priority )?(val.traits.length):(val.traits.length+1) \r\n    //         });\r\n\r\n    //         console.log(`possible combos: ${state.data.possibleCombos}`);\r\n    //     }\r\n    // }, [ state.data ] )\r\nconst possblCombos = ( arrays )=>{\r\n    let combos = 1;\r\n    arrays.forEach((val, indx, arr)=>{\r\n        combos *= ( val.priority )?(val.traits.length):(val.traits.length+1) \r\n    });\r\n    return combos;\r\n}\r\n    var wrongFiles = [];\r\n    state.data.activeContract = 0;\r\n\r\n    const closeLayerOptionsBox = (e)=>{\r\n        showLoading();\r\n        let gotTo;\r\n        switch (state.currsubState) {\r\n            case \"RandomGenerator\":\r\n                localStorage.clear();\r\n                gotTo = { state:\"home\", data:\"\" };\r\n                break;\r\n            case \"RandomGenerator-LayerOptions-Write-Contract\":\r\n                state.formVals =  null;\r\n                gotTo = { currsubState:\"RandomGenerator-RandomGenerated\"};\r\n                break;\r\n            default:\r\n                delete state.data?.tempFiles;\r\n                gotTo = { currsubState: \"RandomGenerator\" };\r\n                break;\r\n        }\r\n\r\n        return setState((prev)=>({...prev, ...gotTo }));\r\n    };\r\n\r\n    const deployContract = async (e)=>{\r\n        showLoading(e);\r\n        const address = await currentAddress();\r\n        if(!state.data.coll_name || state.data.coll_name.trim() === \"\"){\r\n            return setMsgStacks( (prev)=>({...prev, messages:[ \"Enter a project/NFT name!\" ], substate:state.currsubState }) );\r\n        }\r\n        \r\n        if(!state.data.coll_symbol || state.data.coll_symbol.trim() === \"\"){\r\n            return setMsgStacks( (prev)=>({...prev, messages:[ \"Enter a symbol!\" ], substate:state.currsubState }) );\r\n        }\r\n\r\n        try {\r\n            fetch(nftcontract).then( r=>r.text()).then( async (contract)=>{\r\n                // console.log(`contract: ${text}`)\r\n                let contractOptions = {\r\n                    language: \"Solidity\", \r\n                    sources: {\r\n                    'yaad.sol': {\r\n                        content: contract\r\n                    }\r\n                    },\r\n                    settings:{\r\n                    outputSelection:{\r\n                        '*': {\r\n                        '*':['*']\r\n                        }\r\n                    }\r\n                    }\r\n                };\r\n                console.log(`chain data: ${JSON.stringify(state.chainData)}`);\r\n                const connected = await connectToChain( blockchainNetworks[6] );\r\n                let contractData = new FormData();\r\n                if( connected === false ) { hideLoading(); return false; }\r\n                contractData.append('contractJSON', JSON.stringify(contractOptions));\r\n                const compiledContract = await fetch( state.baseServerUri+\"compileContract\", { method:'POST',body: contractData} ).then((theresponse)=>theresponse.json()).then((compiled)=>compiled);\r\n                const abi = compiledContract.abi;\r\n                const bytecode = compiledContract.bytecode;\r\n                const factory = new ContractFactory(abi, bytecode, signer);\r\n                const nftToken = await factory.deploy(state.data.coll_name, state.data.coll_symbol).then((tx)=>tx).catch((e)=>e);\r\n                console.log(`address: ${address}, nft token: ${JSON.stringify(nftToken.reason)}`);\r\n                contractData = null;\r\n                if( nftToken.code ){\r\n                    hideLoading(e);\r\n                    return;\r\n                }\r\n\r\n                // {\"name\":\"ropsten\",\"chainId\":3,\"ensAddress\":\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"}\r\n                if(nftToken.address){\r\n                    hideLoading(e);\r\n                    return setState( (prev)=>( { ...prev, currsubState: \"RandomGenerator-ContractDeployed\", data:{...prev.data, contract_address: nftToken.address, contract_link: `https://${currentNetwork.name}.etherscan.io/address/${nftToken.address}`} } ));\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(`error: ${error}`)\r\n            return error;\r\n        }\r\n    };\r\n    \r\n    const handleAddLayerUpld = async ( e, layerindex )=>{\r\n        showLoading(e);\r\n        let layerName, bgElement = false;\r\n        \r\n        if( e.target.getAttribute('type') === 'file' && ( e.target.getAttribute('name') === 'multi_asset' || e.target.getAttribute('name') === 'bg_asset' ) ){\r\n            let currentFiles;\r\n            if ( e.target.files.length < 1 && state.data.tempFiles !== null ){ return hideLoading(e); }else{ currentFiles = e.target.files; }\r\n            if ( currentFiles.length < 1 ) { e.target.classList.remove('inactive'); return hideLoading(e); }\r\n\r\n            await validateIMGtype( currentFiles, 'LayerUpldContentBox', 'layerContentBox', [], ([ err, wrongfiles, imgfiles ])=>{\r\n                wrongFiles = wrongfiles;\r\n                if( err !== null || ( wrongfiles.length === currentFiles.length )) {\r\n                    hideLoading(e);\r\n                    return setMsgStacks((prev)=>({...prev, substate: state.currsubState, messages:(err !== null)?[err]:[ \"Images too large Max height: 2000px, max width: 2000px.\" ] }));\r\n                }\r\n\r\n                if( document.getElementById('bg_upld') ) document.getElementById('bg_upld').textContent = ( currentFiles.length > 0)?'NEXT':'No Background';\r\n                state.data.tempFiles = imgfiles;\r\n                return hideLoading(e);\r\n            });\r\n            \r\n            return;\r\n        }\r\n        \r\n        if( e.target.getAttribute(\"id\") !== \"bg_upld\" ){\r\n            layerName = ( state.temp_index === null )? state.formVals:state.data.layers[ state.temp_index ]?.name;//document.getElementById(\"LayerName\").value.trim();\r\n            let msgs = [];\r\n            console.log(`indx: ${ layerindex }`)\r\n            if( layerindex === null ){\r\n                state.data.layers?.forEach((val,indx, arr)=>{\r\n                    if( val.name === layerName ){\r\n                        msgs.push( \"This layer name is already in use, enter another!\" )\r\n                    }\r\n                })\r\n            }\r\n\r\n            if ( !layerName ){ msgs.push( \"Enter a layer name!\" ) }\r\n            if ( !state.data.tempFiles ){ msgs.push( \"Click the '+' to upload files!\" ) }\r\n            if ( msgs?.length > 0 ) { hideLoading(e); return setMsgStacks((prev)=>({...prev, substate: state.currsubState, messages:msgs, } ) ) }\r\n        }\r\n\r\n        bgElement=(e.target.getAttribute(\"id\") === \"bg_upld\")&& true;\r\n\r\n        if(( !state.data.tempFiles ) && e.target.getAttribute(\"id\") === \"bg_upld\" ){\r\n            state.data.background = ( !state.data.background || state.data.background?.length === 0 )?[]:state.data.background;\r\n            return closeLayerOptionsBox();\r\n        }\r\n\r\n        let file_len = state.data.tempFiles.length;\r\n        if ( layerindex === null && !bgElement ) { state.data.layers.push({ name: layerName, traits: [] }); layerindex = state.data.layers.length-1 }\r\n\r\n        for ( let n = 0; n < file_len; n++ ){\r\n            const imgURL = state.data.tempFiles[n].path\r\n            const ext = state.data.tempFiles[n].ext\r\n            \r\n            if(bgElement){\r\n                if( Array.isArray(state.data.background) ){\r\n                    state.data.background.push({trait_name: n, path: imgURL, ext, });\r\n                }else{\r\n                    state.data.background = [{trait_name: n, path: imgURL, ext, }]\r\n                }\r\n            }else{\r\n                await state.data.layers[ layerindex ].traits.push({ trait_name: n, path: imgURL, ext, });\r\n            }\r\n        }\r\n\r\n        return closeLayerOptionsBox();\r\n    }\r\n\r\n    const delLayer = async (e)=>{\r\n        if(state.currsubState === \"RandomGenerator-LayerOptions-Edit-Layer\"){\r\n            return setState((prev)=>( {...prev, currsubState: \"RandomGenerator-LayerOptions-Del-Layer\", previous: prev.currsubState} ));\r\n        }else{\r\n            showLoading();\r\n            if( state.temp_index !== null ){\r\n                state.data.layers.splice( state.temp_index, 1);\r\n                hideLoading();\r\n                return closeLayerOptionsBox();\r\n            }\r\n            return closeLayerOptionsBox();\r\n        }\r\n    }\r\n    \r\n    const renameLayer = (e)=>{\r\n        showLoading(e);\r\n        const the_value = state.formVals;\r\n        if(state.currsubState === \"RandomGenerator-LayerOptions-Edit-Layer\"){\r\n            return setState((prev)=>({...prev, currsubState: \"RandomGenerator-LayerOptions-Rename_Layer\" }));\r\n        }else{\r\n            let alreadyExists = false;\r\n            if ( !isAplhaNumeric( the_value, [ \"_\", \" \",\".\" ] ) || !stringLengthRange( the_value, 1, 50 ) ) { hideLoading(e); return; }\r\n            state.data.layers.forEach((val, indx, arr)=>{\r\n                if ( val.name === the_value.trim() ){\r\n                    alreadyExists = true;\r\n                }\r\n            });\r\n\r\n            if ( alreadyExists === true ) {\r\n                hideLoading(e);\r\n                return setMsgStacks((prev)=>({...prev, messages:[ \"Layer name is already in use, Enter another name.\" ] }));\r\n            }\r\n\r\n            state.data.layers[ state.temp_index ].name = state.formVals;\r\n            // ele.setAttribute('placeholder', state.formVals);\r\n            return closeLayerOptionsBox();\r\n        }\r\n    };\r\n    \r\n    const prioritizeLayer = async (e)=>{\r\n        let isPriority = state.data.layers[ state.temp_index ].priority;\r\n        document.getElementById(\"priorityLayerBttn\").classList.toggle(\"disablepriorityLayerBttn\");\r\n        document.getElementById(\"priorityLayerBttn\").classList.toggle(\"makepriorityLayerBttn\");\r\n        document.getElementById(\"makepriorityLayerOption\").classList.toggle('ispriorityLayerOption');\r\n        document.getElementById(\"makepriorityLayerOption\").classList.toggle('notpriorityLayerOption');\r\n        document.getElementById(\"makepriorityLayerOptionSpan\").innerText =( isPriority === true )?\"NO\":\"YES\";\r\n        state.data.layers[ state.temp_index ].priority = !state.data.layers[ state.temp_index ].priority;\r\n        setState((prev)=>prev)\r\n    };\r\n\r\n    const expandbox = ( e, indx )=>{\r\n        showLoading();\r\n        let me = 0;\r\n        while( me < document.getElementsByClassName('layer-images-box' ).length){\r\n            if(me !== indx){\r\n                if(!document.getElementsByClassName('layer-images-box')[me].classList.contains('inactive')){\r\n                    document.getElementsByClassName('layer-images-box')[me].classList.add('inactive');\r\n                }\r\n                if(document.getElementsByClassName('triangle-icon')[me].classList.contains('rotateExpander')){\r\n                    document.getElementsByClassName('triangle-icon')[me].classList.remove('rotateExpander');\r\n                }\r\n            }\r\n            me++;\r\n        }\r\n\r\n        if(document.getElementsByClassName('layer-images-box')[indx].classList.contains('inactive')){\r\n            document.getElementsByClassName('triangle-icon')[indx].classList.add('rotateExpander');\r\n            document.getElementsByClassName('layer-images-box')[indx].classList.remove('inactive');\r\n            document.getElementsByClassName(\"expander-box\")[indx].style.backgroundColor = \"rgb(129, 129, 129)\";\r\n        }else{\r\n            document.getElementsByClassName('triangle-icon')[indx].classList.remove('rotateExpander');\r\n            document.getElementsByClassName('layer-images-box')[indx].classList.add('inactive');\r\n            document.getElementsByClassName(\"expander-box\")[indx].style.backgroundColor = \"rgb(190, 190, 190)\";\r\n        }\r\n\r\n        hideLoading();\r\n    };\r\n    \r\n    const generate_it = async ( e, printCap )=>{\r\n        showLoading(e);\r\n        const psblecmbz = possblCombos( state.data.layers );\r\n        if ( psblecmbz < printCap ){\r\n            hideLoading(e)\r\n            return setMsgStacks((prev)=>({...prev, messages: [ `Add more images to existing layers or create more layers. Your current layers only generate ${psblecmbz} possible unique images.` ], substate: state.currentSubState}));\r\n        }\r\n        let conntd = await connectToChain( blockchainNetworks[6] );\r\n        if( conntd === false ){ return false; }\r\n        \r\n        state.data.account = conntd;\r\n\r\n        const loop_and_pin_layers = async ( collName, layers )=>{\r\n            let emptyComboArray = []; state.data.newlayers = [];\r\n            layers.reverse();\r\n            for(let indx = 0; indx < layers.length; indx++){\r\n                emptyComboArray.push( { name: layers[indx].name, priority: layers[indx].priority, traits:[] } );\r\n                for( let pin = 0; pin < layers[indx].traits.length; pin++ ){\r\n                    const options = {\r\n                        pinataMetadata:{\r\n                        name: `${layers[indx].name}: ${layers[indx].traits[pin].trait_name}`,\r\n                        keyvalues: {\r\n                            description: `nft trait element from collection, generated by Yaad labs.`,\r\n                            name: `${layers[indx].name}: ${layers[indx].traits[pin].trait_name}`\r\n                        }\r\n                        },\r\n                        pinataOptions: {\r\n                            cidVersion: 0\r\n                        }\r\n                    };\r\n                    let assetName = conntd+\"__\"+Date.now()+\".\"+layers[indx].traits[pin].ext;\r\n                    let pin_body = new FormData();\r\n                    const newimgBlob = await base64ToBlob(imgURLFromBase64String(layers[indx].traits[pin].path));\r\n                    pin_body.append( 'img', newimgBlob, assetName );\r\n                    pin_body.append( 'the_options', JSON.stringify(options) );\r\n                    const pinnedItem = await fetch( `${state.baseServerUri}pinnit`, {method:'POST', body: pin_body} ).then((resp)=>resp.json()).then((pinned)=> pinned );\r\n                    layers[indx].traits[pin].ipfsHash = pinnedItem.IpfsHash;\r\n                    state.data.newlayers.push({ trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash })\r\n                    emptyComboArray[indx].traits.push({ trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash });\r\n                }\r\n            }\r\n            \r\n            return emptyComboArray;\r\n        };\r\n\r\n        const loop_and_pin_background = async ( backgrounds )=>{\r\n            let newBGArray = [];\r\n            for(let f = 0; f < backgrounds.length; f++){\r\n                const options = {\r\n                    pinataMetadata:{\r\n                    name: `background ${f}.`,\r\n                    keyvalues: {\r\n                        description: `nft trait element from collection, generated by Yaad labs.`,\r\n                    }\r\n                    },\r\n                    pinataOptions: {\r\n                        cidVersion: 0\r\n                    }\r\n                    \r\n                };\r\n\r\n                let assetName = conntd+\"__\"+Date.now()+\".\"+backgrounds[f].ext;\r\n                let pin_body = new FormData();\r\n                const fetchBlob = await fetch( imgURLFromBase64String( backgrounds[f].path ) );\r\n                const newimgBlob = await fetchBlob.blob();\r\n                pin_body.append( 'img', newimgBlob, assetName );\r\n                // pin_body.append( 'path',backgrounds[f].path );\r\n                pin_body.append( 'the_options', JSON.stringify(options) );\r\n                console.log(`pinning layers!`);\r\n                const pinnedBG = await fetch( `${state.baseServerUri}pinnit`, {method:'POST', body: pin_body}).then((resp)=>resp.json()).then((pinned)=>pinned);\r\n                backgrounds[f].ipfsHash = pinnedBG.IpfsHash;\r\n                newBGArray.push({ trait_name: backgrounds[f].trait_name, trait_index: f, ipfsHash: pinnedBG.IpfsHash});\r\n            }\r\n            return newBGArray;\r\n        };\r\n\r\n        const mapTraitTypes = async (comboz) => {\r\n            let len = 0; let traitTypes = []; let ego, isPriority = [];\r\n            while( len < comboz.length ){\r\n                if(comboz[len].priority){\r\n                    isPriority.push(comboz[len].name);\r\n                }\r\n                ego = comboz[len].traits.map(( x, v ) => {\r\n                    return { trait_type: comboz[len].name, trait_name: comboz[len].traits[v].trait_name, value: x.ipfsHash};\r\n                });\r\n\r\n                traitTypes.push(ego);            \r\n                len++;\r\n            }\r\n            ego = null;\r\n            return [traitTypes, isPriority];\r\n        };\r\n        \r\n        const traitTypesPushNA = async ( traitTypes, priorities ) => {\r\n            let endo = 0;\r\n            while ( endo < traitTypes.length ) {\r\n                if(!priorities.includes(traitTypes[endo][0].trait_type)){\r\n                    traitTypes[endo].push({trait_type: traitTypes[endo][0].trait_type, value: 'N/A'});\r\n                }\r\n                endo++;\r\n            }\r\n            return traitTypes\r\n        };\r\n\r\n        const insertBackground = async ( comboz, backgroundArray ) =>{\r\n            let d = 0; const backgrounds = await loop_and_pin_background( backgroundArray );\r\n            while( d < comboz.length ){\r\n                let newBG = backgrounds[ Math.floor(Math.random() * backgrounds.length) ];\r\n                comboz[d].splice(0, 0, { trait_type: \"background\", trait_name: newBG.trait_name, value: newBG.ipfsHash });\r\n                d++;\r\n            }\r\n        };\r\n\r\n        const allPossibleCombos = async ( collectionName, layersArray, bgArray )=> {\r\n            let comboz = [];\r\n            // let layerz = JSON.parse( JSON.stringify(state.data.layers) );\r\n            const loop_and_pin = await loop_and_pin_layers( collectionName, layersArray );\r\n            const map_traits = await mapTraitTypes(loop_and_pin);\r\n            const traittypes_fin = await traitTypesPushNA(map_traits[0], map_traits[1]);\r\n            \r\n            await get_all_possible_array_combos(traittypes_fin, comboz);\r\n            await shuffle(comboz);\r\n            // console.log(`bg: ${JSON.stringify(bgArray)}`)\r\n            if ( bgArray?.length > 0 ) { await insertBackground( comboz, bgArray ); }\r\n            return comboz;\r\n        };\r\n\r\n        let combo =  await allPossibleCombos( state.data.coll_name, state.data.layers, state.data.background );\r\n        const possibleCombos = combo.length;\r\n        const byteSize = async (obj)=>{\r\n            let str = null;\r\n            if( typeof(obj) === 'string' ){\r\n                str = obj;\r\n            }else{\r\n                str = JSON.stringify(obj);\r\n            }\r\n            const bytes = new TextEncoder().encode(str).length;\r\n            return bytes;\r\n        };\r\n\r\n        const getBytes = await byteSize(combo).then((res)=>res);\r\n\r\n        console.log(`size of combo: ${getBytes} bytes`);\r\n\r\n        const pinCombo = async (combo, optns, pinUrl)=> {\r\n            let pin_body = new FormData();\r\n            pin_body.append('path', JSON.stringify(combo)); \r\n            pin_body.append('the_options', JSON.stringify(optns));\r\n            const pinnedCombo = await fetch( pinUrl, {method:'POST', body: pin_body}).then((rezz)=>rezz.json()).then((pinned)=>pinned);\r\n            pin_body = null;\r\n            return pinnedCombo;\r\n        }\r\n\r\n        let optns = { pinataMetadata:{ name: state.data.coll_name, keyvalues: {} }, pinataOptions: { cidVersion: 0 } };\r\n        \r\n        let pinnedCombo;\r\n        if(getBytes < 20000000){\r\n            pinnedCombo = await pinCombo( combo, optns, `${state.baseServerUri}pinnitcombo` );\r\n            console.log(`pinning combo!`)\r\n        }\r\n        else{\r\n            pinnedCombo = {IpfsHash: null};\r\n        }\r\n\r\n        const drawimage = async (traitTypes, width, height) => {\r\n            let sampleArray = []; const cap_it = traitTypes.length;\r\n            for( let v = 0; v < cap_it; v++ ){\r\n                const  drawableTraits = traitTypes[v].filter( x=> x.value !== 'N/A');\r\n                const drawableTraits_length = drawableTraits.length;\r\n                const canvas = document.createElement(\"canvas\");\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                const ctx = canvas.getContext( '2d'  );\r\n                let loadedimgs = 1;\r\n                for(let p = 0; p < drawableTraits_length; p++) {\r\n                    let  drawableTrait = drawableTraits[p];\r\n                    try {\r\n                        // newlayers =  { trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash }\r\n                        let iterlength = ( ( p === 0 ) && state.data.background.length > 0 )?state.data.background.length:state.data.newlayers.length;\r\n                        loop1:\r\n                        for( let i = 0; i < iterlength; i++ ) {\r\n                            const traitinfo = ( ( p === 0 ) && state.data.background.length > 0 )?state.data.background[i]:state.data.newlayers[i];\r\n                            if( traitinfo.ipfsHash === drawableTrait.value ){\r\n                                console.log(`drawing images: ${p}`)\r\n\r\n                                // console.log(`trait ipfsHash: ${traitinfo.ipfsHash}, drawableTrait value: ${ drawableTrait.value }, name:: ${JSON.stringify(state.data.layers[traitinfo.layer_index].traits[traitinfo.trait_index].trait_name)}`);\r\n                                let img = new Image();\r\n                                let base4path = ( ( p === 0 ) && state.data.background.length > 0 )?traitinfo.path:state.data.layers[traitinfo.layer_index].traits[traitinfo.trait_index].path;\r\n                                img.src = imgURLFromBase64String(base4path);\r\n                                // eslint-disable-next-line no-loop-func\r\n                                img.addEventListener( \"load\", async ()=>{\r\n                                    // console.log(`loaded img: ${loadedimgs}, drawableTraits length: ${drawableTraits_length}, sample index: ${v}`);\r\n                                    ctx.drawImage(img, 0, 0, width, height);\r\n                                    if( loadedimgs === drawableTraits_length ){\r\n                                        const sampleimage = await imgToBase64String(null, canvas.toDataURL(\"image/png\"));\r\n                                        sampleArray.push( { name: `sample turd #${v}`, attributes: drawableTraits, path: sampleimage } );\r\n                                        const updateDB = async ( data, collname, account, thesamples, combo_ipfs_hash )=>{\r\n                                            let payload = new FormData();\r\n                                            payload.append('data', JSON.stringify(state.data));\r\n                                            payload.append('collname', state.data.coll_name);\r\n                                            payload.append('collSym', state.data.coll_symbol);\r\n                                            payload.append('account', conntd);\r\n                                            payload.append('ipfs_uri', combo_ipfs_hash);\r\n                                            // payload.append('samples', JSON.stringify(thesamples));\r\n                                            // let saveCollection = await fetch(`${state.baseServerUri}/savenftcollection`, {method:'POST', body:payload}).then((response)=>response.json()).then((ress)=>ress);\r\n                                            payload = null;\r\n                                            let newcontract = JSON.parse(JSON.stringify(yaadcontract));\r\n                                            newcontract.name = state.data.coll_name.split(\" \").join(\"_\");\r\n                                            return setState((prev)=>({...prev, data: {...prev.data, coll_name: prev.data.coll_name, coll_symbol: prev.data.coll_symbol, samples: thesamples, possibleCombos, contracts: [newcontract] }, currsubState: \"RandomGenerator-RandomGenerated\" }));\r\n                                        };\r\n                                        if( v === (cap_it-1) ){\r\n                                            await updateDB(state.data, state.data.coll_name, conntd, sampleArray, pinnedCombo);\r\n                                        }\r\n                                    }\r\n                                    loadedimgs++;\r\n                                });\r\n                                break loop1;\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(`drawing error occurred: ${JSON.stringify(error)}`)\r\n                        // return res.json({error, current_state: `looping through attributes, failed to draw index ${p}. Details: ${JSON.stringify(traits[p])}`})\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const getSamplesAndClearComboData = async (comboz, cap)=>{\r\n            const cap_it = (cap)?cap:comboz.length;\r\n            let sampleImgs = [];\r\n            for(let v = 0; v < cap_it; v++){\r\n                sampleImgs.push(comboz[v]);\r\n            }\r\n\r\n            combo = null;\r\n            \r\n            return drawimage(sampleImgs, 1000, 1000);\r\n        };\r\n\r\n        const samples = await getSamplesAndClearComboData(combo, printCap);\r\n    }\r\n    \r\n    const handleSol = async (e)=>{\r\n        showLoading();\r\n        let elem  = (e)?e.target:null;\r\n        let elemFiles = elem.files;\r\n        \r\n        const  readAndShowFiles = async (demFiles) => {\r\n            let contractArray = [];\r\n            for (let dafile of demFiles) {\r\n                let readr = new FileReader();\r\n                readr.onloadend = async ()=>{\r\n                    let  nameArray = dafile.name.split('.');\r\n                    nameArray.splice((dafile.name.split('.').length-1),1);\r\n                    contractArray.push({name: nameArray.join('.'), contract: readr.result});\r\n                    \r\n                    if(contractArray.length === demFiles.length){\r\n                        state.data.contracts = contractArray;\r\n                        state.currsubState = \"RandomGenerator-LayerOptions-ContractName\";\r\n                        setState((prev)=>prev);\r\n                        hideLoading();\r\n                    }\r\n                }\r\n                // readr.\r\n                readr.readAsText(dafile);\r\n            }\r\n        }\r\n\r\n        await readAndShowFiles(elemFiles);\r\n    };\r\n\r\n    const formDataHandler = (e)=>{\r\n        const ele = e.target;\r\n        const eleID = ele.getAttribute(\"id\");\r\n        const the_value = ele.value.trim();\r\n        \r\n        if ( contractZone ) { ele.value = state.data.coll_name; return; }\r\n        if ( the_value === \"\" ) return false;\r\n        \r\n        switch ( eleID ) {\r\n            case \"contractName\":\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 30 ) ) { ele.value = state.data.coll_name; return; }\r\n                state.data.coll_name = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n            case \"contractSymbol\":\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 4 ) ) { ele.value = state.data.coll_symbol; return; }\r\n                state.data.coll_symbol = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n            default:\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 50 ) ) { ele.value = state.formVals; return; }\r\n                state.formVals = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n        }\r\n        return;\r\n    }\r\n    \r\n    function GenLayers (){\r\n        function Layerz( { layerData } ){\r\n            let mouseUpFired, initPositions = [], elebox = document.getElementById('LayerGenBoxx'), newindex = null;\r\n\r\n            useEffect(()=>{\r\n                [].forEach.call(document.getElementsByClassName('layerBox'), (element) => {\r\n                    initPositions.push( element.getBoundingClientRect().top + document.getElementById('popup').scrollTop );\r\n                });\r\n            },[ elebox, initPositions ])\r\n\r\n            const layer_move_initializer = ( event, layerIndex )=>{\r\n                if(event.target.getAttribute('class') === 'layerBox'){\r\n                    mouseUpFired = false;\r\n\r\n                    if(event.type === 'mousedown' || event.type === 'touchstart'){\r\n                        if(mouseUpFired === true){ return false; }\r\n                        let div = event.target, divWitdh = div.clientWidth, popup = document.getElementById('popup'), indexOfSelectedItem = layerIndex, arrayOfEles = document.getElementsByClassName('layerBox'), centerofdiv = div.clientHeight/2;\r\n                        div.classList.add(\"sortable-handler\");\r\n                        newindex = indexOfSelectedItem;\r\n                        div.style.width = divWitdh+'px';\r\n                        div.style.top = (event.type === 'touchstart')?((event.touches[0].clientY + popup.scrollTop) - centerofdiv)+'px':((event.clientY + popup.scrollTop) - centerofdiv)+'px';\r\n                        \r\n                        window.onmousemove = (e)=>{\r\n                            if(mouseUpFired === false){\r\n                                div.style.top = ((e.clientY + popup.scrollTop) - centerofdiv)+'px';\r\n                                initPositions.forEach((element, i) => {\r\n                                    if ( indexOfSelectedItem > i ) {\r\n                                        if ( ( ( e.clientY + popup.scrollTop ) - 35 ) < ( element ) && ( ( e.clientY + popup.scrollTop ) - 35 ) > ( element - 70 ) ) {\r\n                                            divSwapper(arrayOfEles[i].parentNode, div.parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n\r\n                                    if( indexOfSelectedItem < i ) {\r\n                                        if ( ( ( e.clientY + popup.scrollTop ) + 35 ) > ( element + 70 ) && ( ( e.clientY + popup.scrollTop ) + 35 ) < ( element + 140 ) ) {\r\n                                            divSwapper(div.parentNode, arrayOfEles[i].parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        };\r\n                        \r\n                        window.ontouchmove = (e)=>{\r\n                            if(mouseUpFired === false){\r\n                                div.style.top = ( ( e.touches[0].clientY + popup.scrollTop ) - centerofdiv )+'px';\r\n                                initPositions.forEach((element, i) => {\r\n                                    if ( indexOfSelectedItem > i ) {\r\n                                        if( ( ( e.touches[0].clientY + popup.scrollTop ) - 35 ) < (element) && ( ( e.touches[0].clientY + popup.scrollTop ) - 35 ) > ( element - 70 ) ){\r\n                                            divSwapper(arrayOfEles[i].parentNode, div.parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n\r\n                                    if ( indexOfSelectedItem < i ) {\r\n                                        if( ( ( e.touches[0].clientY + popup.scrollTop ) + 35 ) > ( element + 70 ) && ( ( e.touches[0].clientY + popup.scrollTop ) + 35 ) < ( element + 140 )){\r\n                                            divSwapper( div.parentNode, arrayOfEles[i].parentNode );\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n                                });\r\n                                \r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n            };\r\n\r\n            const layer_move_ender = ( event, initIndex )=>{\r\n                if(event.target.getAttribute('class') === 'layerBox'){ showLoading(); }\r\n                \r\n                mouseUpFired = true;\r\n                \r\n                if( event.type === 'mouseup' || event.type === 'touchend' || event.type === 'touchcancel'){\r\n                    let div = event.target;\r\n                    div.classList.remove(\"sortable-handler\");\r\n                    let arrayOfEles = document.getElementsByClassName('layerBox');\r\n                    let p = 0;\r\n    \r\n                    while ( p < arrayOfEles.length ) {\r\n                        arrayOfEles[p].classList.remove('betweenItem_two');\r\n                        arrayOfEles[p].classList.remove('betweenItem');\r\n                        p++;\r\n                    }\r\n    \r\n                    mouseUpFired = true;\r\n    \r\n                    if( event.target.getAttribute('class') === 'layerBox' ){\r\n                        if( initIndex !== newindex){\r\n                            let tempArray = state.data.layers.splice( initIndex, 1 )[0];\r\n                            state.data.layers.splice(newindex, 0, tempArray);\r\n                        }\r\n                        setState((prev)=>({...prev}));\r\n                        return hideLoading();\r\n                    }\r\n                }\r\n                \r\n            };\r\n\r\n            const setTrait = async ( e, parentIndx, indx )=>{\r\n                e.preventDefault();\r\n                const ele = e.target;\r\n                if(ele.value){\r\n                    state.data.layers[ parentIndx ].traits[ indx ].trait_name = ele.value;\r\n                    ele.setAttribute( 'placeholder', ele.value );\r\n                }\r\n            };\r\n\r\n            const delTrait = ( e, parentIndx, indxx )=>{\r\n                showLoading();\r\n                state.data.layers[ parentIndx ].traits.splice( indxx, 1 );\r\n                if ( state.data.layers[ parentIndx ].traits.length === 0 ) state.data.layers.splice( parentIndx, 1 );\r\n\r\n                hideLoading();\r\n                return setState((prev)=>({...prev}));\r\n            };\r\n    \r\n            const LayerImagesBox = ()=>{\r\n                let boxcont = [], traitLength = state.data.layers[ layerData.index ].traits.length;\r\n                for ( let indxx = 0; indxx < traitLength; indxx++ ) {\r\n                    let imgsrc = `data:image/${state.data.layers[ layerData.index ].traits[ indxx ].ext};base64,${state.data.layers[ layerData.index ].traits[ indxx ].path}`,\r\n                    traitName = state.data.layers[ layerData.index ].traits[ indxx ].trait_name;\r\n                    boxcont.push(<div key={indxx} className='layer-image-container'>\r\n                        <div className='img-box'>\r\n                            <img src={imgsrc} alt=''/>\r\n                        </div>\r\n                        <div className='traitName'>\r\n                            <input className='traitNameBox' id={\"traitName_\"+indxx} placeholder={ traitName } type=\"text\" name='name' onClick={(e)=>{ e.target.value = traitName}} onChange={(e)=>setTrait( e, layerData.index, indxx )} />\r\n                            <button className=\"del-trait\" onClick={ (e)=>delTrait( e, layerData.index, indxx ) } >X</button>\r\n                        </div>\r\n                    </div>)                             \r\n                };\r\n                return(boxcont);\r\n            }\r\n            \r\n            return(\r\n                <div className='layer-box-content' onMouseDown={(e)=>layer_move_initializer( e, layerData.index )} onMouseUp={(e)=>layer_move_ender( e, layerData.index )} onTouchStart={(e)=>layer_move_initializer( e, layerData.index )} onTouchCancel={(e)=>layer_move_ender( e, layerData.index )} onTouchEnd={(e)=>layer_move_ender( e, layerData.index )}>\r\n                    <div className='layerBox'>\r\n                        <button className='expander-box' onClick={(e)=>expandbox( e, layerData.index )} >\r\n                            <div className=\"prioBox\" style={{width:\"10px\", float: \"left\", height:\"10px\", borderRadius:\"5px\", left:\"-10px\", top:\"-10px\", boxSizing:\"border-box\", backgroundColor:\"rgb(140, 140, 140)\"}} onClick={()=>{return false}}>\r\n                                <div className=\"prioBoxx\" style={{width:\"70%\", height:\"70%\", margin:\"15%\", borderRadius:\"35%\", backgroundColor:(state.data.layers[ layerData.index ].priority)?\"rgb(0, 172, 7)\":\"#F0000\", boxSizing:\"border-box\", borderLeft:(state.data.layers[ layerData.index ].priority)?\"1px solid rgb(159, 255, 162)\":\"1px solid rgb(190, 190, 190)\", borderTop:(state.data.layers[ layerData.index ].priority)?\"1px solid rgb(159, 255, 162)\":\"1px solid rgb(190, 190, 190)\"}}>\r\n                                    <div className=\"prioBoxxx\" style={{width:\"30%\", height:\"30%\", top:\"1px\", right:\"1px\", borderRadius:\"35%\", backgroundColor:(state.data.layers[ layerData.index ].priority)?\"rgb(159, 255, 162)\":\"rgb(190, 190, 190)\", boxSizing:\"border-box\",}}>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='layer-name' >\r\n                                <span> { state.data.layers[ layerData.index ].name } </span>\r\n                            </div>\r\n                            <div className='triangle-icon-container' >\r\n                                <img className='triangle-icon' src='./inverted-triangle.svg' alt='' />\r\n                            </div>\r\n                        </button>\r\n                        <div className='edit-layer-box'>\r\n                            <div className='edit-layer-icon-div' onClick={(e)=>setState((prev)=>({...prev, temp_index:layerData.index, currsubState: \"RandomGenerator-LayerOptions-Edit-Layer\" } )) }>\r\n                                <img src='./edit icon.svg' alt='Edit layer' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='layer-images-box inactive'>\r\n                        <button className='add-Layer-imgs' onClick={()=>setState((prev)=>({...prev, temp_index:layerData.index, currsubState: \"RandomGenerator-LayerOptions-AddLayer\" })) } >+</button>\r\n                        <LayerImagesBox/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        if(state.data.layers.length > 0){\r\n            let layerlen = state.data.layers.length, layerindx = 0, boxcont = [];\r\n            for ( layerindx; layerindx < layerlen; layerindx++ ){\r\n                boxcont.push(<Layerz layerData={{ index:layerindx }} key={layerindx}/>);\r\n            }\r\n            return(boxcont)\r\n        }\r\n    }\r\n    \r\n    // console.log(`char code for space: ${\" \".charCodeAt(0)}`);\r\n    \r\n    function TheBGs(){\r\n        const setBGTrait = ( e, bgtraitIndex )=>{\r\n            e.preventDefault(); const ele = e.target;\r\n            \r\n            if( ele.value ){\r\n                state.data.background[ bgtraitIndex ].trait_name = ele.value;\r\n                ele.setAttribute('placeholder', ele.value);\r\n            }\r\n        };\r\n\r\n        const delBG = ( e, bgtraitIndex )=>{\r\n            showLoading();\r\n            state.data.background.splice( bgtraitIndex, 1);\r\n            if( state.data.background?.length === 0 ) { delete state.data.background; }\r\n            setState((prev)=>({...prev}));\r\n            return hideLoading()\r\n        };\r\n        \r\n        if(state.data.layers?.length > 1){\r\n            if(state.data.background){\r\n                const bglength = state.data.background.length; let bgstack = [];\r\n                \r\n                for ( let indxx = 0; indxx < bglength; indxx++ ){\r\n                    const imgURL = `data:image/${ state.data.background[indxx].ext };base64,`+state.data.background[indxx].path;\r\n                    bgstack.push( <div key={indxx} className='BG_UpldContentBx'><div className='BG_UpldContent'><img src={imgURL} alt=''/><div className='traitName'><input className='BG_traitNameBox' type={'text'} placeholder={ state.data.background[ indxx ].trait_name } onClick={ (e)=> { e.target.value = state.data.background[ indxx ].trait_name} } onChange={(e)=>setBGTrait( e, indxx )} /></div></div><button className=\"delBG\" id={'deleteBGUpldContentBx_'+indxx} onClick={ (e)=>delBG( e, indxx )}>X</button></div> )\r\n                }\r\n\r\n                return( <> <div className='bg_title_box'> <span> Backgrounds </span> </div> {bgstack} <div className='LayerbgAdd' id='selectBG' onClick={(e)=>setState((prev)=>({...prev, currsubState:\"RandomGenerator-LayerOptions-BG-Upld\" }))}> <div className='LayerbgContentadd'> <span>+</span> </div> <span> Add image. </span> </div> </> )\r\n            }\r\n        }\r\n    }\r\n    \r\n    let activeContract = state.data[\"activeContract\"], conDetails = {};\r\n    \r\n    useEffect(()=>{\r\n        if(state.data[\"contracts\"] && activeContract){\r\n            conDetails[\"name\"] = state.data[\"contracts\"][activeContract].name;\r\n            conDetails[\"contract\"] = state.data[\"contracts\"][activeContract].contract;\r\n        }\r\n    },[activeContract])\r\n\r\n    function ThaSamples (){\r\n        if(state.data.samples?.length > 0){\r\n            let sampleLen = 0; let boxcont = [];\r\n\r\n            while (sampleLen < state.data.samples?.length){\r\n                const imgurl = imgURLFromBase64String(state.data.samples[sampleLen].path);\r\n                boxcont.push(<div key={sampleLen} className='layer-image-container'><div className={\"img-box\"}><img className='sampleImage' src={imgurl} alt=''/></div></div>);\r\n                sampleLen++;\r\n            }\r\n            \r\n            return(<div className='contracted-box'>\r\n                <div id='nftSamples-container' className='contracted-container'>\r\n                    <h3>Generated Samples</h3>\r\n                    { boxcont }\r\n                </div>\r\n                <button className=\"expander-div\" onClick={(e)=>{ expandABox( e, document.getElementById( 'nftSamples-container' ), 'nftSamples-expanded-container', 'nftSamples-contracted-container' ); }} >expand</button>\r\n            </div>)\r\n        }\r\n\r\n        // showLoading();\r\n        // checkWorkInterval(`${state.baseServerUri}progress/generator/${state.data.coll_name}`, 45000, (piss)=>{\r\n        //     console.log(`meeehh its done-- ${JSON.stringify(piss)}`);\r\n        //     if(piss !== null && piss !== undefined){\r\n        //         stopCheckWork();\r\n        //         state.data.samples = piss.data.samples;\r\n        //         setState((prev)=>prev);\r\n        //         hideLoading();\r\n        //     }\r\n\r\n        //     return (<span style={{color:\"white\"}}>homoooo: {piss}</span> )\r\n        // });\r\n    }\r\n    \r\n    let contractZone = (state.currsubState === \"RandomGenerator-RandomGenerated\")?true:false;\r\n    \r\n    function ContractBox(){\r\n        let boxxcont = [];\r\n        if(state.data.contracts?.length > 0 && state.currsubState !== \"RandomGenerator-ContractDeployed\"){\r\n            const the_contracts = state.data.contracts; let contractLen = the_contracts.length;\r\n            \r\n            // const showContract = ( e, daindex )=>{\r\n            //     showLoading(); e.preventDefault();\r\n            //     state.data.activeContract = daindex;\r\n            //     setState((prev)=>({...prev}));\r\n            //     hideLoading();\r\n            // };\r\n            \r\n            // for ( let sampleLen = 0; sampleLen < contractLen; sampleLen++ ){\r\n            //     boxxcont.push(\r\n            //         <button key={sampleLen} onClick={ (e)=>showContract( e, sampleLen ) } className={\"contractBox\"} >\r\n            //             <img src='./solidity_icon.svg' id={\"contractBoxImg_\"+sampleLen} alt=''/>\r\n            //             <span id={\"contractBoxSpan_\"+sampleLen}>{ the_contracts[sampleLen].name }</span>\r\n            //         </button>\r\n            //     );\r\n                \r\n            //     sampleLen++;\r\n            // }\r\n            \r\n            let contractDetailsBox = <div className='contracted-box'>\r\n                <div style={{ height:'20px', width:'20px', margin:'0px 0px -30px auto', cursor:'pointer'}} onClick={(e)=>fetch(nftcontract).then( r=>r.text()).then( async (contract)=>{ return setState((prev)=>({...prev, formVals:{contract}, currsubState:\"RandomGenerator-LayerOptions-Write-Contract\" })); })}>\r\n                    <img src='./edit icon.svg' alt=''/>\r\n                </div>\r\n                <div id='contracted-container' className='contracted-container'>\r\n                    <h3>{state.data.contracts[0]?.name}.sol</h3>\r\n                    <span>{state.data.contracts[0]?.contract}</span>\r\n                </div>\r\n                <button className=\"expander-div\" onClick={(e)=>expandABox( e, document.getElementById('contracted-container'), 'contracted-container-expanded', 'contracted-container') } >expand</button>\r\n            </div>;\r\n            return( <> {/* <div id=\"pissingD\"> {boxxcont} </div> */} {contractDetailsBox} </> )\r\n        }\r\n    }\r\n\r\n    function AddLayer(){\r\n        return(\r\n            <div style={{marginBottom:\"20px\"}}>\r\n                <input type=\"file\" id={(contractZone)?'project_contract':'single_asset'} name={(contractZone)?'project_contract':'single_asset'} accept={(contractZone)?'*':\"image/*\"} multiple=\"multiple\" style={{opacity:100, zIndex:1}} onChange={(contractZone)?handleSol:state.data.func} hidden/>\r\n                <button className='generatorRightPanelAddNewLayer' id='generatorRightPanelAddNewLayer' onClick={(e)=>{ if( state.data.coll_name?.length > 0 && state.data.coll_symbol?.length > 0 ){ return setState((prev)=>({...prev, temp_index:null, currsubState: \"RandomGenerator-LayerOptions-AddLayer\" })); }else{ let messages = []; if( !state.data.coll_symbol ){ messages.push(\"Enter a project/NFT symbol!\") } if( !state.data.coll_name ){ messages.push( \"Enter a project/NFT name!\" ) } if( messages.length > 0 ){ return setMsgStacks( (prev)=>({...prev, messages, substate:state.currsubState }) ) } } }} > + </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function CollNameBox(){\r\n        return(<div className='coll_name_box'>\r\n            <div className='contractNameContainer'>\r\n                <input type='text' id='contractName' className='contractName' placeholder={(state.data.coll_name)?`Name: ${state.data.coll_name}`:\"Name: \"} onChange={formDataHandler} onClick={(e)=> (state.data.coll_name)? e.target.value = state.data.coll_name:false} />\r\n            </div>\r\n            <div className='contractSymbolContainer'>\r\n                <input type='text' id='contractSymbol' className='contractSymbol' placeholder={(state.data.coll_symbol)?`Symbol: ${state.data.coll_symbol}`:\"Symbol: \"} onChange={formDataHandler} onClick={(e)=> (state.data.coll_symbol)? e.target.value = state.data.coll_symbol:false } />\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    const setNumbers = async ( e, inputText )=>{\r\n        document.getElementById(\"solidityEditor\").value = inputText;\r\n        let numberOfLines = inputText.split('\\n').length;\r\n        let newlen;\r\n\r\n        if ( numberOfLines > document.getElementById('lineNumbers')?.childElementCount && document.getElementById('lineNumbers')?.childElementCount !== 0 ){\r\n            newlen = document.getElementById('lineNumbers')?.childElementCount;\r\n            for ( newlen; newlen < numberOfLines; newlen++ ) {\r\n                document.getElementById('lineNumbers').innerHTML += `<span></span>`;\r\n            }\r\n        }\r\n\r\n        if( numberOfLines < document.getElementById('lineNumbers')?.childElementCount ){\r\n            newlen = document.getElementById('lineNumbers')?.childElementCount - numberOfLines;\r\n            // for ( numberOfLines; numberOfLines < newlen; numberOfLines++ ) {\r\n            let indx = 0;\r\n            while ( indx < newlen ) {\r\n                document.getElementById('lineNumbers').childNodes[numberOfLines].remove();\r\n                indx++;\r\n            }\r\n        }\r\n\r\n        if ( document.getElementById('lineNumbers')?.childElementCount === 0 ){\r\n            let indx = 0;\r\n            while ( indx < numberOfLines ) {\r\n                document.getElementById('lineNumbers').innerHTML += `<span></span>`;\r\n                indx++;\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"solidityEditor\").style.height = (document.getElementById('lineNumbers').clientHeight+20)+\"px\";\r\n        return hideLoading();\r\n    }\r\n\r\n    let currentSubState, LayerUpldBoxTitle, mainBox, submitButton, addLayer, coll_Name_Box;\r\n    useEffect( ()=>{\r\n        if ( state.currsubState === \"RandomGenerator-LayerOptions-Write-Contract\" ){\r\n            document.getElementById('solidityEditor').value = state.formVals.contract;\r\n            setNumbers( null, state.formVals.contract );\r\n            return hideLoading();\r\n        }\r\n    },[ state.currsubState ])\r\n\r\n    // useEffect( ()=>{\r\n    //     if ( document.getElementById('lineNumbers')?.childElementCount !==  document.getElementById('solidityEditor')?.value.split('\\n').length  ){\r\n    //         setNumbers( null, document.getElementById('solidityEditor')?.value );\r\n    //     }\r\n    // },[ state.formVals.contract ])\r\n    \r\n    switch ( state.currsubState ) {\r\n        case \"RandomGenerator-ContractDeployed\":\r\n        // case \"RandomGenerator-RandomGenerated\":\r\n            let contractDeployed = state.currsubState === \"RandomGenerator-ContractDeployed\";\r\n            coll_Name_Box = ( !contractDeployed )?<CollNameBox/>:\"\";\r\n            mainBox = <div className='contracted-box' id='LayerGenBoxx'> \r\n                <div className='contract-deployed-container'>\r\n                    <BoxTitle data={{divClass:'optionsTitle', textType:'h2', text:'Contract Deployed.'}}/>\r\n                    <a href={state.data.contract_link} target=\"_blank\" rel=\"noreferrer\"><BoxTitle data={{divClass:'regularText', textType:'span', text:`Contract address: ${state.data.contract_address}`}}/></a>\r\n                </div>\r\n                <ThaSamples/>\r\n            </div>;\r\n            break;\r\n        case \"RandomGenerator-RandomGenerated\":\r\n            coll_Name_Box = <CollNameBox/> ;\r\n            mainBox = <div id='LayerGenBoxx'>\r\n                <BoxTitle data={{divClass:'contractTitle', textType:'h2', text:'Deploy Contract'}}/>\r\n                <ContractBox/>\r\n                <ThaSamples/>\r\n                <Buttonz data={{class:\"submitBttn\", id:'Generate-pfp', value: 'Deploy Contract', func: deployContract}} />;\r\n            </div>;\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-AddLayer\":\r\n        case \"RandomGenerator-LayerOptions-BG-Upld\":\r\n            let addLayerIMG = state.currsubState === 'RandomGenerator-LayerOptions-AddLayer';\r\n            let layerImg_tmpIndx = ( addLayerIMG && state.temp_index === null )\r\n            let pissoffbox = ( layerImg_tmpIndx )?<input className='LayerName' id='LayerName' name='name' type='text' placeholder={(state.formVals !== null)?state.formVals:'Enter layer name.'} onChange={formDataHandler} onClick={(e)=> e.target.value = state.formVals}/>:<BoxTitle data={{ divClass:\"editBoxTitle\", textType:'h2', text:`Upload images.`}}/>;\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                { pissoffbox }\r\n                <BoxTitle data={{ divClass:\"optionsTitle\", textType:'span', text:( addLayerIMG )?(`Click the \"+\" to upload layer images${( state.temp_index !== null)?\" for: \"+state.data.layers[ state.temp_index ]?.name:\"\"}.`):`Click the \"+\" to upload background images.`}}/>\r\n                <button className='plusBttn' id='LayerUpldLabel' htmlFor='multi_asset' style={{ fontSize: '50px !important'}} onClick={( addLayerIMG )?(e)=>{ showLoading(e); let ele_val = state.formVals; if( !ele_val && state.temp_index === null ) { e.preventDefault(); setMsgStacks((prev)=>( {...prev, messages:[ \"Enter a layer name!\" ], substate:state.currsubState } )); return hideLoading(e); } document.getElementById('multi_asset').click(); return hideLoading(e); }:(e)=>{ showLoading(e); document.getElementById('multi_asset').click(); return hideLoading(e);}} >+\r\n                    <input type={'file'} id='multi_asset' name={( addLayerIMG )?'multi_asset':'bg_asset'} multiple='multiple' onChange={ (e)=>handleAddLayerUpld( e, state.temp_index ) } hidden/>\r\n                    {/* <DaInput data={{hidden:true, type:'file', typeId:'multi_asset', class:'inactive', name:( addLayerIMG )?'multi_asset':'bg_asset', multiple:'multiple', accept:'image/*', onChange:handleAddLayerUpld}}/> */}\r\n                </button>\r\n                <div id='layerContentBox'></div>\r\n                <button className=\"submitBttn\" id={( addLayerIMG )?'addLayerImages':'bg_upld'} onClick={ (e)=>handleAddLayerUpld( e, state.temp_index ) } >\r\n                    {( addLayerIMG )?((typeof( state.temp_index ) === \"number\")?'Add':'Create'):'No Background'}\r\n                </button>\r\n            </div>;\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Edit-Layer\":\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{divClass:\"editBoxTitle\", textType:'h2', text:`Edit '${state.data.layers[ state.temp_index ]?.name}' layer.`}}/>\r\n                <div style={{ padding:\"0px 10px 10px 10px\"}}>\r\n                    <BoxTitle data={{divClass:\"optionsTitle\", textType:'span', text:`Rename layer.`}}/>\r\n                    <Buttonz data={{class:'renameLayerBttn', id:'bg_upld', value:'Rename', func: renameLayer}} />\r\n                </div>\r\n                <div style={{ padding: \"0px 10px 10px 10px\", width: \"30%\", boxSizing: \"border-box\", display: \"inline-block\"}}>\r\n                    <BoxTitle data={{divClass:\"optionsTitle\", textType:'span', text:`Prioritized.`}}/>\r\n                    <button id=\"priorityLayerBttn\" className={( state.data.layers[ state.temp_index ].priority === true )?'disablepriorityLayerBttn':'makepriorityLayerBttn'} onClick={(e)=>{ prioritizeLayer(e) }}>\r\n                        <div id='makepriorityLayerOption' className={( state.data.layers[ state.temp_index ].priority === true )?'ispriorityLayerOption':'notpriorityLayerOption'}>\r\n                            <span id='makepriorityLayerOptionSpan'>{( state.data.layers[ state.temp_index ].priority === true )?\"YES\":\"NO\"}</span>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n                <div style={{ padding: \"0px 10px 10px 10px\", width: \"70%\", boxSizing: \"border-box\", display: \"inline-block\", float:\"right\"}}>\r\n                    <BoxTitle data={{divClass:\"optionsTitle\", textType:'span', text:`Delete layer.`}}/>\r\n                    <Buttonz data={{class:\"delLayerBttn\", id:'bg_upld', value: 'DELETE', func: delLayer}} />\r\n                </div>\r\n            </div>\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Rename_Layer\":\r\n        case \"RandomGenerator-LayerOptions-Del-Layer\":\r\n            let renameBox = state.currsubState === \"RandomGenerator-LayerOptions-Rename_Layer\"\r\n            let newLayerName = ( renameBox )?<DaInput data={{typeClass:'LayerName', typeId:'LayerName', name:'name', type:'text', placeholder:state.data.layers[ state.temp_index ].name, onChange:formDataHandler}}/>:<Buttonz data={{class:'delLayerBttn', id:'', value:'YES', func: delLayer}} />;\r\n\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{divClass:\"optionsTitle\", textType:'h4', text:( renameBox )?'Change layer name.':`Select yes to delete ${state.data.layers[ state.temp_index ]?.name} layer.`}}/>\r\n                { newLayerName }\r\n                <button className=\"nodelLayerBttn\" onClick={( renameBox )?renameLayer:closeLayerOptionsBox}>{(renameBox)?'RENAME':'NO'}</button>\r\n            </div>\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Write-Contract\":\r\n            showLoading();\r\n            \r\n            const newlineLen = state.formVals.contract.split('\\n').length;\r\n            let boxxcont = [];\r\n            for ( let indx = 0; indx < newlineLen; indx++ ){\r\n                boxxcont.push(<span key={indx}></span>);\r\n                indx++;\r\n            }\r\n            \r\n            let numberSideBar = <div className=\"lineNumbers\" id=\"lineNumbers\" >{boxxcont}</div>\r\n            currentSubState = <div className='LayerUpldBox' style={{padding:\"20px\"}}>\r\n                <BoxTitle data={{divClass:\"contractEditorTitle\", textType:'h2', text:'Edit or paste contract'}}/>\r\n                <BoxTitle data={{divClass:\"contractEditorTitle\", textType:'span', text:'Changing contract may affect NFT contract deploy.'}}/>\r\n                <div className=\"editor\" id=\"editor\" >\r\n                    {numberSideBar}\r\n                    <textarea className='solidityEditor' id='solidityEditor' onKeyUp={(e)=>{ if( e.key === \"Enter\" || e.key === \"Backspace\" || e.key === \"Delete\" || e.ctrlKey ){ return setNumbers( e, e.target.value ) }}} onChange={(e)=>state.formVals.contract = e.target.value } />\r\n                </div>\r\n                <Buttonz data={{class:\"nodelLayerBttn\", id:'', value:'SUBMIT', func: ()=>{return false}}} />\r\n            </div>\r\n            break;\r\n        default:\r\n            currentSubState = null;\r\n            state.formVals = null; state.temp_index = null;\r\n            submitButton = ( state.data.layers.length > 1 )?<button id={(state.data.background)?'Generate-pfp':'selectBG'} className=\"submitBttn\" onClick={(e)=>{ if ( state.data.background ) { return generate_it( e, 40 ) }else{ return setState((prev)=>({...prev, currsubState:\"RandomGenerator-LayerOptions-BG-Upld\" })); } }} >{ (state.data.background)?'GENERATE':'Choose Backgrounds' }</button>:'';\r\n            coll_Name_Box = <CollNameBox/>; addLayer = <AddLayer/>;\r\n            mainBox = <> <div id='LayerGenBoxx'><GenLayers/></div><TheBGs/>{submitButton}</>;\r\n            LayerUpldBoxTitle = <><BoxTitle data={{divClass:'optionsTitle', textType:'h2', text:'LAYERS'}}/> <BoxTitle data={{divClass:'optionsTitle', textType:'span', text:`Click the \"+\" icon to create new layer`}}/></>;\r\n            break;\r\n    }\r\n\r\n    function MainContainer (){\r\n        if(!currentSubState){\r\n            return(\r\n                <div className='RandomGenerator'>\r\n                    <button className='closeBox' onClick={()=> setState( (prev)=>({...prev, state:\"home\", data:{ coll_name : null, coll_symbol : null, layers:[] }, currsubState:null, temp_index: null }) ) }>X</button>\r\n                    {coll_Name_Box}\r\n                    <div className='LayerGenBox'>\r\n                        { LayerUpldBoxTitle }\r\n                        { addLayer }\r\n                        { mainBox }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className={( state.currsubState === 'RandomGenerator-LayerOptions-Write-Contract')?'RandomGenerator':'LayerOptionsBox'} >\r\n                    <button className='closeBox' onClick={closeLayerOptionsBox} >X</button>\r\n                    {currentSubState}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    return( <div className='popupdark' id='popup'> <MainContainer/> </div> )\r\n};\r\n\r\nexport default RandomGenerator;"],"names":["validateIMGtype","demFiles","childClassName","parentIdName","wrongFiles","callback","parentEle","document","getElementById","innerHTML","demlen","length","console","log","imgArray","loadedImgs","n","dafile","getFileExtension","path","ext","match","img","createElement","addEventListener","width","height","push","para","appendChild","classList","add","remove","src","shuffle","arra1","temp","index","ctr","Math","floor","random","get_all_possible_array_combos","input","output","da_path","undefined","current_item","gogo","val","pop","slice","expandABox","e","expandee","expandedClass","contractedClass","ele","target","contains","innerText","divSwapper","node1","node2","parentNode","replaceChild","insertBefore","props","window","location","host","useContext","MsgContext","setMsgStacks","msgStacks","StateContext","state","setState","possblCombos","arrays","combos","forEach","indx","arr","priority","traits","data","activeContract","closeLayerOptionsBox","gotTo","showLoading","currsubState","localStorage","clear","formVals","tempFiles","prev","deployContract","currentAddress","address","coll_name","trim","messages","substate","coll_symbol","fetch","nftcontract","then","r","text","contract","contractOptions","language","sources","content","settings","outputSelection","JSON","stringify","chainData","connectToChain","blockchainNetworks","connected","contractData","FormData","hideLoading","append","baseServerUri","method","body","theresponse","json","compiled","compiledContract","abi","bytecode","factory","ContractFactory","signer","deploy","tx","catch","nftToken","reason","code","contract_address","contract_link","currentNetwork","handleAddLayerUpld","layerindex","bgElement","getAttribute","files","currentFiles","err","wrongfiles","imgfiles","textContent","layerName","temp_index","layers","name","msgs","background","file_len","imgURL","Array","isArray","trait_name","delLayer","previous","splice","renameLayer","the_value","alreadyExists","isAplhaNumeric","stringLengthRange","prioritizeLayer","isPriority","toggle","generate_it","printCap","psblecmbz","currentSubState","conntd","account","loop_and_pin_layers","collName","emptyComboArray","newlayers","reverse","pin","options","pinataMetadata","keyvalues","description","pinataOptions","cidVersion","assetName","Date","now","pin_body","base64ToBlob","imgURLFromBase64String","newimgBlob","resp","pinned","pinnedItem","ipfsHash","IpfsHash","layer_index","trait_index","loop_and_pin_background","backgrounds","newBGArray","f","fetchBlob","blob","pinnedBG","mapTraitTypes","comboz","len","traitTypes","ego","map","x","v","trait_type","value","traitTypesPushNA","priorities","endo","includes","insertBackground","backgroundArray","d","newBG","allPossibleCombos","collectionName","layersArray","bgArray","loop_and_pin","map_traits","traittypes_fin","combo","possibleCombos","byteSize","obj","str","bytes","TextEncoder","encode","res","getBytes","pinCombo","optns","pinUrl","rezz","pinnedCombo","drawimage","sampleArray","cap_it","drawableTraits","filter","drawableTraits_length","canvas","ctx","getContext","loadedimgs","p","drawableTrait","iterlength","loop1","i","traitinfo","Image","base4path","drawImage","imgToBase64String","toDataURL","sampleimage","attributes","updateDB","collname","thesamples","combo_ipfs_hash","payload","newcontract","parse","yaadcontract","split","join","samples","contracts","error","getSamplesAndClearComboData","cap","sampleImgs","handleSol","elem","elemFiles","readAndShowFiles","contractArray","readr","FileReader","onloadend","nameArray","result","readAsText","formDataHandler","eleID","contractZone","setAttribute","GenLayers","Layerz","mouseUpFired","layerData","initPositions","elebox","newindex","useEffect","call","getElementsByClassName","element","getBoundingClientRect","top","scrollTop","layer_move_initializer","event","layerIndex","type","div","divWitdh","clientWidth","popup","indexOfSelectedItem","arrayOfEles","centerofdiv","clientHeight","style","touches","clientY","onmousemove","ontouchmove","layer_move_ender","initIndex","tempArray","setTrait","parentIndx","preventDefault","LayerImagesBox","boxcont","traitLength","indxx","imgsrc","traitName","className","alt","id","placeholder","onClick","onChange","delTrait","onMouseDown","onMouseUp","onTouchStart","onTouchCancel","onTouchEnd","me","backgroundColor","expandbox","float","borderRadius","left","boxSizing","margin","borderLeft","borderTop","right","layerlen","layerindx","TheBGs","bglength","bgstack","bgtraitIndex","setBGTrait","delBG","conDetails","ThaSamples","sampleLen","imgurl","ContractBox","contractDetailsBox","cursor","AddLayer","marginBottom","accept","multiple","opacity","zIndex","func","hidden","CollNameBox","LayerUpldBoxTitle","mainBox","submitButton","addLayer","coll_Name_Box","setNumbers","inputText","numberOfLines","childElementCount","newlen","childNodes","contractDeployed","divClass","textType","href","rel","class","addLayerIMG","pissoffbox","htmlFor","fontSize","click","padding","display","renameBox","newLayerName","typeClass","typeId","newlineLen","boxxcont","numberSideBar","onKeyUp","key","ctrlKey","MainContainer"],"sourceRoot":""}