{"version":3,"file":"static/js/972.02203d9b.chunk.js","mappings":"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","sources":["helpers/imgdatahelpers.js","helpers/generatorhelpers.js","helpers/domHandlers.js","pages/generator.js"],"sourcesContent":["import { getFileExtension } from \"./imgSignatures\";\r\n\r\nconst validateIMGtype = async ( demFiles, childClassName, parentIdName, wrongFiles, callback) => {\r\n    const parentEle = document.getElementById(parentIdName);\r\n    parentEle.innerHTML = \"\";\r\n    const demlen = demFiles.length;\r\n    console.log(`files length: ${demlen}`);\r\n    if ( demlen === 0 ){\r\n        return callback([ \"Upload a file.\", wrongFiles]);\r\n    }\r\n    let imgArray = [];\r\n    let loadedImgs = 0;\r\n    for ( let n = 0; n < demlen ; n++ ) {\r\n        let dafile = demFiles[n];\r\n        // eslint-disable-next-line no-loop-func\r\n        getFileExtension( dafile, ( [ path, ext ] )=>{\r\n            if( ext ){\r\n                if(ext.match(/^(jpg|png|gif|webp)/)){\r\n                    const img = document.createElement(\"img\");\r\n\r\n                    img.addEventListener( 'load', ()=>{\r\n                        if( img.width <= 2000  && img.height <= 2000 ){\r\n                            loadedImgs++;\r\n                            imgArray.push( { path, ext, } );\r\n                            const para = document.createElement(\"div\");\r\n                            para.appendChild(img);\r\n                            para.classList.add((childClassName)?childClassName:'LayerUpldContentBox')\r\n                            parentEle.appendChild(para);\r\n                        }else{\r\n                            img.remove();\r\n                            wrongFiles.push(n);\r\n                        }\r\n\r\n                        if ( demlen === ( loadedImgs + wrongFiles.length ) ){\r\n                            return callback( [ null, wrongFiles, ( imgArray.length > 0 )?imgArray:null ] );\r\n                        }\r\n                    });\r\n                    img.src = `data:image/${ext};base64,`+path;\r\n                }else{\r\n                    wrongFiles.push(n);\r\n                    if(demFiles.length === wrongFiles.length){\r\n                        return callback([ \"Unsupported file types! JPG, JPEG, PNG, WEBP, GIF, JPE only.\", wrongFiles ]);\r\n                    }\r\n                }\r\n            }else{\r\n                wrongFiles.push(n);\r\n                if(demFiles.length === wrongFiles.length){\r\n                    return callback([ \"Unknown file type, images only! Supported types: JPG, JPEG, PNG only.\", wrongFiles ]);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport { validateIMGtype }","\r\nconst shuffle = (arra1)=> {\r\n    var ctr = arra1.length, temp, index;\r\n    // While there are elements in the array\r\n    while (ctr > 0) {\r\n        // Pick a random index\r\n        index = Math.floor(Math.random() * ctr);\r\n        // Decrease ctr by 1\r\n        ctr--;\r\n        // And swap the last element with it\r\n        temp = arra1[ctr];\r\n        arra1[ctr] = arra1[index];\r\n        arra1[index] = temp;\r\n    }\r\n    return arra1;\r\n}\r\n\r\nconst get_all_possible_array_combos =  async ( input, output, n, da_path )=>{\r\n    da_path = (da_path === null || da_path === undefined)? []: da_path;\r\n    n = (n === null || n === undefined)? 0:n;\r\n    if(n < input.length){\r\n        const current_item = input[n]; let gogo = 0;\r\n        while(gogo < current_item.length){\r\n            let val = current_item[gogo];\r\n            da_path.push(val);\r\n            get_all_possible_array_combos(input, output, n+1, da_path);\r\n            da_path.pop();\r\n            gogo++;\r\n        }\r\n    }else{\r\n        output.push(da_path.slice());\r\n    }\r\n};\r\n\r\nconst checkJsonParse = (str)=>{\r\n    try {\r\n        JSON.parse(str);\r\n        return true;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport { shuffle, get_all_possible_array_combos, checkJsonParse };","const expandABox  = ( e, expandee, expandedClass, contractedClass )=>{\r\n    // element that calls the click event should be a button or element containing inner text\r\n    let ele = e.target;\r\n\r\n    // Check if div to be expanded is already expanded via a css class\r\n    // If it is expanded then swap class for a contracted css class ( which in this case is overflowY set to 'hidden' )\r\n    if ( expandee.classList.contains( expandedClass ) ) {\r\n        expandee.classList.remove( expandedClass );\r\n        expandee.classList.add( contractedClass ); // 'contract-container');\r\n        ele.innerText = \"expand\"\r\n    }else{\r\n        // If element contains contracted class instead then toggle it and replace it for expanded class\r\n        expandee.classList.add( expandedClass );\r\n        expandee.classList.remove( contractedClass );\r\n        ele.innerText = \"less\"\r\n    }\r\n};\r\n\r\nconst divSwapper = (node1, node2)=>{\r\n    node1.parentNode.replaceChild(node1, node2);\r\n    node1.parentNode.insertBefore(node2, node1); \r\n}\r\n\r\nexport { expandABox, divSwapper }","import React, { useContext, useEffect, lazy, Suspense } from 'react'\r\nimport { StateContext } from '../context/StateContext';\r\nimport { imgToBase64String, imgURLFromBase64String, base64ToBlob } from \"../helpers/imgBLOBto64\";\r\nimport { ContractFactory } from \"ethers\";\r\nimport { connectToChain, signer,  currentNetwork, blockchainNetworks, currentAddress } from \"../helpers/web3Helpers\";\r\nimport { validateIMGtype } from \"../helpers/imgdatahelpers\";\r\nimport { isAplhaNumeric, stringLengthRange } from \"../helpers/stringValidator\";\r\nimport { shuffle, get_all_possible_array_combos } from \"../helpers/generatorhelpers\";\r\nimport { expandABox, divSwapper } from \"../helpers/domHandlers\";\r\nimport yaadcontract from '../contracts/yaad.json';\r\nimport nftcontract from '../contracts/the_yaad.sol';\r\nimport { DaInput, BoxTitle, Buttonz } from '../components/form/formcomps';\r\nimport { LoadingBox, showLoading, hideLoading } from \"../components/ui/loading\";\r\nimport { MsgContext } from \"../context/msgcontext\";\r\nimport { Link } from 'react-router-dom';\r\nimport  './generator.css'\r\nimport { select } from 'async';\r\n// import CodeEditor from '../components/codeEditor/codeEditor';\r\nconst CodeEditor = lazy(()=> import('../components/codeEditor/codeEditor'));\r\n// const SelectCreateOption = lazy(()=> import('./pages/CreateOptions'));\r\n// const SingleNft = lazy(()=> import('./pages/singleNFT'));\r\n\r\nfunction RandomGenerator (props){\r\n    const pumpum = window.location.host;\r\n    let baseServerUri = ( pumpum  === \"localhost:3000\")?'api/':'https://yaadlabs.herokuapp.com/api/';\r\n    const homeState = { state:\"home\", data:{ coll_name : null, coll_symbol : null, layers:[] }, currsubState:null, temp_index: null, baseServerUri: baseServerUri,};\r\n    const defaultErrorStack = { intervalId:null, formdata:[], substate:null };\r\n    const { msgStacks, setMsgStacks } = useContext( MsgContext );\r\n    const { state, setState } = useContext( StateContext );\r\n    // useEffect(()=>{\r\n    //     if ( state.data.layers?.length > 0 ){\r\n    //         state.data.possibleCombos = 1;\r\n    //         state.data.layers.forEach((val, indx, arr)=>{\r\n    //             state.data.possibleCombos *= ( val.priority )?(val.traits.length):(val.traits.length+1) \r\n    //         });\r\n\r\n    //         console.log(`possible combos: ${state.data.possibleCombos}`);\r\n    //     }\r\n    // }, [ state.data ] )\r\nconst possblCombos = ( arrays )=>{\r\n    let combos = 1;\r\n    arrays.forEach((val, indx, arr)=>{\r\n        combos *= ( val.priority )?(val.traits.length):(val.traits.length+1) \r\n    });\r\n    return combos;\r\n}\r\n    var wrongFiles = [];\r\n    state.data.activeContract = 0;\r\n\r\n    const closeLayerOptionsBox = (e)=>{\r\n        showLoading();\r\n        let gotTo;\r\n        switch (state.currsubState) {\r\n            case \"RandomGenerator\":\r\n                localStorage.clear();\r\n                gotTo = { state:\"home\", data:\"\" };\r\n                break;\r\n            case \"RandomGenerator-LayerOptions-Write-Contract\":\r\n                state.formVals =  null;\r\n                gotTo = { currsubState:\"RandomGenerator-RandomGenerated\"};\r\n                break;\r\n            default:\r\n                delete state.data?.tempFiles;\r\n                gotTo = { currsubState: \"RandomGenerator\" };\r\n                break;\r\n        }\r\n\r\n        return setState((prev)=>({...prev, ...gotTo }));\r\n    };\r\n\r\n    const deployContract = async (e)=>{\r\n        showLoading(e);\r\n        const address = await currentAddress();\r\n        if(!state.data.coll_name || state.data.coll_name.trim() === \"\"){\r\n            return setMsgStacks( (prev)=>({...prev, messages:[ \"Enter a project/NFT name!\" ], substate:state.currsubState }) );\r\n        }\r\n        \r\n        if(!state.data.coll_symbol || state.data.coll_symbol.trim() === \"\"){\r\n            return setMsgStacks( (prev)=>({...prev, messages:[ \"Enter a symbol!\" ], substate:state.currsubState }) );\r\n        }\r\n\r\n        try {\r\n            fetch(nftcontract).then( r=>r.text()).then( async (contract)=>{\r\n                let contractOptions = {\r\n                    language: \"Solidity\", \r\n                    sources: {\r\n                    'yaad.sol': {\r\n                        content: contract\r\n                    }\r\n                    },\r\n                    settings:{\r\n                    outputSelection:{\r\n                        '*': {\r\n                        '*':['*']\r\n                        }\r\n                    }\r\n                    }\r\n                };\r\n                console.log(`chain data: ${JSON.stringify(state.chainData)}`);\r\n                const connected = await connectToChain( blockchainNetworks[6] );\r\n                let contractData = new FormData();\r\n                if( connected === false ) { hideLoading(); return false; }\r\n                contractData.append('contractJSON', JSON.stringify(contractOptions));\r\n                const compiledContract = await fetch( state.baseServerUri+\"compileContract\", { method:'POST',body: contractData} ).then((theresponse)=>theresponse.json()).then((compiled)=>compiled);\r\n                const abi = compiledContract.abi;\r\n                const bytecode = compiledContract.bytecode;\r\n                const factory = new ContractFactory(abi, bytecode, signer);\r\n                const nftToken = await factory.deploy(state.data.coll_name, state.data.coll_symbol).then((tx)=>tx).catch((e)=>e);\r\n                console.log(`address: ${address}, nft token: ${JSON.stringify(nftToken.reason)}`);\r\n                contractData = null;\r\n                if( nftToken.code ){\r\n                    hideLoading(e);\r\n                    return;\r\n                }\r\n\r\n                // {\"name\":\"ropsten\",\"chainId\":3,\"ensAddress\":\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"}\r\n                if(nftToken.address){\r\n                    hideLoading(e);\r\n                    return setState( (prev)=>( { ...prev, currsubState: \"RandomGenerator-ContractDeployed\", data:{...prev.data, contract_address: nftToken.address, contract_link: `https://${currentNetwork.name}.etherscan.io/address/${nftToken.address}`} } ));\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(`error: ${error}`)\r\n            return error;\r\n        }\r\n    };\r\n    \r\n    const handleAddLayerUpld = async ( e, layerindex )=>{\r\n        showLoading(e);\r\n        let layerName, bgElement = false;\r\n        \r\n        if( e.target.getAttribute('type') === 'file' && ( e.target.getAttribute('name') === 'multi_asset' || e.target.getAttribute('name') === 'bg_asset' ) ){\r\n            let currentFiles;\r\n            if ( e.target.files.length < 1 && state.data.tempFiles !== null ){ return hideLoading(e); }else{ currentFiles = e.target.files; }\r\n            if ( currentFiles.length < 1 ) { e.target.classList.remove('inactive'); return hideLoading(e); }\r\n\r\n            await validateIMGtype( currentFiles, 'LayerUpldContentBox', 'layerContentBox', [], ([ err, wrongfiles, imgfiles ])=>{\r\n                wrongFiles = wrongfiles;\r\n                if( err !== null || ( wrongfiles.length === currentFiles.length )) {\r\n                    hideLoading(e);\r\n                    return setMsgStacks((prev)=>({...prev, substate: state.currsubState, messages:(err !== null)?[err]:[ \"Images too large Max height: 2000px, max width: 2000px.\" ] }));\r\n                }\r\n\r\n                if( document.getElementById('bg_upld') ) document.getElementById('bg_upld').textContent = ( currentFiles.length > 0)?'NEXT':'No Background';\r\n                state.data.tempFiles = imgfiles;\r\n                return hideLoading(e);\r\n            });\r\n            \r\n            return;\r\n        }\r\n        \r\n        if( e.target.getAttribute(\"id\") !== \"bg_upld\" ){\r\n            layerName = ( state.temp_index === null )? state.formVals:state.data.layers[ state.temp_index ]?.name;//document.getElementById(\"LayerName\").value.trim();\r\n            let msgs = [];\r\n            console.log(`indx: ${ layerindex }`)\r\n            if( layerindex === null ){\r\n                state.data.layers?.forEach((val,indx, arr)=>{\r\n                    if( val.name === layerName ){\r\n                        msgs.push( \"This layer name is already in use, enter another!\" )\r\n                    }\r\n                })\r\n            }\r\n\r\n            if ( !layerName ){ msgs.push( \"Enter a layer name!\" ) }\r\n            if ( !state.data.tempFiles ){ msgs.push( \"Click the '+' to upload files!\" ) }\r\n            if ( msgs?.length > 0 ) { hideLoading(e); return setMsgStacks((prev)=>({...prev, substate: state.currsubState, messages:msgs, } ) ) }\r\n        }\r\n\r\n        bgElement=(e.target.getAttribute(\"id\") === \"bg_upld\")&& true;\r\n\r\n        if(( !state.data.tempFiles ) && e.target.getAttribute(\"id\") === \"bg_upld\" ){\r\n            state.data.background = ( !state.data.background || state.data.background?.length === 0 )?[]:state.data.background;\r\n            return closeLayerOptionsBox();\r\n        }\r\n\r\n        let file_len = state.data.tempFiles.length;\r\n        if ( layerindex === null && !bgElement ) { state.data.layers.push({ name: layerName, traits: [] }); layerindex = state.data.layers.length-1 }\r\n\r\n        for ( let n = 0; n < file_len; n++ ){\r\n            const imgURL = state.data.tempFiles[n].path\r\n            const ext = state.data.tempFiles[n].ext\r\n            \r\n            if(bgElement){\r\n                if( Array.isArray(state.data.background) ){\r\n                    state.data.background.push({trait_name: n, path: imgURL, ext, });\r\n                }else{\r\n                    state.data.background = [{trait_name: n, path: imgURL, ext, }]\r\n                }\r\n            }else{\r\n                await state.data.layers[ layerindex ].traits.push({ trait_name: n, path: imgURL, ext, });\r\n            }\r\n        }\r\n\r\n        return closeLayerOptionsBox();\r\n    }\r\n\r\n    const delLayer = async (e)=>{\r\n        if(state.currsubState === \"RandomGenerator-LayerOptions-Edit-Layer\"){\r\n            return setState((prev)=>( {...prev, currsubState: \"RandomGenerator-LayerOptions-Del-Layer\", previous: prev.currsubState} ));\r\n        }else{\r\n            showLoading();\r\n            if( state.temp_index !== null ){\r\n                state.data.layers.splice( state.temp_index, 1);\r\n                hideLoading();\r\n                return closeLayerOptionsBox();\r\n            }\r\n            return closeLayerOptionsBox();\r\n        }\r\n    }\r\n    \r\n    const renameLayer = (e)=>{\r\n        showLoading(e);\r\n        const the_value = state.formVals;\r\n        if(state.currsubState === \"RandomGenerator-LayerOptions-Edit-Layer\"){\r\n            return setState((prev)=>({...prev, currsubState: \"RandomGenerator-LayerOptions-Rename_Layer\" }));\r\n        }else{\r\n            let alreadyExists = false;\r\n            if ( !isAplhaNumeric( the_value, [ \"_\", \" \",\".\" ] ) || !stringLengthRange( the_value, 1, 50 ) ) { hideLoading(e); return; }\r\n            state.data.layers.forEach((val, indx, arr)=>{\r\n                if ( val.name === the_value.trim() ){\r\n                    alreadyExists = true;\r\n                }\r\n            });\r\n\r\n            if ( alreadyExists === true ) {\r\n                hideLoading(e);\r\n                return setMsgStacks((prev)=>({...prev, messages:[ \"Layer name is already in use, Enter another name.\" ] }));\r\n            }\r\n\r\n            state.data.layers[ state.temp_index ].name = state.formVals;\r\n            // ele.setAttribute('placeholder', state.formVals);\r\n            return closeLayerOptionsBox();\r\n        }\r\n    };\r\n    \r\n    const prioritizeLayer = async (e)=>{\r\n        let isPriority = state.data.layers[ state.temp_index ].priority;\r\n        document.getElementById(\"priorityLayerBttn\").classList.toggle(\"disablepriorityLayerBttn\");\r\n        document.getElementById(\"priorityLayerBttn\").classList.toggle(\"makepriorityLayerBttn\");\r\n        document.getElementById(\"makepriorityLayerOption\").classList.toggle('ispriorityLayerOption');\r\n        document.getElementById(\"makepriorityLayerOption\").classList.toggle('notpriorityLayerOption');\r\n        document.getElementById(\"makepriorityLayerOptionSpan\").innerText =( isPriority === true )?\"NO\":\"YES\";\r\n        state.data.layers[ state.temp_index ].priority = !state.data.layers[ state.temp_index ].priority;\r\n        setState((prev)=>prev)\r\n    };\r\n\r\n    const expandbox = ( e, indx )=>{\r\n        showLoading();\r\n        let me = 0;\r\n        while( me < document.getElementsByClassName('layer-images-box' ).length){\r\n            if(me !== indx){\r\n                if(!document.getElementsByClassName('layer-images-box')[me].classList.contains('inactive')){\r\n                    document.getElementsByClassName('layer-images-box')[me].classList.add('inactive');\r\n                }\r\n                if(document.getElementsByClassName('triangle-icon')[me].classList.contains('rotateExpander')){\r\n                    document.getElementsByClassName('triangle-icon')[me].classList.remove('rotateExpander');\r\n                }\r\n            }\r\n            me++;\r\n        }\r\n\r\n        if(document.getElementsByClassName('layer-images-box')[indx].classList.contains('inactive')){\r\n            document.getElementsByClassName('triangle-icon')[indx].classList.add('rotateExpander');\r\n            document.getElementsByClassName('layer-images-box')[indx].classList.remove('inactive');\r\n            document.getElementsByClassName(\"expander-box\")[indx].style.backgroundColor = \"rgb(129, 129, 129)\";\r\n        }else{\r\n            document.getElementsByClassName('triangle-icon')[indx].classList.remove('rotateExpander');\r\n            document.getElementsByClassName('layer-images-box')[indx].classList.add('inactive');\r\n            document.getElementsByClassName(\"expander-box\")[indx].style.backgroundColor = \"rgb(190, 190, 190)\";\r\n        }\r\n\r\n        hideLoading();\r\n    };\r\n    \r\n    const generate_it = async ( e, printCap )=>{\r\n        showLoading(e);\r\n        const psblecmbz = possblCombos( state.data.layers );\r\n        if ( psblecmbz < printCap ){\r\n            hideLoading(e)\r\n            return setMsgStacks((prev)=>({...prev, messages: [ `Add more images to existing layers or create more layers. Your current layers only generate ${psblecmbz} possible unique images.` ], substate: state.currentSubState}));\r\n        }\r\n        let conntd = await connectToChain( blockchainNetworks[6] );\r\n        if( conntd === false ){ return false; }\r\n        \r\n        state.data.account = conntd;\r\n\r\n        const loop_and_pin_layers = async ( collName, layers )=>{\r\n            let emptyComboArray = []; state.data.newlayers = [];\r\n            layers.reverse();\r\n            for(let indx = 0; indx < layers.length; indx++){\r\n                emptyComboArray.push( { name: layers[indx].name, priority: layers[indx].priority, traits:[] } );\r\n                for( let pin = 0; pin < layers[indx].traits.length; pin++ ){\r\n                    const options = {\r\n                        pinataMetadata:{\r\n                        name: `${layers[indx].name}: ${layers[indx].traits[pin].trait_name}`,\r\n                        keyvalues: {\r\n                            description: `nft trait element from collection, generated by Yaad labs.`,\r\n                            name: `${layers[indx].name}: ${layers[indx].traits[pin].trait_name}`\r\n                        }\r\n                        },\r\n                        pinataOptions: {\r\n                            cidVersion: 0\r\n                        }\r\n                    };\r\n                    let assetName = conntd+\"__\"+Date.now()+\".\"+layers[indx].traits[pin].ext;\r\n                    let pin_body = new FormData();\r\n                    const newimgBlob = await base64ToBlob(imgURLFromBase64String(layers[indx].traits[pin].path));\r\n                    pin_body.append( 'img', newimgBlob, assetName );\r\n                    pin_body.append( 'the_options', JSON.stringify(options) );\r\n                    const pinnedItem = await fetch( `${state.baseServerUri}pinnit`, {method:'POST', body: pin_body} ).then((resp)=>resp.json()).then((pinned)=> pinned );\r\n                    layers[indx].traits[pin].ipfsHash = pinnedItem.IpfsHash;\r\n                    state.data.newlayers.push({ trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash })\r\n                    emptyComboArray[indx].traits.push({ trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash });\r\n                }\r\n            }\r\n            \r\n            return emptyComboArray;\r\n        };\r\n\r\n        const loop_and_pin_background = async ( backgrounds )=>{\r\n            let newBGArray = [];\r\n            for(let f = 0; f < backgrounds.length; f++){\r\n                const options = {\r\n                    pinataMetadata:{\r\n                    name: `background ${f}.`,\r\n                    keyvalues: {\r\n                        description: `nft trait element from collection, generated by Yaad labs.`,\r\n                    }\r\n                    },\r\n                    pinataOptions: {\r\n                        cidVersion: 0\r\n                    }\r\n                    \r\n                };\r\n\r\n                let assetName = conntd+\"__\"+Date.now()+\".\"+backgrounds[f].ext;\r\n                let pin_body = new FormData();\r\n                const fetchBlob = await fetch( imgURLFromBase64String( backgrounds[f].path ) );\r\n                const newimgBlob = await fetchBlob.blob();\r\n                pin_body.append( 'img', newimgBlob, assetName );\r\n                // pin_body.append( 'path',backgrounds[f].path );\r\n                pin_body.append( 'the_options', JSON.stringify(options) );\r\n                console.log(`pinning layers!`);\r\n                const pinnedBG = await fetch( `${state.baseServerUri}pinnit`, {method:'POST', body: pin_body}).then((resp)=>resp.json()).then((pinned)=>pinned);\r\n                backgrounds[f].ipfsHash = pinnedBG.IpfsHash;\r\n                newBGArray.push({ trait_name: backgrounds[f].trait_name, trait_index: f, ipfsHash: pinnedBG.IpfsHash});\r\n            }\r\n            return newBGArray;\r\n        };\r\n\r\n        const mapTraitTypes = async (comboz) => {\r\n            let len = 0; let traitTypes = []; let ego, isPriority = [];\r\n            while( len < comboz.length ){\r\n                if(comboz[len].priority){\r\n                    isPriority.push(comboz[len].name);\r\n                }\r\n                ego = comboz[len].traits.map(( x, v ) => {\r\n                    return { trait_type: comboz[len].name, trait_name: comboz[len].traits[v].trait_name, value: x.ipfsHash};\r\n                });\r\n\r\n                traitTypes.push(ego);            \r\n                len++;\r\n            }\r\n            ego = null;\r\n            return [traitTypes, isPriority];\r\n        };\r\n        \r\n        const traitTypesPushNA = async ( traitTypes, priorities ) => {\r\n            let endo = 0;\r\n            while ( endo < traitTypes.length ) {\r\n                if(!priorities.includes(traitTypes[endo][0].trait_type)){\r\n                    traitTypes[endo].push({trait_type: traitTypes[endo][0].trait_type, value: 'N/A'});\r\n                }\r\n                endo++;\r\n            }\r\n            return traitTypes\r\n        };\r\n\r\n        const insertBackground = async ( comboz, backgroundArray ) =>{\r\n            let d = 0; const backgrounds = await loop_and_pin_background( backgroundArray );\r\n            while( d < comboz.length ){\r\n                let newBG = backgrounds[ Math.floor(Math.random() * backgrounds.length) ];\r\n                comboz[d].splice(0, 0, { trait_type: \"background\", trait_name: newBG.trait_name, value: newBG.ipfsHash });\r\n                d++;\r\n            }\r\n        };\r\n\r\n        const allPossibleCombos = async ( collectionName, layersArray, bgArray )=> {\r\n            let comboz = [];\r\n            // let layerz = JSON.parse( JSON.stringify(state.data.layers) );\r\n            const loop_and_pin = await loop_and_pin_layers( collectionName, layersArray );\r\n            const map_traits = await mapTraitTypes(loop_and_pin);\r\n            const traittypes_fin = await traitTypesPushNA(map_traits[0], map_traits[1]);\r\n            \r\n            await get_all_possible_array_combos(traittypes_fin, comboz);\r\n            await shuffle(comboz);\r\n            // console.log(`bg: ${JSON.stringify(bgArray)}`)\r\n            if ( bgArray?.length > 0 ) { await insertBackground( comboz, bgArray ); }\r\n            return comboz;\r\n        };\r\n\r\n        let combo =  await allPossibleCombos( state.data.coll_name, state.data.layers, state.data.background );\r\n        const possibleCombos = combo.length;\r\n        const byteSize = async (obj)=>{\r\n            let str = null;\r\n            if( typeof(obj) === 'string' ){\r\n                str = obj;\r\n            }else{\r\n                str = JSON.stringify(obj);\r\n            }\r\n            const bytes = new TextEncoder().encode(str).length;\r\n            return bytes;\r\n        };\r\n\r\n        const getBytes = await byteSize(combo).then((res)=>res);\r\n\r\n        console.log(`size of combo: ${getBytes} bytes`);\r\n\r\n        const pinCombo = async (combo, optns, pinUrl)=> {\r\n            let pin_body = new FormData();\r\n            pin_body.append('path', JSON.stringify(combo)); \r\n            pin_body.append('the_options', JSON.stringify(optns));\r\n            const pinnedCombo = await fetch( pinUrl, {method:'POST', body: pin_body}).then((rezz)=>rezz.json()).then((pinned)=>pinned);\r\n            pin_body = null;\r\n            return pinnedCombo;\r\n        }\r\n\r\n        let optns = { pinataMetadata:{ name: state.data.coll_name, keyvalues: {} }, pinataOptions: { cidVersion: 0 } };\r\n        \r\n        let pinnedCombo;\r\n        if(getBytes < 20000000){\r\n            pinnedCombo = await pinCombo( combo, optns, `${state.baseServerUri}pinnitcombo` );\r\n            console.log(`pinning combo!`)\r\n        }\r\n        else{\r\n            pinnedCombo = {IpfsHash: null};\r\n        }\r\n\r\n        const drawimage = async (traitTypes, width, height) => {\r\n            let sampleArray = []; const cap_it = traitTypes.length;\r\n            for( let v = 0; v < cap_it; v++ ){\r\n                const  drawableTraits = traitTypes[v].filter( x=> x.value !== 'N/A');\r\n                const drawableTraits_length = drawableTraits.length;\r\n                const canvas = document.createElement(\"canvas\");\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                const ctx = canvas.getContext( '2d'  );\r\n                let loadedimgs = 1;\r\n                for(let p = 0; p < drawableTraits_length; p++) {\r\n                    let  drawableTrait = drawableTraits[p];\r\n                    try {\r\n                        // newlayers =  { trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash }\r\n                        let iterlength = ( ( p === 0 ) && state.data.background.length > 0 )?state.data.background.length:state.data.newlayers.length;\r\n                        loop1:\r\n                        for( let i = 0; i < iterlength; i++ ) {\r\n                            const traitinfo = ( ( p === 0 ) && state.data.background.length > 0 )?state.data.background[i]:state.data.newlayers[i];\r\n                            if( traitinfo.ipfsHash === drawableTrait.value ){\r\n                                console.log(`drawing images: ${p}`)\r\n\r\n                                // console.log(`trait ipfsHash: ${traitinfo.ipfsHash}, drawableTrait value: ${ drawableTrait.value }, name:: ${JSON.stringify(state.data.layers[traitinfo.layer_index].traits[traitinfo.trait_index].trait_name)}`);\r\n                                let img = new Image();\r\n                                let base4path = ( ( p === 0 ) && state.data.background.length > 0 )?traitinfo.path:state.data.layers[traitinfo.layer_index].traits[traitinfo.trait_index].path;\r\n                                img.src = imgURLFromBase64String(base4path);\r\n                                // eslint-disable-next-line no-loop-func\r\n                                img.addEventListener( \"load\", async ()=>{\r\n                                    // console.log(`loaded img: ${loadedimgs}, drawableTraits length: ${drawableTraits_length}, sample index: ${v}`);\r\n                                    ctx.drawImage(img, 0, 0, width, height);\r\n                                    if( loadedimgs === drawableTraits_length ){\r\n                                        const sampleimage = await imgToBase64String(null, canvas.toDataURL(\"image/png\"));\r\n                                        sampleArray.push( { name: `sample turd #${v}`, attributes: drawableTraits, path: sampleimage } );\r\n                                        const updateDB = async ( data, collname, account, thesamples, combo_ipfs_hash )=>{\r\n                                            let payload = new FormData();\r\n                                            payload.append('data', JSON.stringify(state.data));\r\n                                            payload.append('collname', state.data.coll_name);\r\n                                            payload.append('collSym', state.data.coll_symbol);\r\n                                            payload.append('account', conntd);\r\n                                            payload.append('ipfs_uri', combo_ipfs_hash);\r\n                                            // payload.append('samples', JSON.stringify(thesamples));\r\n                                            // let saveCollection = await fetch(`${state.baseServerUri}/savenftcollection`, {method:'POST', body:payload}).then((response)=>response.json()).then((ress)=>ress);\r\n                                            payload = null;\r\n                                            fetch(nftcontract).then( r=>r.text()).then( async (contract)=>{\r\n                                                // let newcontract = JSON.parse(JSON.stringify(yaadcontract));\r\n                                                // newcontract.name = state.data.coll_name.split(\" \").join(\"_\");\r\n                                                return setState((prev)=>({...prev, data: {...prev.data, coll_name: prev.data.coll_name, coll_symbol: prev.data.coll_symbol, samples: thesamples, possibleCombos, contracts: [{name:\"main\", contract,}] }, currsubState: \"RandomGenerator-RandomGenerated\" }));    \r\n                                            });\r\n                                        };\r\n                                        if( v === (cap_it-1) ){\r\n                                            await updateDB(state.data, state.data.coll_name, conntd, sampleArray, pinnedCombo);\r\n                                        }\r\n                                    }\r\n                                    loadedimgs++;\r\n                                });\r\n                                break loop1;\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(`drawing error occurred: ${JSON.stringify(error)}`)\r\n                        // return res.json({error, current_state: `looping through attributes, failed to draw index ${p}. Details: ${JSON.stringify(traits[p])}`})\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const getSamplesAndClearComboData = async (comboz, cap)=>{\r\n            const cap_it = (cap)?cap:comboz.length;\r\n            let sampleImgs = [];\r\n            for(let v = 0; v < cap_it; v++){\r\n                sampleImgs.push(comboz[v]);\r\n            }\r\n\r\n            combo = null;\r\n            \r\n            return drawimage(sampleImgs, 1000, 1000);\r\n        };\r\n\r\n        const samples = await getSamplesAndClearComboData(combo, printCap);\r\n    }\r\n    \r\n    const handleSol = async (e)=>{\r\n        showLoading();\r\n        let elem  = (e)?e.target:null;\r\n        let elemFiles = elem.files;\r\n        \r\n        const  readAndShowFiles = async (demFiles) => {\r\n            let contractArray = [];\r\n            for (let dafile of demFiles) {\r\n                let readr = new FileReader();\r\n                readr.onloadend = async ()=>{\r\n                    let  nameArray = dafile.name.split('.');\r\n                    nameArray.splice((dafile.name.split('.').length-1),1);\r\n                    contractArray.push({name: nameArray.join('.'), contract: readr.result});\r\n                    \r\n                    if(contractArray.length === demFiles.length){\r\n                        state.data.contracts = contractArray;\r\n                        state.currsubState = \"RandomGenerator-LayerOptions-ContractName\";\r\n                        setState((prev)=>prev);\r\n                        hideLoading();\r\n                    }\r\n                }\r\n                // readr.\r\n                readr.readAsText(dafile);\r\n            }\r\n        }\r\n\r\n        await readAndShowFiles(elemFiles);\r\n    };\r\n\r\n    const formDataHandler = (e)=>{\r\n        const ele = e.target;\r\n        const eleID = ele.getAttribute(\"id\");\r\n        const the_value = ele.value.trim();\r\n        \r\n        if ( contractZone ) { ele.value = state.data.coll_name; return; }\r\n        if ( the_value === \"\" ) return false;\r\n        \r\n        switch ( eleID ) {\r\n            case \"contractName\":\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 30 ) ) { ele.value = state.data.coll_name; return; }\r\n                state.data.coll_name = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n            case \"contractSymbol\":\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 4 ) ) { ele.value = state.data.coll_symbol; return; }\r\n                state.data.coll_symbol = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n            default:\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 50 ) ) { ele.value = state.formVals; return; }\r\n                state.formVals = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n        }\r\n        return;\r\n    }\r\n    \r\n    function GenLayers (){\r\n        function Layerz( { layerData } ){\r\n            let mouseUpFired, initPositions = [], elebox = document.getElementById('LayerGenBoxx'), newindex = null;\r\n\r\n            useEffect(()=>{\r\n                [].forEach.call(document.getElementsByClassName('layerBox'), (element) => {\r\n                    initPositions.push( element.getBoundingClientRect().top + document.getElementById('popup').scrollTop );\r\n                });\r\n            },[ elebox, initPositions ])\r\n\r\n            const layer_move_initializer = ( event, layerIndex )=>{\r\n                if(event.target.getAttribute('class') === 'layerBox'){\r\n                    mouseUpFired = false;\r\n\r\n                    if(event.type === 'mousedown' || event.type === 'touchstart'){\r\n                        if(mouseUpFired === true){ return false; }\r\n                        let div = event.target, divWitdh = div.clientWidth, popup = document.getElementById('popup'), indexOfSelectedItem = layerIndex, arrayOfEles = document.getElementsByClassName('layerBox'), centerofdiv = div.clientHeight/2;\r\n                        div.classList.add(\"sortable-handler\");\r\n                        newindex = indexOfSelectedItem;\r\n                        div.style.width = divWitdh+'px';\r\n                        div.style.top = (event.type === 'touchstart')?((event.touches[0].clientY + popup.scrollTop) - centerofdiv)+'px':((event.clientY + popup.scrollTop) - centerofdiv)+'px';\r\n                        \r\n                        window.onmousemove = (e)=>{\r\n                            if(mouseUpFired === false){\r\n                                div.style.top = ((e.clientY + popup.scrollTop) - centerofdiv)+'px';\r\n                                initPositions.forEach((element, i) => {\r\n                                    if ( indexOfSelectedItem > i ) {\r\n                                        if ( ( ( e.clientY + popup.scrollTop ) - 35 ) < ( element ) && ( ( e.clientY + popup.scrollTop ) - 35 ) > ( element - 70 ) ) {\r\n                                            divSwapper(arrayOfEles[i].parentNode, div.parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n\r\n                                    if( indexOfSelectedItem < i ) {\r\n                                        if ( ( ( e.clientY + popup.scrollTop ) + 35 ) > ( element + 70 ) && ( ( e.clientY + popup.scrollTop ) + 35 ) < ( element + 140 ) ) {\r\n                                            divSwapper(div.parentNode, arrayOfEles[i].parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        };\r\n                        \r\n                        window.ontouchmove = (e)=>{\r\n                            if(mouseUpFired === false){\r\n                                div.style.top = ( ( e.touches[0].clientY + popup.scrollTop ) - centerofdiv )+'px';\r\n                                initPositions.forEach((element, i) => {\r\n                                    if ( indexOfSelectedItem > i ) {\r\n                                        if( ( ( e.touches[0].clientY + popup.scrollTop ) - 35 ) < (element) && ( ( e.touches[0].clientY + popup.scrollTop ) - 35 ) > ( element - 70 ) ){\r\n                                            divSwapper(arrayOfEles[i].parentNode, div.parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n\r\n                                    if ( indexOfSelectedItem < i ) {\r\n                                        if( ( ( e.touches[0].clientY + popup.scrollTop ) + 35 ) > ( element + 70 ) && ( ( e.touches[0].clientY + popup.scrollTop ) + 35 ) < ( element + 140 )){\r\n                                            divSwapper( div.parentNode, arrayOfEles[i].parentNode );\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n                                });\r\n                                \r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n            };\r\n\r\n            const layer_move_ender = ( event, initIndex )=>{\r\n                if(event.target.getAttribute('class') === 'layerBox'){ showLoading(); }\r\n                \r\n                mouseUpFired = true;\r\n                \r\n                if( event.type === 'mouseup' || event.type === 'touchend' || event.type === 'touchcancel'){\r\n                    let div = event.target;\r\n                    div.classList.remove(\"sortable-handler\");\r\n                    let arrayOfEles = document.getElementsByClassName('layerBox');\r\n                    let p = 0;\r\n    \r\n                    while ( p < arrayOfEles.length ) {\r\n                        arrayOfEles[p].classList.remove('betweenItem_two');\r\n                        arrayOfEles[p].classList.remove('betweenItem');\r\n                        p++;\r\n                    }\r\n    \r\n                    mouseUpFired = true;\r\n    \r\n                    if( event.target.getAttribute('class') === 'layerBox' ){\r\n                        if( initIndex !== newindex){\r\n                            let tempArray = state.data.layers.splice( initIndex, 1 )[0];\r\n                            state.data.layers.splice(newindex, 0, tempArray);\r\n                        }\r\n                        setState((prev)=>({...prev}));\r\n                        return hideLoading();\r\n                    }\r\n                }\r\n                \r\n            };\r\n\r\n            const setTrait = async ( e, parentIndx, indx )=>{\r\n                e.preventDefault();\r\n                const ele = e.target;\r\n                if(ele.value){\r\n                    state.data.layers[ parentIndx ].traits[ indx ].trait_name = ele.value;\r\n                    ele.setAttribute( 'placeholder', ele.value );\r\n                }\r\n            };\r\n\r\n            const delTrait = ( e, parentIndx, indxx )=>{\r\n                showLoading();\r\n                state.data.layers[ parentIndx ].traits.splice( indxx, 1 );\r\n                if ( state.data.layers[ parentIndx ].traits.length === 0 ) state.data.layers.splice( parentIndx, 1 );\r\n\r\n                hideLoading();\r\n                return setState((prev)=>({...prev}));\r\n            };\r\n    \r\n            const LayerImagesBox = ()=>{\r\n                let boxcont = [], traitLength = state.data.layers[ layerData.index ].traits.length;\r\n                for ( let indxx = 0; indxx < traitLength; indxx++ ) {\r\n                    let imgsrc = `data:image/${state.data.layers[ layerData.index ].traits[ indxx ].ext};base64,${state.data.layers[ layerData.index ].traits[ indxx ].path}`,\r\n                    traitName = state.data.layers[ layerData.index ].traits[ indxx ].trait_name;\r\n                    boxcont.push(<div key={indxx} className='layer-image-container'>\r\n                        <div className='img-box'>\r\n                            <img src={imgsrc} alt=''/>\r\n                        </div>\r\n                        <div className='traitName'>\r\n                            <input className='traitNameBox' id={\"traitName_\"+indxx} placeholder={ traitName } type=\"text\" name='name' onClick={(e)=>{ e.target.value = traitName}} onChange={(e)=>setTrait( e, layerData.index, indxx )} />\r\n                            <button className=\"del-trait\" onClick={ (e)=>delTrait( e, layerData.index, indxx ) } >X</button>\r\n                        </div>\r\n                    </div>)                             \r\n                };\r\n                return(boxcont);\r\n            }\r\n            \r\n            return(\r\n                <div className='layer-box-content' onMouseDown={(e)=>layer_move_initializer( e, layerData.index )} onMouseUp={(e)=>layer_move_ender( e, layerData.index )} onTouchStart={(e)=>layer_move_initializer( e, layerData.index )} onTouchCancel={(e)=>layer_move_ender( e, layerData.index )} onTouchEnd={(e)=>layer_move_ender( e, layerData.index )}>\r\n                    <div className='layerBox'>\r\n                        <button className='expander-box' onClick={(e)=>expandbox( e, layerData.index )} >\r\n                            <div className=\"prioBox\" style={{width:\"10px\", float: \"left\", height:\"10px\", borderRadius:\"5px\", left:\"-10px\", top:\"-10px\", boxSizing:\"border-box\", backgroundColor:\"rgb(140, 140, 140)\"}} onClick={()=>{return false}}>\r\n                                <div className=\"prioBoxx\" style={{width:\"70%\", height:\"70%\", margin:\"15%\", borderRadius:\"35%\", backgroundColor:(state.data.layers[ layerData.index ].priority)?\"rgb(0, 172, 7)\":\"#F0000\", boxSizing:\"border-box\", borderLeft:(state.data.layers[ layerData.index ].priority)?\"1px solid rgb(159, 255, 162)\":\"1px solid rgb(190, 190, 190)\", borderTop:(state.data.layers[ layerData.index ].priority)?\"1px solid rgb(159, 255, 162)\":\"1px solid rgb(190, 190, 190)\"}}>\r\n                                    <div className=\"prioBoxxx\" style={{width:\"30%\", height:\"30%\", top:\"1px\", right:\"1px\", borderRadius:\"35%\", backgroundColor:(state.data.layers[ layerData.index ].priority)?\"rgb(159, 255, 162)\":\"rgb(190, 190, 190)\", boxSizing:\"border-box\",}}>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='layer-name' >\r\n                                <span> { state.data.layers[ layerData.index ].name } </span>\r\n                            </div>\r\n                            <div className='triangle-icon-container' >\r\n                                <img className='triangle-icon' src='./inverted-triangle.svg' alt='' />\r\n                            </div>\r\n                        </button>\r\n                        <div className='edit-layer-box'>\r\n                            <div className='edit-layer-icon-div' onClick={(e)=>setState((prev)=>({...prev, temp_index:layerData.index, currsubState: \"RandomGenerator-LayerOptions-Edit-Layer\" } )) }>\r\n                                <img src='./edit icon.svg' alt='Edit layer' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='layer-images-box inactive'>\r\n                        <button className='add-Layer-imgs' onClick={()=>setState((prev)=>({...prev, temp_index:layerData.index, currsubState: \"RandomGenerator-LayerOptions-AddLayer\" })) } >+</button>\r\n                        <LayerImagesBox/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        if(state.data.layers.length > 0){\r\n            let layerlen = state.data.layers.length, layerindx = 0, boxcont = [];\r\n            for ( layerindx; layerindx < layerlen; layerindx++ ){\r\n                boxcont.push(<Layerz layerData={{ index:layerindx }} key={layerindx}/>);\r\n            }\r\n            return(boxcont)\r\n        }\r\n    }\r\n    \r\n    // console.log(`char code for space: ${\" \".charCodeAt(0)}`);\r\n    \r\n    function TheBGs(){\r\n        const setBGTrait = ( e, bgtraitIndex )=>{\r\n            e.preventDefault(); const ele = e.target;\r\n            \r\n            if( ele.value ){\r\n                state.data.background[ bgtraitIndex ].trait_name = ele.value;\r\n                ele.setAttribute('placeholder', ele.value);\r\n            }\r\n        };\r\n\r\n        const delBG = ( e, bgtraitIndex )=>{\r\n            showLoading();\r\n            state.data.background.splice( bgtraitIndex, 1);\r\n            if( state.data.background?.length === 0 ) { delete state.data.background; }\r\n            setState((prev)=>({...prev}));\r\n            return hideLoading()\r\n        };\r\n        \r\n        if(state.data.layers?.length > 1){\r\n            if(state.data.background){\r\n                const bglength = state.data.background.length; let bgstack = [];\r\n                \r\n                for ( let indxx = 0; indxx < bglength; indxx++ ){\r\n                    const imgURL = `data:image/${ state.data.background[indxx].ext };base64,`+state.data.background[indxx].path;\r\n                    bgstack.push( <div key={indxx} className='BG_UpldContentBx'><div className='BG_UpldContent'><img src={imgURL} alt=''/><div className='traitName'><input className='BG_traitNameBox' type={'text'} placeholder={ state.data.background[ indxx ].trait_name } onClick={ (e)=> { e.target.value = state.data.background[ indxx ].trait_name} } onChange={(e)=>setBGTrait( e, indxx )} /></div></div><button className=\"delBG\" id={'deleteBGUpldContentBx_'+indxx} onClick={ (e)=>delBG( e, indxx )}>X</button></div> )\r\n                }\r\n\r\n                return( <> <div className='bg_title_box'> <span> Backgrounds </span> </div> {bgstack} <div className='LayerbgAdd' id='selectBG' onClick={(e)=>setState((prev)=>({...prev, currsubState:\"RandomGenerator-LayerOptions-BG-Upld\" }))}> <div className='LayerbgContentadd'> <span>+</span> </div> <span> Add image. </span> </div> </> )\r\n            }\r\n        }\r\n    }\r\n    \r\n    let activeContract = state.data[\"activeContract\"], conDetails = {};\r\n    \r\n    useEffect(()=>{\r\n        if(state.data[\"contracts\"] && activeContract){\r\n            conDetails[\"name\"] = state.data[\"contracts\"][activeContract].name;\r\n            conDetails[\"contract\"] = state.data[\"contracts\"][activeContract].contract;\r\n        }\r\n    },[activeContract])\r\n\r\n    function ThaSamples (){\r\n        if(state.data.samples?.length > 0){\r\n            let sampleLen = 0; let boxcont = [];\r\n\r\n            while (sampleLen < state.data.samples?.length){\r\n                const imgurl = imgURLFromBase64String(state.data.samples[sampleLen].path);\r\n                boxcont.push(<div key={sampleLen} className='layer-image-container'><div className={\"img-box\"}><img className='sampleImage' src={imgurl} alt=''/></div></div>);\r\n                sampleLen++;\r\n            }\r\n            \r\n            return(<div className='contracted-box'>\r\n                <div id='nftSamples-container' className='contracted-container'>\r\n                    <h3>Generated Samples</h3>\r\n                    { boxcont }\r\n                </div>\r\n                <button className=\"expander-div\" onClick={(e)=>{ expandABox( e, document.getElementById( 'nftSamples-container' ), 'nftSamples-expanded-container', 'nftSamples-contracted-container' ); }} >expand</button>\r\n            </div>)\r\n        }\r\n\r\n        // showLoading();\r\n        // checkWorkInterval(`${state.baseServerUri}progress/generator/${state.data.coll_name}`, 45000, (piss)=>{\r\n        //     console.log(`meeehh its done-- ${JSON.stringify(piss)}`);\r\n        //     if(piss !== null && piss !== undefined){\r\n        //         stopCheckWork();\r\n        //         state.data.samples = piss.data.samples;\r\n        //         setState((prev)=>prev);\r\n        //         hideLoading();\r\n        //     }\r\n\r\n        //     return (<span style={{color:\"white\"}}>homoooo: {piss}</span> )\r\n        // });\r\n    }\r\n    \r\n    let contractZone = (state.currsubState === \"RandomGenerator-RandomGenerated\")?true:false;\r\n    \r\n    function ContractBox(){\r\n        let boxxcont = [];\r\n        if(state.data.contracts?.length > 0 && state.currsubState !== \"RandomGenerator-ContractDeployed\"){\r\n            const the_contracts = state.data.contracts;\r\n            let contractLen = the_contracts.length;\r\n            \r\n            const showContract = ( e, daindex )=>{\r\n                showLoading(); e.preventDefault();\r\n                state.data.activeContract = daindex;\r\n                setState((prev)=>({...prev}));\r\n                hideLoading();\r\n            };\r\n            \r\n            for ( let sampleLen = 0; sampleLen < contractLen; sampleLen++ ){\r\n                boxxcont.push(\r\n                    <button key={sampleLen} onClick={ (e)=>showContract( e, sampleLen ) } className={\"contractBox\"} >\r\n                        <img src='./solidity_icon.svg' id={\"contractBoxImg_\"+sampleLen} alt=''/>\r\n                        <span id={\"contractBoxSpan_\"+sampleLen} >{ the_contracts[sampleLen].name }</span>\r\n                    </button>\r\n                );\r\n            }\r\n            \r\n            let contractDetailsBox = <div className='contracted-box'>\r\n                <div style={{ height:'20px', width:'20px', margin:'0px 0px -30px auto', cursor:'pointer'}} onClick={(e)=>{ showLoading(); return setState((prev)=>({...prev, formVals:{activeContractIndex:0, contract:state.data.contracts}, currsubState:\"RandomGenerator-LayerOptions-Write-Contract\" })); } }>\r\n                    <img src='./edit icon.svg' alt=''/>\r\n                </div>\r\n                <div id='contracted-container' className='contracted-container'>\r\n                    <h3>{state.data.contracts[0]?.name}.sol</h3>\r\n                    <span>{state.data.contracts[0]?.contract}</span>\r\n                </div>\r\n                <button className=\"expander-div\" onClick={(e)=>expandABox( e, document.getElementById('contracted-container'), 'contracted-container-expanded', 'contracted-container') } >expand</button>\r\n            </div>;\r\n            return( <> <BoxTitle data={{divClass:'contractTitle', textType:'h2', text:'Deploy Contract'}}/>{ <div id=\"pissingD\"> {boxxcont} </div> } {contractDetailsBox} </> )\r\n        }else{\r\n            return(<>\r\n                <BoxTitle data={{divClass:'optionsTitle', textType:'h2', text:'Contract Deployed.'}}/>\r\n                <a href={state.data.contract_link} target=\"_blank\" rel=\"noreferrer\">\r\n                    <BoxTitle data={{divClass:'regularText', textType:'span', text:`Contract address: ${state.data.contract_address}`}}/>\r\n                </a>\r\n            </>\r\n            )\r\n        }\r\n    }\r\n\r\n    function CollNameBox(){\r\n        return(<div className='coll_name_box'>\r\n            <div className='contractNameContainer'>\r\n                <input type='text' id='contractName' className='contractName' placeholder={(state.data.coll_name)?`Name: ${state.data.coll_name}`:\"Name: \"} onChange={formDataHandler} onClick={(e)=> (state.data.coll_name)? e.target.value = state.data.coll_name:false} />\r\n            </div>\r\n            <div className='contractSymbolContainer'>\r\n                <input type='text' id='contractSymbol' className='contractSymbol' placeholder={(state.data.coll_symbol)?`Symbol: ${state.data.coll_symbol}`:\"Symbol: \"} onChange={formDataHandler} onClick={(e)=> (state.data.coll_symbol)? e.target.value = state.data.coll_symbol:false } />\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    let currentSubState, mainBox, submitButton, coll_Name_Box;\r\n\r\n    switch ( state.currsubState ) {\r\n        case \"RandomGenerator-ContractDeployed\":\r\n        case \"RandomGenerator-RandomGenerated\":\r\n            mainBox = <div id='LayerGenBoxx'> \r\n                <ContractBox/>\r\n                <ThaSamples/>\r\n                <Buttonz data={{class:\"submitBttn\", id:'Generate-pfp', value: 'Deploy Contract', func: deployContract}} />\r\n            </div>;\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-AddLayer\":\r\n        case \"RandomGenerator-LayerOptions-BG-Upld\":\r\n            let addLayerIMG = state.currsubState === 'RandomGenerator-LayerOptions-AddLayer';\r\n            let layerImg_tmpIndx = ( addLayerIMG && state.temp_index === null )\r\n            let pissoffbox = ( layerImg_tmpIndx )?<input className='LayerName' id='LayerName' name='name' type='text' placeholder={(state.formVals !== null)?state.formVals:'Enter layer name.'} onChange={formDataHandler} onClick={(e)=> e.target.value = state.formVals}/>:<BoxTitle data={{ divClass:\"editBoxTitle\", textType:'h2', text:`Upload images.`}}/>;\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                { pissoffbox }\r\n                <BoxTitle data={{ divClass:\"optionsTitle\", textType:'span', text:( addLayerIMG )?(`Click the \"+\" to upload layer images${( state.temp_index !== null)?\" for: \"+state.data.layers[ state.temp_index ]?.name:\"\"}.`):`Click the \"+\" to upload background images.`}}/>\r\n                <button className='plusBttn' id='LayerUpldLabel' htmlFor='multi_asset' style={{ fontSize: '50px !important'}} onClick={( addLayerIMG )?(e)=>{ showLoading(e); let ele_val = state.formVals; if( !ele_val && state.temp_index === null ) { e.preventDefault(); setMsgStacks((prev)=>( {...prev, messages:[ \"Enter a layer name!\" ], substate:state.currsubState } )); return hideLoading(e); } document.getElementById('multi_asset').click(); return hideLoading(e); }:(e)=>{ showLoading(e); document.getElementById('multi_asset').click(); return hideLoading(e);}} >+\r\n                    <input type={'file'} id='multi_asset' name={( addLayerIMG )?'multi_asset':'bg_asset'} multiple='multiple' onChange={ (e)=>handleAddLayerUpld( e, state.temp_index ) } hidden/>\r\n                </button>\r\n                <div id='layerContentBox'></div>\r\n                <button className=\"submitBttn\" id={( addLayerIMG )?'addLayerImages':'bg_upld'} onClick={ (e)=>handleAddLayerUpld( e, state.temp_index ) } >\r\n                    {( addLayerIMG )?((typeof( state.temp_index ) === \"number\")?'Add':'Create'):'No Background'}\r\n                </button>\r\n            </div>;\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Edit-Layer\":\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{divClass:\"editBoxTitle\", textType:'h2', text:`Edit '${state.data.layers[ state.temp_index ]?.name}' layer.`}}/>\r\n                <div style={{ padding:\"0px 10px 10px 10px\"}}>\r\n                    <BoxTitle data={{divClass:\"optionsTitle\", textType:'span', text:`Rename layer.`}}/>\r\n                    <Buttonz data={{class:'renameLayerBttn', id:'bg_upld', value:'Rename', func: renameLayer}} />\r\n                </div>\r\n                <div style={{ padding: \"0px 10px 10px 10px\", width: \"30%\", boxSizing: \"border-box\", display: \"inline-block\"}}>\r\n                    <BoxTitle data={{divClass:\"optionsTitle\", textType:'span', text:`Prioritized.`}}/>\r\n                    <button id=\"priorityLayerBttn\" className={( state.data.layers[ state.temp_index ].priority === true )?'disablepriorityLayerBttn':'makepriorityLayerBttn'} onClick={(e)=>{ prioritizeLayer(e) }}>\r\n                        <div id='makepriorityLayerOption' className={( state.data.layers[ state.temp_index ].priority === true )?'ispriorityLayerOption':'notpriorityLayerOption'}>\r\n                            <span id='makepriorityLayerOptionSpan'>{( state.data.layers[ state.temp_index ].priority === true )?\"YES\":\"NO\"}</span>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n                <div style={{ padding: \"0px 10px 10px 10px\", width: \"70%\", boxSizing: \"border-box\", display: \"inline-block\", float:\"right\"}}>\r\n                    <BoxTitle data={{divClass:\"optionsTitle\", textType:'span', text:`Delete layer.`}}/>\r\n                    <Buttonz data={{class:\"delLayerBttn\", id:'bg_upld', value: 'DELETE', func: delLayer}} />\r\n                </div>\r\n            </div>\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Rename_Layer\":\r\n        case \"RandomGenerator-LayerOptions-Del-Layer\":\r\n            let renameBox = state.currsubState === \"RandomGenerator-LayerOptions-Rename_Layer\"\r\n            let newLayerName = ( renameBox )?<DaInput data={{typeClass:'LayerName', typeId:'LayerName', name:'name', type:'text', placeholder:state.data.layers[ state.temp_index ].name, onChange:formDataHandler}}/>:<Buttonz data={{class:'delLayerBttn', id:'', value:'YES', func: delLayer}} />;\r\n\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{divClass:\"optionsTitle\", textType:'h4', text:( renameBox )?'Change layer name.':`Select yes to delete ${state.data.layers[ state.temp_index ]?.name} layer.`}}/>\r\n                { newLayerName }\r\n                <button className=\"nodelLayerBttn\" onClick={( renameBox )?renameLayer:closeLayerOptionsBox}>{(renameBox)?'RENAME':'NO'}</button>\r\n            </div>\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Write-Contract\":\r\n            currentSubState = <CodeEditor/>\r\n            break;\r\n        default:\r\n            currentSubState = null; state.formVals = null; state.temp_index = null;\r\n            submitButton = ( state.data.layers.length > 1 )?<button id={(state.data.background)?'Generate-pfp':'selectBG'} className=\"submitBttn\" onClick={(e)=>{ if ( state.data.background ) { return generate_it( e, 40 ) }else{ return setState((prev)=>({...prev, currsubState:\"RandomGenerator-LayerOptions-BG-Upld\" })); } }} >{ (state.data.background)?'GENERATE':'Choose Backgrounds' }</button>:'';\r\n            coll_Name_Box = <CollNameBox/>;\r\n            mainBox = <>\r\n                <button className='generatorRightPanelAddNewLayer' id='generatorRightPanelAddNewLayer' onClick={(e)=>{ if( state.data.coll_name?.length > 0 && state.data.coll_symbol?.length > 0 ){ return setState((prev)=>({...prev, temp_index:null, currsubState: \"RandomGenerator-LayerOptions-AddLayer\" })); }else{ let messages = []; if( !state.data.coll_symbol ){ messages.push(\"Enter a project/NFT symbol!\") } if( !state.data.coll_name ){ messages.push( \"Enter a project/NFT name!\" ) } if( messages.length > 0 ){ return setMsgStacks( (prev)=>({...prev, messages, substate:state.currsubState }) ) } } }} > + </button>\r\n                <BoxTitle data={{divClass:'optionsTitle', textType:'h2', text:'LAYERS'}}/>\r\n                <BoxTitle data={{divClass:'optionsTitle', textType:'span', text:`Click the \"+\" icon to create new layer`}}/>\r\n                <div id='LayerGenBoxx'> <GenLayers/> </div>\r\n                <TheBGs/>\r\n                {submitButton}\r\n            </>;\r\n            break;\r\n    }\r\n\r\n    function MainContainer (){\r\n        if(!currentSubState){\r\n            return(\r\n                <div className='RandomGenerator'>\r\n                    <button className='closeBox' onClick={()=> setState( (prev)=>({...prev, state:\"home\", data:{ coll_name : null, coll_symbol : null, layers:[] }, currsubState:null, temp_index: null }) ) }>X</button>\r\n                    {coll_Name_Box}\r\n                    <div className='LayerGenBox'>\r\n                        { mainBox }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className={( state.currsubState === 'RandomGenerator-LayerOptions-Write-Contract')?'RandomGenerator':'LayerOptionsBox'} >\r\n                    <button className='closeBox' onClick={closeLayerOptionsBox} >X</button>\r\n                    {currentSubState}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    return( <div className='popupdark' id='popup'> <MainContainer/> </div> )\r\n};\r\n\r\nexport default RandomGenerator;"],"names":["validateIMGtype","demFiles","childClassName","parentIdName","wrongFiles","callback","parentEle","document","getElementById","innerHTML","demlen","length","console","log","imgArray","loadedImgs","n","dafile","getFileExtension","path","ext","match","img","createElement","addEventListener","width","height","push","para","appendChild","classList","add","remove","src","shuffle","arra1","temp","index","ctr","Math","floor","random","get_all_possible_array_combos","input","output","da_path","undefined","current_item","gogo","val","pop","slice","expandABox","e","expandee","expandedClass","contractedClass","ele","target","contains","innerText","divSwapper","node1","node2","parentNode","replaceChild","insertBefore","CodeEditor","lazy","props","window","location","host","useContext","MsgContext","setMsgStacks","msgStacks","StateContext","state","setState","possblCombos","arrays","combos","forEach","indx","arr","priority","traits","data","activeContract","closeLayerOptionsBox","gotTo","showLoading","currsubState","localStorage","clear","formVals","tempFiles","prev","deployContract","currentAddress","address","coll_name","trim","messages","substate","coll_symbol","fetch","nftcontract","then","r","text","contract","contractOptions","language","sources","content","settings","outputSelection","JSON","stringify","chainData","connectToChain","blockchainNetworks","connected","contractData","FormData","hideLoading","append","baseServerUri","method","body","theresponse","json","compiled","compiledContract","abi","bytecode","factory","ContractFactory","signer","deploy","tx","catch","nftToken","reason","code","contract_address","contract_link","currentNetwork","handleAddLayerUpld","layerindex","bgElement","getAttribute","files","currentFiles","err","wrongfiles","imgfiles","textContent","layerName","temp_index","layers","name","msgs","background","file_len","imgURL","Array","isArray","trait_name","delLayer","previous","splice","renameLayer","the_value","alreadyExists","isAplhaNumeric","stringLengthRange","prioritizeLayer","isPriority","toggle","generate_it","printCap","psblecmbz","currentSubState","conntd","account","loop_and_pin_layers","collName","emptyComboArray","newlayers","reverse","pin","options","pinataMetadata","keyvalues","description","pinataOptions","cidVersion","assetName","Date","now","pin_body","base64ToBlob","imgURLFromBase64String","newimgBlob","resp","pinned","pinnedItem","ipfsHash","IpfsHash","layer_index","trait_index","loop_and_pin_background","backgrounds","newBGArray","f","fetchBlob","blob","pinnedBG","mapTraitTypes","comboz","len","traitTypes","ego","map","x","v","trait_type","value","traitTypesPushNA","priorities","endo","includes","insertBackground","backgroundArray","d","newBG","allPossibleCombos","collectionName","layersArray","bgArray","loop_and_pin","map_traits","traittypes_fin","combo","possibleCombos","byteSize","obj","str","bytes","TextEncoder","encode","res","getBytes","pinCombo","optns","pinUrl","rezz","pinnedCombo","drawimage","sampleArray","cap_it","drawableTraits","filter","drawableTraits_length","canvas","ctx","getContext","loadedimgs","p","drawableTrait","iterlength","loop1","i","traitinfo","Image","base4path","drawImage","imgToBase64String","toDataURL","sampleimage","attributes","updateDB","collname","thesamples","combo_ipfs_hash","payload","samples","contracts","error","getSamplesAndClearComboData","cap","sampleImgs","formDataHandler","eleID","contractZone","setAttribute","GenLayers","Layerz","mouseUpFired","layerData","initPositions","elebox","newindex","useEffect","call","getElementsByClassName","element","getBoundingClientRect","top","scrollTop","layer_move_initializer","event","layerIndex","type","div","divWitdh","clientWidth","popup","indexOfSelectedItem","arrayOfEles","centerofdiv","clientHeight","style","touches","clientY","onmousemove","ontouchmove","layer_move_ender","initIndex","tempArray","setTrait","parentIndx","preventDefault","LayerImagesBox","boxcont","traitLength","indxx","imgsrc","traitName","className","alt","id","placeholder","onClick","onChange","delTrait","onMouseDown","onMouseUp","onTouchStart","onTouchCancel","onTouchEnd","me","backgroundColor","expandbox","float","borderRadius","left","boxSizing","margin","borderLeft","borderTop","right","layerlen","layerindx","TheBGs","bglength","bgstack","bgtraitIndex","setBGTrait","delBG","conDetails","ThaSamples","sampleLen","imgurl","mainBox","submitButton","coll_Name_Box","ContractBox","boxxcont","divClass","textType","href","rel","the_contracts","contractLen","daindex","showContract","contractDetailsBox","cursor","activeContractIndex","CollNameBox","class","func","addLayerIMG","pissoffbox","htmlFor","fontSize","click","multiple","hidden","padding","display","renameBox","newLayerName","typeClass","typeId","MainContainer"],"sourceRoot":""}