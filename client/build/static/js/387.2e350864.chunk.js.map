{"version":3,"file":"static/js/387.2e350864.chunk.js","mappings":"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","sources":["components/codeEditor/codeEditor.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { hideLoading, showLoading } from \"../ui/loading\";\r\nimport { BoxTitle } from '../form/formcomps';\r\nimport { MsgContext } from \"../../context/msgcontext\";\r\nimport { StateContext } from '../../context/StateContext';\r\n\r\n\r\nconst defaultErrorStack = { messages:[], formdata:[], substate:null };\r\n\r\nconst setNumbers = async ( e, inputText )=>{\r\n    document.getElementById(\"solidityEditor\").value = inputText;\r\n    let numberOfLines = inputText.split('\\n').length;\r\n    let newlen;\r\n\r\n    if ( numberOfLines > document.getElementById('lineNumbers')?.childElementCount && document.getElementById('lineNumbers')?.childElementCount !== 0 ){\r\n        newlen = document.getElementById('lineNumbers')?.childElementCount;\r\n        for ( newlen; newlen < numberOfLines; newlen++ ) {\r\n            document.getElementById('lineNumbers').innerHTML += `<span></span>`;\r\n        }\r\n    }\r\n\r\n    if( numberOfLines < document.getElementById('lineNumbers')?.childElementCount ){\r\n        newlen = document.getElementById('lineNumbers')?.childElementCount - numberOfLines;\r\n        // for ( numberOfLines; numberOfLines < newlen; numberOfLines++ ) {\r\n        let indx = 0;\r\n        while ( indx < newlen ) {\r\n            document.getElementById('lineNumbers').childNodes[numberOfLines].remove();\r\n            indx++;\r\n        }\r\n    }\r\n\r\n    if ( document.getElementById('lineNumbers')?.childElementCount === 0 ){\r\n        let indx = 0;\r\n        while ( indx < numberOfLines ) {\r\n            document.getElementById('lineNumbers').innerHTML += `<span></span>`;\r\n            indx++;\r\n        }\r\n    }\r\n\r\n    document.getElementById(\"solidityEditor\").style.height = (document.getElementById('lineNumbers').clientHeight+20)+\"px\";\r\n    return hideLoading();\r\n}\r\n\r\nfunction CodeEditor({ data, substate }){\r\n    const { msgStacks, setMsgStacks } = useContext( MsgContext );\r\n    const { state, setState } = useContext( StateContext );\r\n    let activecontract;\r\n    \r\n    useEffect( ()=>{\r\n        if ( state.currsubState === \"RandomGenerator-LayerOptions-Write-Contract\" ){\r\n            showLoading();\r\n            document.addEventListener('paste', (e)=>{\r\n                if ( !state.formVals.pasteDisclaimer ) {\r\n                    if ( e.target.getAttribute(\"class\") === \"solidityEditor\" ){\r\n                        let paste = ( e.clipboardData || window.clipboardData || document.clipboardData ).getData( 'text' );\r\n                        e.target.focus();\r\n                        const start = e.target.selectionStart;\r\n                        const end = e.target.selectionEnd;\r\n                        const textAreaText = e.target.value;\r\n                        const firstPart = textAreaText.substring( 0, start );\r\n                        const secondPart = textAreaText.substring( end, textAreaText.length );\r\n                        state.formVals.pasteDisclaimer = true;\r\n                        setState((prev)=>({...prev, formVals:{...prev.formVals,contract:firstPart+paste+secondPart }, modal:{ header:\"WARNING!\", message:`You just pasted code into the editor please ensure you understand the code before deploying to prevent yourself from being comprimised/scammed!`, func:()=>{ return setState( (prev)=>({...prev, modal:null, formVals:{...prev.formVals, pasteDisclaimer:true} } ) ); } } } ))\r\n                        return hideLoading();\r\n                    }\r\n                }\r\n            });\r\n\r\n            if ( state.formVals.addContract?.active === true ) {\r\n                document.getElementById(\"addSolFile\").click();\r\n            }\r\n            \r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n            activecontract = state.formVals.contract[ state.formVals.activeContractIndex ]?.contract;\r\n            setNumbers( null, activecontract );\r\n            return hideLoading();\r\n        }\r\n        return;\r\n    },[ state.formVals, state.modal, setState, state.currsubState ])\r\n    \r\n    const newline = activecontract?.split('\\n');\r\n    const newlineLen = newline?.length;\r\n    let boxxcont = [], bbx = [];\r\n    \r\n    for ( let indx = 0; indx < newlineLen; indx++){\r\n        if( newline[ indx ].includes('contract ') && newline[ indx ].split('contract ')[0].trim() === \"\"  ){\r\n            console.log(`------- ${indx}) line: '${newline[ indx ]}'`)\r\n        }\r\n\r\n        boxxcont.push(<span key={indx}></span>);\r\n    }\r\n\r\n    state.formVals.contract.forEach((element, ind) => {\r\n        bbx.push(<div key={ind} className='solTabs' onClick={(e)=>setState((prev)=>({...prev, formVals:{...prev.formVals, activeContractIndex: ind}}))}>{element.name}</div>)\r\n    });\r\n    \r\n    const handleContractUpload = (e)=>{\r\n        setState((prev)=>({\r\n            ...prev,\r\n            modal:{\r\n                ...prev.modal,\r\n                func:()=>{\r\n                    return setState((prev)=>({\r\n                        ...prev,formVals:{\r\n                            ...prev.formVals,\r\n                            addContract:null \r\n                        },\r\n                        modal:null\r\n                    }))\r\n                },\r\n                header:\"OVERWRITE?\",\r\n                message:\"Would you like to overwrite current active contract? If so click yes, otherwise click no.\",\r\n                options:[\r\n                    {\r\n                        name:\"YES\",\r\n                        func:()=>{\r\n                            return setState((prev)=>({\r\n                                ...prev,\r\n                                modal: null,\r\n                                formVals:{\r\n                                    ...prev.formVals,\r\n                                    addContract: { active:true, overwrite:true }\r\n                                }\r\n                            }))\r\n                        } \r\n                    },\r\n                    {\r\n                        name:\"NO\",\r\n                        func:()=>{\r\n                            return setState((prev)=>({\r\n                                ...prev,\r\n                                modal: null,\r\n                                formVals: {\r\n                                    ...prev.formVals,\r\n                                    addContract: { active:true, overwrite:false }\r\n                                }\r\n                            }))\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }))\r\n    };\r\n\r\n    const addNewContract = (e)=>{\r\n        showLoading();\r\n        const readr = new FileReader();\r\n        readr.addEventListener(\"load\", (ee)=>{\r\n            const text = (ee.target.result);\r\n            let contract;\r\n            let activeindex = 0;\r\n            if( state.formVals.addContract?.overwrite === false ){\r\n                activeindex = state.formVals.contract.length;\r\n                contract = state.formVals.contract;\r\n                contract.push({name: `import_${activeindex}`, contract:ee.target.result});\r\n                return setState((prev)=>({...prev, modal:null, formVals:{...prev.formVals, contract, activeContractIndex: activeindex, addContract:null }}));\r\n            }\r\n            contract = state.formVals.contract;\r\n            contract[state.formVals.activeContractIndex].contract = text;\r\n            setState((prev)=>({...prev, modal:null, formVals:{...prev.formVals, contract, addContract:{...prev.formVals.addContract, active:false } }}));\r\n            return hideLoading();\r\n        });\r\n        readr.readAsText( e.target.files[0] ); \r\n    };\r\n\r\n    let numberSideBar = <div className=\"lineNumbers\" id=\"lineNumbers\" >{boxxcont}</div>\r\n    return (<div className='LayerUpldBox' style={{padding:\"20px\"}}>\r\n        <BoxTitle data={{divClass:\"contractEditorTitle\", textType:'h2', text:'NFT Contract ( ERC721 )'}}/>\r\n        <BoxTitle data={{divClass:\"contractEditorTitle\", textType:'span', text:'Default contract courtesy of openzeppelin. Before editing/changing contract, ensure that you understand the code to avoid being scammed.'}}/>\r\n        <div className=\"contractEditorToolBar\" >\r\n            <div className=\"toolBarElement\" onClick={(e)=>{let contract = state.formVals.contract; contract[ state.formVals.activeContractIndex ].contract = document.getElementById(\"solidityEditor\").value; setState((prev)=>({...prev, data:{...prev.data, contracts:contract}, formVals:{...prev.formVals, contract, } }) )}}>\r\n                <img src='./save_icon.svg' alt='' />\r\n                <span> save </span>\r\n            </div>\r\n            <label className=\"toolBarElement\" id=\"addSolFile\" htmlFor='contractUpld' onClick={(e)=>( state.formVals.addContract?.active )?'':handleContractUpload()}>\r\n                <input type={\"file\"} name=\"contractUpld\" id=\"contractUpld\" onChange={(e)=> addNewContract(e) } hidden/>\r\n                <h2>+</h2>\r\n                <span> new contract (.sol) </span>\r\n            </label>\r\n        </div>\r\n        <div className='solTabsWrapper'>{bbx}</div>\r\n        <div className=\"editor\" id=\"editor\" >\r\n            {numberSideBar}\r\n            <textarea className='solidityEditor' id='solidityEditor' onKeyUp={(e)=>{ if( e.key === \"Enter\" || e.key === \"Backspace\" || e.key === \"Delete\" || e.ctrlKey ){ return setNumbers( e, e.target.value ) }}} onChange={(e)=>state.formVals.contract[ state.formVals.activeContractIndex ].contract = e.target.value } />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CodeEditor;"],"names":["setNumbers","e","inputText","document","getElementById","value","numberOfLines","split","length","childElementCount","newlen","innerHTML","indx","childNodes","remove","style","height","clientHeight","hideLoading","data","substate","activecontract","useContext","MsgContext","msgStacks","setMsgStacks","StateContext","state","setState","useEffect","currsubState","showLoading","addEventListener","formVals","pasteDisclaimer","target","getAttribute","paste","clipboardData","window","getData","focus","start","selectionStart","end","selectionEnd","textAreaText","firstPart","substring","secondPart","prev","contract","modal","header","message","func","addContract","active","click","activeContractIndex","newline","newlineLen","boxxcont","bbx","includes","trim","console","log","push","forEach","element","ind","className","onClick","name","numberSideBar","id","padding","divClass","textType","text","contracts","src","alt","htmlFor","options","overwrite","type","onChange","readr","FileReader","ee","result","activeindex","readAsText","files","addNewContract","hidden","onKeyUp","key","ctrlKey"],"sourceRoot":""}