{"version":3,"file":"static/js/744.d09262c0.chunk.js","mappings":"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","sources":["components/form/formcomps.js","components/ui/walletmodal.js"],"sourcesContent":["function BoxTitle( { data } ){\r\n    // console.log(`type:${ data.textType }`)\r\n    switch ( data.textType ) {\r\n        case 'h2':\r\n            data.textType = <h2 className={( data.textClass )? data.textClass :''} id={( data.textID )? data.textID :''}>{ data.text }</h2>;\r\n            break;\r\n        case 'span':\r\n            data.textType = <span className={( data.textClass )? data.textClass :''} id={( data.textID )? data.textID :''}>{ data.text }</span>;\r\n            break;\r\n        case 'h1':\r\n            data.textType = <h1 className={( data.textClass )? data.textClass :''} id={( data.textID )? data.textID :''}>{ data.text }</h1>;\r\n            break;\r\n        case 'h3':\r\n                data.textType = <h3 className={( data.textClass )? data.textClass :''} id={( data.textID )? data.textID :''}>{ data.text }</h3>;\r\n                break;\r\n        case 'h4':\r\n            data.textType = <h4 className={( data.textClass )? data.textClass :''} id={( data.textID )? data.textID :''}>{ data.text }</h4>;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return ( <div className={( data.divClass )? data.divClass :''} id={( data.divID )? data.divID :''}> { data.textType } </div> )\r\n};\r\n\r\nfunction Buttonz( { data} ){\r\n    return (\r\n        <button className={( data.class )? data.class :''} id={( data.id )? data.id :''} style={{zIndex: 11}} onClick={ data.func }> { data.value } </button>\r\n    )\r\n};\r\n\r\nfunction DaInput( { data } ){\r\n    let daInput;\r\n    \r\n    if( data.hidden){\r\n        switch ( data.type) {\r\n            case 'file':\r\n                daInput = <input className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :''} name={( data.name )? data.name :''} readOnly={( data.readOnly)? data.readOnly:false} type='file' multiple={( data.multiple )? data.multiple :''} accept={( data.accept)? data.accept:'*'} onChange={( data.onChange )? data.onChange :()=>{ return; }} hidden/>;\r\n                break;\r\n            case 'textarea':\r\n                daInput = <textarea className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :'' } name={( data.name )? data.name :''} value={ data.value } readOnly={( data.readOnly)? data.readOnly:false} onChange={( data.onChange )? data.onChange :()=>{ return; }} hidden></textarea>;\r\n                break;\r\n            case 'text':\r\n                daInput = <input className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :'' } name={( data.name )? data.name :''} type=' data.text ' value={ data.value } readOnly={( data.readOnly)? data.readOnly:false} onChange={( data.onChange )?(e)=> data.onChange(e):()=>{ return; }} hidden/>;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return(daInput);\r\n    }else{\r\n        switch ( data.type) {\r\n            case 'file':\r\n                daInput = <input className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :''} name={( data.name )? data.name :''} type='file' multiple={( data.multiple )? data.multiple :''} accept={( data.accept)? data.accept:'*'} onChange={( data.onChange )? data.onChange :()=>{ return; }} onClick={( data.onClick )?(e)=> data.onClick :()=>{ return; }}/>;\r\n                break;\r\n            case 'textarea':\r\n                daInput = <textarea className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :'' } name={( data.name )? data.name :''} placeholder={( data.placeholder )? data.placeholder :''} onChange={( data.onChange )? data.onChange :()=>{ return; }} onClick={( data.onClick )?(e)=> data.onClick (e):()=>{ return; }} ></textarea>;\r\n                break;\r\n            case 'text':\r\n                daInput = <input className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :'' } name={( data.name )? data.name :''} type=' data.text ' placeholder={( data.placeholder )? data.placeholder :''} onChange={( data.onChange )? data.onChange :()=>{ return; }} onClick={( data.onClick )?(e)=> data.onClick (e):()=>{ return; }}/>;\r\n                break;\r\n            case 'number':\r\n                daInput = <input className={( data.typeClass )? data.typeClass :''} id={( data.typeId )? data.typeId :'' } name={( data.name )? data.name :''} type='number' placeholder={( data.placeholder )? data.placeholder :''} onChange={( data.onChange )? data.onChange :()=>{ return; }} onClick={( data.onClick )?(e)=> data.onClick (e):()=>{ return; }} />;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return( <div className={( data.class )? data.class :''} id={( data.id )? data.id :''}> {daInput} </div> );\r\n    }\r\n};\r\n\r\nexport {DaInput, Buttonz, BoxTitle,}","import { useState, useContext } from 'react';\r\nimport { StateContext } from '../../context/StateContext';\r\nimport { MsgContext } from '../../context/msgcontext';\r\nimport { BoxTitle }  from '../form/formcomps';\r\nimport { showLoading, hideLoading } from '../ui/loading';\r\nimport { connectToChain, blockchainNetworks, currentAddress, currentNetwork } from '../../helpers/web3Helpers';\r\nimport '../../styles/walletModal.css';\r\n\r\nconst WalletBox = ( )=>{\r\n    const { state, setState } = useContext( StateContext );\r\n    const { msg, setMsg } = useContext( MsgContext );\r\n    let bbx = [];\r\n    let [ networkSelected, setNetworkSelected ] = useState( { status: false, index: null } );\r\n    \r\n    const setChain = async ( e, chosenNetwork, index )=>{\r\n        showLoading();\r\n        console.log(`heyalll`);\r\n        const walletConnected = await connectToChain( chosenNetwork );\r\n        if ( walletConnected ){\r\n            setNetworkSelected((prev)=>({...prev, status:true, index, }));\r\n            hideLoading();\r\n            return setState((prev)=>({...prev, chainData:chosenNetwork}));\r\n        }\r\n\r\n        hideLoading()\r\n        return setMsg((prev)=>({...prev, messages:[\"Please confirm wallet connection to continue!\"]}) );\r\n    }\r\n    \r\n    const connectWallet = async ( e )=>{\r\n        showLoading(e)\r\n        const account = await currentAddress();\r\n        if( account.code ){\r\n\r\n            console.log(`error ${JSON.stringify(account)}!`);\r\n            hideLoading(e);\r\n            return setMsg((prev)=>({...prev, messages:( account.code === 4001 )?[\"You rejected connection, please confirm wallet connection to continue!\"]:[\"An error occurred while attempting to connect wallet, please try again!\"]}) );\r\n        }\r\n\r\n        hideLoading(e)\r\n        return setState((prev)=>({...prev, state:( state.newState )?prev.newState:\"home\", newState:null, oldState:null, account, }));\r\n    }\r\n\r\n    blockchainNetworks.forEach( ( element, i ) => {\r\n        let selectedChain = ( networkSelected.index === i )?<div style={{ height:'5px', width:'100%', borderTopLeftRadius:'5px', borderTopRightRadius:'5px', borderBottomLeftRadius:'5px', borderBottomRightRadius:'5px', backgroundColor:'rgb( 255, 255, 0 )', float:'left'}}></div>:''\r\n        \r\n        bbx.push( <div className='networkElement' key={i} onClick={ (e)=>{ if( networkSelected.index === i ){ return setNetworkSelected((prev)=>( {...prev, status:false, index:null } )); } return setChain( e, blockchainNetworks[i], i ); } } >\r\n            <img src={(blockchainNetworks[i].logo)?blockchainNetworks[i].logo:'solidity_icon.svg'} alt='' style={{ margin:'0px auto 0px auto', borderRadius: '50%' }}/>\r\n            <span style={{ margin:'0px auto', boxSizing: 'border-box', color:( networkSelected.index === i )?'rgb( 255, 255, 0 )':'whitesmoke' }} > { blockchainNetworks[i].name } </span>\r\n            {selectedChain}\r\n        </div>)\r\n    });\r\n\r\n    console.log(`new state: \"${state.newState}\"`);\r\n    \r\n    return(<div className='boxOverlay'>\r\n        <div className='walletBox'>\r\n            <button className='closeWalletBox' onClick={()=>{ return setState( ( prev )=>( {...prev, state:( state.oldState )?prev.oldState:\"home\", newState:null, oldState:null } ))}} >X</button>\r\n            <div className='networkOptions scroller'>\r\n                <BoxTitle data={{ textType:\"h3\", divClass:\"headerStyle\", textClass:\"centeredText\", text:'1. Select a network', divID:\"divID\" }} />\r\n                <div className='networkElements'> {bbx} </div>\r\n            </div>\r\n            <div className='walletOptions'>\r\n                <BoxTitle data={{ textType:\"h3\", divClass:\"headerStyle\", textClass:\"centeredText\", text:\"2. Connect wallet\", divID:\"divID\" }} />\r\n                <div className='walletElement' onClick={(e)=>( networkSelected.status )? connectWallet():false}>\r\n                    <img src='./metamask.svg' alt='' style={{ height:'35px', width:'35px', borderRadius:'7.5px' }}/>\r\n                    <span>Metamask Wallet</span>\r\n                </div>\r\n                <div className='walletElement'>\r\n                    <img src='./bravelogo.svg' alt='' style={{ height:'35px', width:'35px', borderRadius:'7.5px' }}/>\r\n                    <span>Brave Browser</span>\r\n                </div>\r\n                <div className='walletElement'>\r\n                    <img src='./walletconnect.svg' alt='' style={{ height:'35px', width:'35px', borderRadius:'7.5px' }}/>\r\n                    <span>Wallet Connect</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default WalletBox;"],"names":["BoxTitle","data","textType","className","textClass","id","textID","text","divClass","divID","Buttonz","class","style","zIndex","onClick","func","value","DaInput","daInput","hidden","type","typeClass","typeId","name","readOnly","multiple","accept","onChange","e","placeholder","useContext","StateContext","state","setState","MsgContext","setMsg","msg","bbx","useState","status","index","networkSelected","setNetworkSelected","setChain","chosenNetwork","showLoading","console","log","connectToChain","prev","hideLoading","chainData","messages","connectWallet","currentAddress","account","code","JSON","stringify","newState","oldState","blockchainNetworks","element","i","selectedChain","height","width","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","backgroundColor","float","push","src","logo","alt","margin","borderRadius","boxSizing","color"],"sourceRoot":""}