{"version":3,"file":"static/js/716.91807ff0.chunk.js","mappings":"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","sources":["pages/singleNFT.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { StateContext } from '../context/StateContext';\r\nimport { MsgContext } from '../context/msgcontext';\r\n// import { BigNumber } from \"ethers\";\r\nimport { imgToBase64String, imgURLFromBase64String } from \"../helpers/imgBLOBto64\";\r\nimport { connectToChain, currentAddress, signer,  currentNetwork, oldNetwork, mintNFT, blockchainNetworks } from \"../helpers/web3Helpers\";\r\nimport { validateIMGtype } from \"../helpers/imgdatahelpers\";\r\nimport { imgSignature } from \"../helpers/imgSignatures\";\r\nimport { stringLengthRange, isAplhaNumeric, isNumeric } from \"../helpers/stringValidator\";\r\nimport yaadcontract from '../contracts/yaad.json';\r\nimport nftcontract from '../contracts/the_yaad.sol';\r\nimport { DaInput, BoxTitle, Buttonz } from '../components/form/formcomps';\r\nimport { LoadingBox, showLoading, hideLoading } from \"../components/ui/loading\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SingleNft (props){    \r\n    const defaultErrorStack = { intervalId:null, formdata:[], substate:null };\r\n    const { state, setState } = useContext( StateContext );\r\n    const { msgStacks, setMsgStacks } = useContext( MsgContext );\r\n    \r\n    const handlesingleUpload = async (e)=>{\r\n        showLoading();\r\n        let fileLoaded = 0;\r\n        if( e.target.files.length === 0 ) { setMsgStacks((prev)=>({...prev, messages:[\"No file selected!\"] })); return hideLoading(); }\r\n        // imgSignature(e.target.files[0], (fl)=>{\r\n        //     console.log(`file signature: ${fl}`);\r\n        // });\r\n\r\n        const file = e.target.files[0];\r\n\r\n        const readr = new FileReader();\r\n        \r\n        readr.addEventListener(\"load\", ()=>{\r\n            fileLoaded++;\r\n            if ( fileLoaded === 1 ){\r\n                setState((prev)=>({...prev, data:{ ...prev.data, path:readr.result}}));\r\n                return hideLoading();\r\n            }\r\n        });\r\n        readr.readAsDataURL(file);\r\n        // hideLoading();\r\n    }\r\n\r\n    function SingleNFTDetailsForm (props){\r\n        const handlesingleCreate = async (e)=>{\r\n            e.target.classList.add('inactive'); showLoading(); e.preventDefault();\r\n            if(!state.data?.name || state.data?.name === \"\" || state.data?.name === null || state.data?.name  === undefined || !state.data?.collection || state.data?.collection === null || state.data?.collection === \"\" || state.data?.collection === undefined){\r\n                hideLoading();\r\n                return setMsgStacks( (prev)=>({...prev, formdata:[{ id:\"singleNFTName\", value:\"\", msg:\"Please enter a name & collection\" }], substate:state.currsubState }));\r\n            }\r\n            \r\n            let body = new FormData();\r\n            body.append('data', JSON.stringify(state.data) );\r\n            const createNft = await fetch(state.baseServerUri+\"createone\", { method:\"POST\", body,}).then((res)=> res.json()).then( (piss)=> piss );\r\n            \r\n            if(createNft.error){\r\n                if(createNft.error.message === \"duplicate\"){\r\n                    hideLoading();\r\n                    return setMsgStacks( (prev)=>({...prev, formdata:[{ id:\"createSingleBoxPreview\", value:\"\", msg:\"This NFT already exists, please select an original design.\" }], substate:state.currsubState }));\r\n                }\r\n                hideLoading();\r\n                setState( (prev)=>( {...prev, currsubState: \"SingleNFTDetailsForm\" } ));                \r\n            }\r\n            \r\n            if( createNft.results ){\r\n                const minted = await mintNFT( createNft.results.IpfsHash ).finally((resp)=>resp);\r\n                if( minted.code === \"ACTION_REJECTED\" ){\r\n                    hideLoading();\r\n                    e.target.classList.remove('inactive');\r\n                    return setMsgStacks( (prev)=>({...prev, formdata:[{ id:\"createSingleBoxPreview\", value:\"\", msg:\"Transaction rejected!\" }], substate:state.currsubState }));\r\n                }\r\n                console.log(`minted----- ${JSON.stringify(minted)}`);\r\n                if(minted.hash){\r\n                    return setState( (prev)=>( {...prev, currsubState: \"NFTminted\" } ));\r\n                }\r\n                \r\n                e.target.classList.remove('inactive'); hideLoading();\r\n            }\r\n        }\r\n\r\n        const handleTextInputChanges = async (e)=>{\r\n            const ele = e.target;\r\n            const eleValue = ele.value;\r\n            switch ( e.target.getAttribute('name') ) {\r\n                case 'name':\r\n                    state.data.name = ( stringLengthRange( eleValue, 0, 50 ) && isAplhaNumeric( eleValue, [ '.', '_', ' ' ]))?eleValue:state.data.name;\r\n                    ele.value = state.data.name;\r\n                    break;\r\n                case 'collection':\r\n                    state.data.collection = ( stringLengthRange( eleValue, 0, 50 ) && isAplhaNumeric( eleValue, [ '.', '_', ' ' ]))?eleValue:state.data.collection;\r\n                    ele.value = state.data.collection;\r\n                    break;\r\n                case 'price':\r\n                    state.data.price = ( isNumeric( eleValue ) )?eleValue:state.data.price;\r\n                    ele.value = state.data.price;\r\n                    break;\r\n                case 'royalties':\r\n                    state.data.royalties = ( isNumeric( eleValue ) )?eleValue:state.data.royalties;\r\n                    ele.value = state.data.royalties;\r\n                    break;\r\n                case 'desc':\r\n                    state.data.description = ( stringLengthRange( eleValue, 0, 200 ) )?eleValue:state.data.description;\r\n                    ele.value = state.data.description;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n        \r\n        return(\r\n            <>\r\n                <label className='popupBoxEleDetailsLabel' id='createSingleBoxPreview' htmlFor=\"createSingleAssetUpld\" onClick={ ()=>{ document.querySelector('#single_asset').click() } }>\r\n                    <div className='popupBoxEleDetails' style={{padding:( state.data?.path )?'0px':'30px', boxSizing:'border-box'}}> <img src={( state.data?.path )? state.data?.path:'uploadimg.svg' } style={{objectFit:\"cover\", height: \"100%\", width:\"100%\"}} alt=\"\"/> </div>\r\n                </label>\r\n                <input type=\"file\" id='single_asset' name='single_asset' accept=\"image/*,video/*,audio/*,webgl/*,.glb,.gltf\" style={{opacity:100, zIndex:1}} onChange={handlesingleUpload} hidden/>\r\n                <input className='popupBoxTextEle' placeholder={ ( state.data?.name )?state.data?.name:'Name' } type=\"text\" name='name' id='singleNFTName' onChange={ handleTextInputChanges } style={ {opacity:100, zIndex:1 } } />\r\n                <DaInput data={{ typeId:'singleNFTDesc', typeClass:'popupBoxTextAreaEle', name:'desc', placeholder:( state.data?.description )?state.data?.description:'Description', type:'textarea', onChange:handleTextInputChanges } } />\r\n                <input className='popupBoxTextEle' placeholder={ ( state.data?.collection )?state.data?.collection:'Collection' } type=\"text\" name='collection' id='singleNFTColl' onChange={ handleTextInputChanges }  style={{opacity:100, zIndex:1}} />\r\n                <div style={{ flexDirection:\"row\", maxWidth:'600px', width: '100%', margin: '0px auto' }}>\r\n                    <input className='popupBoxSmallTextAreaLeftEle' placeholder={ ( state.data?.price )?state.data?.price:'Price' } type=\"number\" name='price' id='singleNFTPrice' onChange={ handleTextInputChanges }  style={{opacity:100, zIndex:1}} />\r\n                    <input className='popupBoxSmallTextAreaRightEle' placeholder={ ( state.data?.royalties )?state.data?.royalties:'Royalties: max 50%' } type=\"number\" name='royalties' id='singleNFTRoyalty' onChange={handleTextInputChanges} style={{opacity:100, zIndex:1}} />\r\n                </div>\r\n                <Buttonz data={ { class:\"popupBoxEle\", id:'createBox', value:'create', func:handlesingleCreate } } />\r\n            </>\r\n        )\r\n            \r\n    };\r\n\r\n    // let singleNFTDetailsForm = (state.currsubState === \"SingleNFTDetailsForm\")?<SingleNFTDetailsForm/>:\"\";\r\n    return (\r\n        <div className='popupdark'>\r\n            <div className='popupBox'> \r\n                <button className='closeBoxWhite' onClick={()=> setState((prev)=>({...prev, state:\"home\", data:{ coll_name : null, coll_symbol : null, layers:[] }, currsubState:null })) } >X</button>\r\n                <SingleNFTDetailsForm/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleNft;"],"names":["props","useContext","StateContext","state","setState","MsgContext","setMsgStacks","msgStacks","handlesingleUpload","e","showLoading","fileLoaded","target","files","length","prev","messages","hideLoading","file","readr","FileReader","addEventListener","data","path","result","readAsDataURL","SingleNFTDetailsForm","handlesingleCreate","classList","add","preventDefault","name","undefined","collection","formdata","id","value","msg","substate","currsubState","body","FormData","append","JSON","stringify","fetch","baseServerUri","method","then","res","json","piss","createNft","error","message","results","mintNFT","IpfsHash","finally","resp","minted","code","remove","console","log","hash","handleTextInputChanges","ele","eleValue","getAttribute","stringLengthRange","isAplhaNumeric","price","isNumeric","royalties","description","className","htmlFor","onClick","document","querySelector","click","style","padding","boxSizing","src","objectFit","height","width","alt","type","accept","opacity","zIndex","onChange","hidden","placeholder","typeId","typeClass","flexDirection","maxWidth","margin","class","func","coll_name","coll_symbol","layers"],"sourceRoot":""}