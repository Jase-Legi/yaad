{"version":3,"file":"static/js/433.399407a0.chunk.js","mappings":"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","sources":["helpers/domHandlers.js","helpers/generatorhelpers.js","pages/generator.js","helpers/imgdatahelpers.js"],"sourcesContent":["const expandABox  = ( e, expandee, expandedClass, contractedClass )=>{\r\n    // element that calls the click event should be a button or element containing inner text\r\n    let ele = (e)?e.target:null;\r\n\r\n    // Check if div to be expanded is already expanded via a css class\r\n    // If it is expanded then swap class for a contracted css class ( which in this case is overflowY set to 'hidden' )\r\n    if ( expandee.classList.contains( expandedClass ) ) {\r\n        expandee.classList.remove( expandedClass );\r\n        expandee.classList.add( contractedClass ); // 'contract-container');\r\n        if( ele )\r\n            ele.innerText = \"expand\"\r\n    }else{\r\n        // If element contains contracted class instead then toggle it and replace it for expanded class\r\n        expandee.classList.add( expandedClass );\r\n        expandee.classList.remove( contractedClass );\r\n        if(ele)\r\n            ele.innerText = \"less\"\r\n    }\r\n};\r\n\r\nconst divSwapper = (node1, node2)=>{\r\n    node1.parentNode.replaceChild(node1, node2);\r\n    node1.parentNode.insertBefore(node2, node1); \r\n}\r\n\r\nexport { expandABox, divSwapper }","\r\nconst shuffle = (arra1)=> {\r\n    var ctr = arra1.length, temp, index;\r\n    // While there are elements in the array\r\n    while (ctr > 0) {\r\n        // Pick a random index\r\n        index = Math.floor(Math.random() * ctr);\r\n        // Decrease ctr by 1\r\n        ctr--;\r\n        // And swap the last element with it\r\n        temp = arra1[ctr];\r\n        arra1[ctr] = arra1[index];\r\n        arra1[index] = temp;\r\n    }\r\n    return arra1;\r\n}\r\n\r\nconst get_all_possible_array_combos =  async ( input, output, n, da_path )=>{\r\n    da_path = (da_path === null || da_path === undefined)? []: da_path;\r\n    n = (n === null || n === undefined)? 0:n;\r\n    if(n < input.length){\r\n        const current_item = input[n]; let gogo = 0;\r\n        while(gogo < current_item.length){\r\n            let val = current_item[gogo];\r\n            da_path.push(val);\r\n            get_all_possible_array_combos(input, output, n+1, da_path);\r\n            da_path.pop();\r\n            gogo++;\r\n        }\r\n    }else{\r\n        output.push(da_path.slice());\r\n    }\r\n};\r\n\r\nconst checkJsonParse = (str)=>{\r\n    try {\r\n        JSON.parse(str);\r\n        return true;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport { shuffle, get_all_possible_array_combos, checkJsonParse };","import React, { useContext, useEffect, lazy, Suspense } from 'react'\r\nimport { StateContext } from '../context/StateContext';\r\nimport { imgToBase64String, imgURLFromBase64String, base64ToBlob } from \"../helpers/imgBLOBto64\";\r\nimport { ContractFactory } from \"ethers\";\r\nimport { connectToChain, signer,  currentNetwork, blockchainNetworks, currentAddress } from \"../helpers/web3Helpers\";\r\nimport { validateIMGtype } from \"../helpers/imgdatahelpers\";\r\nimport { isAplhaNumeric, stringLengthRange } from \"../helpers/stringValidator\";\r\nimport { shuffle, get_all_possible_array_combos } from \"../helpers/generatorhelpers\";\r\nimport { expandABox, divSwapper } from \"../helpers/domHandlers\";\r\nimport yaadcontract from '../contracts/yaad.json';\r\nimport nftcontract from '../contracts/the_yaad.sol';\r\nimport { DaInput, BoxTitle, Buttonz } from '../components/form/formcomps';\r\nimport { LoadingBox, showLoading, hideLoading } from \"../components/ui/loading\";\r\nimport { MsgContext } from \"../context/msgcontext\";\r\nimport { Link } from 'react-router-dom';\r\nimport  './generator.css'\r\nimport { select } from 'async';\r\nconst CodeEditor = lazy(()=> import('../components/codeEditor/codeEditor'));\r\n// const solc = require('solc');\r\n\r\n\r\nfunction RandomGenerator (props){\r\n    const pumpum = window.location.host;\r\n    let baseServerUri = ( pumpum  === \"localhost:3000\")?'api/':'https://legi.herokuapp.com/api/';\r\n    const homeState = { state:\"home\", data:{ coll_name : null, coll_symbol : null, layers:[] }, currsubState:null, temp_index: null, baseServerUri: baseServerUri,};\r\n    const defaultErrorStack = { intervalId:null, formdata:[], substate:null };\r\n    const { msgStacks, setMsgStacks } = useContext( MsgContext );\r\n    const { state, setState } = useContext( StateContext );\r\n    // useEffect(()=>{\r\n    //     if ( state.data.layers?.length > 0 ){\r\n    //         state.data.possibleCombos = 1;\r\n    //         state.data.layers.forEach((val, indx, arr)=>{\r\n    //             state.data.possibleCombos *= ( val.priority )?(val.traits.length):(val.traits.length+1) \r\n    //         });\r\n\r\n    //         console.log(`possible combos: ${state.data.possibleCombos}`);\r\n    //     }\r\n    // }, [ state.data ] )\r\n    \r\nconst possblCombos = ( arrays )=>{\r\n    let combos = 1;\r\n    arrays.forEach((val, indx, arr)=>{\r\n        combos *= ( val.priority )?(val.traits.length):(val.traits.length+1) \r\n    });\r\n    return combos;\r\n}\r\n    var wrongFiles = [];\r\n    state.data.activeContract = 0;\r\n\r\n    const closeLayerOptionsBox = (e)=>{\r\n        showLoading();\r\n        let gotTo;\r\n        switch (state.currsubState) {\r\n            case \"RandomGenerator\":\r\n                localStorage.clear();\r\n                gotTo = { state:\"home\", data:\"\" };\r\n                break;\r\n            case \"RandomGenerator-LayerOptions-Write-Contract\":\r\n                state.formVals =  null;\r\n                gotTo = { currsubState:\"RandomGenerator-RandomGenerated\"};\r\n                break;\r\n            default:\r\n                delete state.data?.tempFiles;\r\n                gotTo = { currsubState: \"RandomGenerator\" };\r\n                break;\r\n        }\r\n\r\n        return setState((prev)=>({...prev, ...gotTo }));\r\n    };\r\n\r\n    const deployContract = async (e)=>{\r\n        showLoading(e);\r\n        const address = await currentAddress();\r\n        if(!state.data.coll_name || state.data.coll_name.trim() === \"\"){\r\n            return setMsgStacks( (prev)=>({...prev, messages:[ \"Enter a project/NFT name!\" ], substate:state.currsubState }) );\r\n        }\r\n        \r\n        if(!state.data.coll_symbol || state.data.coll_symbol.trim() === \"\"){\r\n            return setMsgStacks( (prev)=>({...prev, messages:[ \"Enter a symbol!\" ], substate:state.currsubState }) );\r\n        }\r\n\r\n        try {\r\n            // fetch(nftcontract).then( r=>r.text()).then( async (contract)=>{\r\n                // state.data.contracts\r\n                // let contractOptions = {\r\n                //     language: \"Solidity\", \r\n                //     sources: {\r\n                //     'yaad.sol': {\r\n                //         content: contract\r\n                //     }\r\n                //     },\r\n                //     settings:{\r\n                //     outputSelection:{\r\n                //         '*': {\r\n                //         '*':['*']\r\n                //         }\r\n                //     }\r\n                //     }\r\n                // };\r\n                let contractOptions = {\r\n                    language: \"Solidity\", \r\n                    sources: { },\r\n                    settings:{\r\n                    outputSelection:{\r\n                        '*': {\r\n                        '*':['*']\r\n                        }\r\n                    }\r\n                    }\r\n                };\r\n\r\n                const newline = state.data.contracts[0].contract.split('\\n');\r\n                const newlineLen = newline?.length;\r\n                let myContractName;\r\n                for ( let indx = 0; indx < newlineLen; indx++){\r\n                    if( newline[ indx ].includes('contract ') && newline[ indx ].split('contract ')[0].trim() === \"\" ){\r\n                        console.log(`contract name: ${newline[ indx ].split('contract ')[1].trim().split(\" \")[0]}`);\r\n                        myContractName = newline[ indx ].split('contract ')[1].trim().split(\" \")[0];\r\n                    }\r\n                }\r\n\r\n                state.data.contracts.forEach( ( val, ind )=>{\r\n                    contractOptions.sources[`${val.name}.sol`] = {\r\n                        content: val.contract\r\n                    }\r\n                });\r\n\r\n                console.log(`chain data: ${JSON.stringify(state.chainData)}`);\r\n                const connected = await currentAddress();\r\n                let contractData = new FormData();\r\n                if( connected.code ) { hideLoading(); return false; }\r\n                contractData.append('contractJSON', JSON.stringify(contractOptions));\r\n\r\n                contractData.append('contractName', myContractName);\r\n                \r\n                const compiledContract = await fetch( state.baseServerUri+\"compileContract\", { method:'POST',body: contractData} ).then((theresponse)=>theresponse.json()).then((compiled)=>compiled);\r\n                \r\n                const abi = compiledContract.abi;\r\n                const bytecode = compiledContract.bytecode;\r\n                const factory = new ContractFactory(abi, bytecode, signer);\r\n                const nftToken = await factory.deploy(state.data.coll_name, state.data.coll_symbol).then((tx)=>tx).catch((e)=>e);\r\n                console.log(`address: ${address}, nft token: ${JSON.stringify(nftToken.reason)}`);\r\n                contractData = null;\r\n                if( nftToken.code ){\r\n                    hideLoading(e);\r\n                    return;\r\n                }\r\n\r\n                // {\"name\":\"ropsten\",\"chainId\":3,\"ensAddress\":\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"}\r\n                if(nftToken.address){\r\n                    hideLoading(e);\r\n                    return setState( (prev)=>( { ...prev, currsubState: \"RandomGenerator-ContractDeployed\", data:{...prev.data, contract_address: nftToken.address, contract_link: `https://${currentNetwork.name}.etherscan.io/address/${nftToken.address}`} } ));\r\n                }\r\n            // });\r\n        } catch (error) {\r\n            console.log(`error: ${error}`)\r\n            return error;\r\n        }\r\n    };\r\n    \r\n    const handleAddLayerUpld = async ( e, layerindex )=>{\r\n        showLoading(e);\r\n        let layerName, bgElement = false;\r\n        \r\n        if( e.target.getAttribute('type') === 'file' && ( e.target.getAttribute('name') === 'multi_asset' || e.target.getAttribute('name') === 'bg_asset' ) ){\r\n            let currentFiles;\r\n            if ( e.target.files.length < 1 && state.data.tempFiles !== null ){ return hideLoading(e); }else{ currentFiles = e.target.files; }\r\n            if ( currentFiles.length < 1 ) { e.target.classList.remove('inactive'); return hideLoading(e); }\r\n\r\n            await validateIMGtype( currentFiles, 'LayerUpldContentBox', 'layerContentBox', [], ([ err, wrongfiles, imgfiles ])=>{\r\n                wrongFiles = wrongfiles;\r\n                if( err !== null || ( wrongfiles.length === currentFiles.length )) {\r\n                    hideLoading(e);\r\n                    return setMsgStacks((prev)=>({...prev, substate: state.currsubState, messages:(err !== null)?[err]:[ \"Images too large Max height: 2000px, max width: 2000px.\" ] }));\r\n                }\r\n\r\n                if( document.getElementById('bg_upld') ) document.getElementById('bg_upld').textContent = ( currentFiles.length > 0)?'NEXT':'No Background';\r\n                state.data.tempFiles = imgfiles;\r\n                return hideLoading(e);\r\n            });\r\n            \r\n            return;\r\n        }\r\n        \r\n        if( e.target.getAttribute(\"id\") !== \"bg_upld\" ){\r\n            layerName = ( state.temp_index === null )? state.formVals:state.data.layers[ state.temp_index ]?.name;//document.getElementById(\"LayerName\").value.trim();\r\n            let msgs = [];\r\n            console.log(`indx: ${ layerindex }`)\r\n            if( layerindex === null ){\r\n                state.data.layers?.forEach((val,indx, arr)=>{\r\n                    if( val.name === layerName ){\r\n                        msgs.push( \"This layer name is already in use, enter another!\" )\r\n                    }\r\n                })\r\n            }\r\n\r\n            if ( !layerName ){ msgs.push( \"Enter a layer name!\" ) }\r\n            if ( !state.data.tempFiles ){ msgs.push( \"Click the '+' to upload files!\" ) }\r\n            if ( msgs?.length > 0 ) { hideLoading(e); return setMsgStacks((prev)=>({...prev, substate: state.currsubState, messages:msgs, } ) ) }\r\n        }\r\n\r\n        bgElement=(e.target.getAttribute(\"id\") === \"bg_upld\")&& true;\r\n\r\n        if(( !state.data.tempFiles ) && e.target.getAttribute(\"id\") === \"bg_upld\" ){\r\n            state.data.background = ( !state.data.background || state.data.background?.length === 0 )?[]:state.data.background;\r\n            return closeLayerOptionsBox();\r\n        }\r\n\r\n        let file_len = state.data.tempFiles.length;\r\n        if ( layerindex === null && !bgElement ) { state.data.layers.push({ name: layerName, traits: [] }); layerindex = state.data.layers.length-1 }\r\n\r\n        for ( let n = 0; n < file_len; n++ ){\r\n            const imgURL = state.data.tempFiles[n].path\r\n            const ext = state.data.tempFiles[n].ext\r\n            \r\n            if(bgElement){\r\n                if( Array.isArray(state.data.background) ){\r\n                    state.data.background.push({trait_name: n, path: imgURL, ext, });\r\n                }else{\r\n                    state.data.background = [{trait_name: n, path: imgURL, ext, }]\r\n                }\r\n            }else{\r\n                await state.data.layers[ layerindex ].traits.push({ trait_name: n, path: imgURL, ext, });\r\n            }\r\n        }\r\n\r\n        return closeLayerOptionsBox();\r\n    }\r\n\r\n    const delLayer = async (e)=>{\r\n        if(state.currsubState === \"RandomGenerator-LayerOptions-Edit-Layer\"){\r\n            return setState((prev)=>( {...prev, currsubState: \"RandomGenerator-LayerOptions-Del-Layer\", previous: prev.currsubState} ));\r\n        }else{\r\n            showLoading();\r\n            if( state.temp_index !== null ){\r\n                state.data.layers.splice( state.temp_index, 1);\r\n                hideLoading();\r\n                return closeLayerOptionsBox();\r\n            }\r\n            return closeLayerOptionsBox();\r\n        }\r\n    }\r\n    \r\n    const renameLayer = (e)=>{\r\n        showLoading(e);\r\n        const the_value = state.formVals;\r\n        if(state.currsubState === \"RandomGenerator-LayerOptions-Edit-Layer\"){\r\n            return setState((prev)=>({...prev, currsubState: \"RandomGenerator-LayerOptions-Rename_Layer\" }));\r\n        }else{\r\n            let alreadyExists = false;\r\n            if ( !isAplhaNumeric( the_value, [ \"_\", \" \",\".\" ] ) || !stringLengthRange( the_value, 1, 50 ) ) { hideLoading(e); return; }\r\n            state.data.layers.forEach((val, indx, arr)=>{\r\n                if ( val.name === the_value.trim() ){\r\n                    alreadyExists = true;\r\n                }\r\n            });\r\n\r\n            if ( alreadyExists === true ) {\r\n                hideLoading(e);\r\n                return setMsgStacks((prev)=>({...prev, messages:[ \"Layer name is already in use, Enter another name.\" ] }));\r\n            }\r\n\r\n            state.data.layers[ state.temp_index ].name = state.formVals;\r\n            // ele.setAttribute('placeholder', state.formVals);\r\n            return closeLayerOptionsBox();\r\n        }\r\n    };\r\n    \r\n    const prioritizeLayer = async (e)=>{\r\n        let isPriority = state.data.layers[ state.temp_index ].priority;\r\n        document.getElementById(\"priorityLayerBttn\").classList.toggle(\"disablepriorityLayerBttn\");\r\n        document.getElementById(\"priorityLayerBttn\").classList.toggle(\"makepriorityLayerBttn\");\r\n        document.getElementById(\"makepriorityLayerOption\").classList.toggle('ispriorityLayerOption');\r\n        document.getElementById(\"makepriorityLayerOption\").classList.toggle('notpriorityLayerOption');\r\n        document.getElementById(\"makepriorityLayerOptionSpan\").innerText =( isPriority === true )?\"NO\":\"YES\";\r\n        state.data.layers[ state.temp_index ].priority = !state.data.layers[ state.temp_index ].priority;\r\n        setState((prev)=>prev)\r\n    };\r\n\r\n    const expandbox = ( e, indx )=>{\r\n        showLoading();\r\n        let me = 0;\r\n        while( me < document.getElementsByClassName('layer-images-box' ).length){\r\n            if(me !== indx){\r\n                if(!document.getElementsByClassName('layer-images-box')[me].classList.contains('inactive')){\r\n                    document.getElementsByClassName('layer-images-box')[me].classList.add('inactive');\r\n                }\r\n                if(document.getElementsByClassName('triangle-icon')[me].classList.contains('rotateExpander')){\r\n                    document.getElementsByClassName('triangle-icon')[me].classList.remove('rotateExpander');\r\n                }\r\n            }\r\n            me++;\r\n        }\r\n\r\n        if(document.getElementsByClassName('layer-images-box')[indx].classList.contains('inactive')){\r\n            document.getElementsByClassName('triangle-icon')[indx].classList.add('rotateExpander');\r\n            document.getElementsByClassName('layer-images-box')[indx].classList.remove('inactive');\r\n            document.getElementsByClassName(\"expander-box\")[indx].style.backgroundColor = \"rgb(129, 129, 129)\";\r\n        }else{\r\n            document.getElementsByClassName('triangle-icon')[indx].classList.remove('rotateExpander');\r\n            document.getElementsByClassName('layer-images-box')[indx].classList.add('inactive');\r\n            document.getElementsByClassName(\"expander-box\")[indx].style.backgroundColor = \"rgb(190, 190, 190)\";\r\n        }\r\n\r\n        hideLoading();\r\n    };\r\n    \r\n    const generate_it = async ( e, printCap )=>{\r\n        showLoading(e);\r\n        const psblecmbz = possblCombos( state.data.layers );\r\n        if ( psblecmbz < printCap ){\r\n            hideLoading(e)\r\n            return setMsgStacks((prev)=>({...prev, messages: [ `Add more images to existing layers or create more layers. Your current layers only generate ${psblecmbz} possible unique images.` ], substate: state.currentSubState}));\r\n        }\r\n        if( state.chainData === null ){\r\n            const connectwllt = await currentAddress();\r\n            if( connectwllt.code )\r\n                return setMsgStacks((prev)=>({...prev, messages: [ `web3 wallet connection error occured` ], substate: state.currentSubState}));\r\n        }\r\n\r\n        let conntd = await connectToChain( state.chainData );\r\n        if( conntd.code ){\r\n            return setMsgStacks((prev)=>({...prev, messages: [ `web3 wallet connection error occured` ], substate: state.currentSubState}));\r\n        }\r\n        \r\n        state.data.account = conntd;\r\n\r\n        const loop_and_pin_layers = async ( collName, layers )=>{\r\n            let emptyComboArray = []; state.data.newlayers = [];\r\n            layers.reverse();\r\n            for(let indx = 0; indx < layers.length; indx++){\r\n                emptyComboArray.push( { name: layers[indx].name, priority: layers[indx].priority, traits:[] } );\r\n                for( let pin = 0; pin < layers[indx].traits.length; pin++ ){\r\n                    const options = {\r\n                        pinataMetadata:{\r\n                        name: `${layers[indx].name}: ${layers[indx].traits[pin].trait_name}`,\r\n                        keyvalues: {\r\n                            description: `nft trait element from collection, generated by Yaad labs.`,\r\n                            name: `${layers[indx].name}: ${layers[indx].traits[pin].trait_name}`\r\n                        }\r\n                        },\r\n                        pinataOptions: {\r\n                            cidVersion: 0\r\n                        }\r\n                    };\r\n                    let assetName = conntd+\"__\"+Date.now()+\".\"+layers[indx].traits[pin].ext;\r\n                    let pin_body = new FormData();\r\n                    const newimgBlob = await base64ToBlob(imgURLFromBase64String(layers[indx].traits[pin].path));\r\n                    pin_body.append( 'img', newimgBlob, assetName );\r\n                    pin_body.append( 'the_options', JSON.stringify(options) );\r\n                    const pinnedItem = await fetch( `${state.baseServerUri}pinnit`, {method:'POST', body: pin_body} ).then((resp)=>resp.json()).then((pinned)=> pinned );\r\n                    layers[indx].traits[pin].ipfsHash = pinnedItem.IpfsHash;\r\n                    state.data.newlayers.push({ trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash })\r\n                    emptyComboArray[indx].traits.push({ trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash });\r\n                }\r\n            }\r\n            \r\n            return emptyComboArray;\r\n        };\r\n\r\n        const loop_and_pin_background = async ( backgrounds )=>{\r\n            let newBGArray = [];\r\n            for(let f = 0; f < backgrounds.length; f++){\r\n                const options = {\r\n                    pinataMetadata:{\r\n                    name: `background ${f}.`,\r\n                    keyvalues: {\r\n                        description: `nft trait element from collection, generated by Yaad labs.`,\r\n                    }\r\n                    },\r\n                    pinataOptions: {\r\n                        cidVersion: 0\r\n                    }\r\n                    \r\n                };\r\n\r\n                let assetName = conntd+\"__\"+Date.now()+\".\"+backgrounds[f].ext;\r\n                let pin_body = new FormData();\r\n                const fetchBlob = await fetch( imgURLFromBase64String( backgrounds[f].path ) );\r\n                const newimgBlob = await fetchBlob.blob();\r\n                pin_body.append( 'img', newimgBlob, assetName );\r\n                // pin_body.append( 'path',backgrounds[f].path );\r\n                pin_body.append( 'the_options', JSON.stringify(options) );\r\n                console.log(`pinning layers!`);\r\n                const pinnedBG = await fetch( `${state.baseServerUri}pinnit`, {method:'POST', body: pin_body}).then((resp)=>resp.json()).then((pinned)=>pinned);\r\n                backgrounds[f].ipfsHash = pinnedBG.IpfsHash;\r\n                newBGArray.push({ trait_name: backgrounds[f].trait_name, trait_index: f, ipfsHash: pinnedBG.IpfsHash});\r\n            }\r\n            return newBGArray;\r\n        };\r\n\r\n        const mapTraitTypes = async (comboz) => {\r\n            let len = 0; let traitTypes = []; let ego, isPriority = [];\r\n            while( len < comboz.length ){\r\n                if(comboz[len].priority){\r\n                    isPriority.push(comboz[len].name);\r\n                }\r\n                ego = comboz[len].traits.map(( x, v ) => {\r\n                    return { trait_type: comboz[len].name, trait_name: comboz[len].traits[v].trait_name, value: x.ipfsHash};\r\n                });\r\n\r\n                traitTypes.push(ego);            \r\n                len++;\r\n            }\r\n            ego = null;\r\n            return [traitTypes, isPriority];\r\n        };\r\n        \r\n        const traitTypesPushNA = async ( traitTypes, priorities ) => {\r\n            let endo = 0;\r\n            while ( endo < traitTypes.length ) {\r\n                if(!priorities.includes(traitTypes[endo][0].trait_type)){\r\n                    traitTypes[endo].push({trait_type: traitTypes[endo][0].trait_type, value: 'N/A'});\r\n                }\r\n                endo++;\r\n            }\r\n            return traitTypes\r\n        };\r\n\r\n        const insertBackground = async ( comboz, backgroundArray ) =>{\r\n            let d = 0; const backgrounds = await loop_and_pin_background( backgroundArray );\r\n            while( d < comboz.length ){\r\n                let newBG = backgrounds[ Math.floor(Math.random() * backgrounds.length) ];\r\n                comboz[d].splice(0, 0, { trait_type: \"background\", trait_name: newBG.trait_name, value: newBG.ipfsHash });\r\n                d++;\r\n            }\r\n        };\r\n\r\n        const allPossibleCombos = async ( collectionName, layersArray, bgArray )=> {\r\n            let comboz = [];\r\n            // let layerz = JSON.parse( JSON.stringify(state.data.layers) );\r\n            const loop_and_pin = await loop_and_pin_layers( collectionName, layersArray );\r\n            const map_traits = await mapTraitTypes(loop_and_pin);\r\n            const traittypes_fin = await traitTypesPushNA(map_traits[0], map_traits[1]);\r\n            \r\n            await get_all_possible_array_combos(traittypes_fin, comboz);\r\n            await shuffle(comboz);\r\n            // console.log(`bg: ${JSON.stringify(bgArray)}`)\r\n            if ( bgArray?.length > 0 ) { await insertBackground( comboz, bgArray ); }\r\n            return comboz;\r\n        };\r\n\r\n        let combo =  await allPossibleCombos( state.data.coll_name, state.data.layers, state.data.background );\r\n        const possibleCombos = combo.length;\r\n        const byteSize = async (obj)=>{\r\n            let str = null;\r\n            if( typeof(obj) === 'string' ){\r\n                str = obj;\r\n            }else{\r\n                str = JSON.stringify(obj);\r\n            }\r\n            const bytes = new TextEncoder().encode(str).length;\r\n            return bytes;\r\n        };\r\n\r\n        const getBytes = await byteSize(combo).then((res)=>res);\r\n\r\n        console.log(`size of combo: ${getBytes} bytes`);\r\n\r\n        const pinCombo = async (combo, optns, pinUrl)=> {\r\n            let pin_body = new FormData();\r\n            pin_body.append('path', JSON.stringify(combo)); \r\n            pin_body.append('the_options', JSON.stringify(optns));\r\n            const pinnedCombo = await fetch( pinUrl, {method:'POST', body: pin_body}).then((rezz)=>rezz.json()).then((pinned)=>pinned);\r\n            pin_body = null;\r\n            return pinnedCombo;\r\n        }\r\n\r\n        let optns = { pinataMetadata:{ name: state.data.coll_name, keyvalues: {} }, pinataOptions: { cidVersion: 0 } };\r\n        \r\n        let pinnedCombo;\r\n        if(getBytes < 20000000){\r\n            pinnedCombo = await pinCombo( combo, optns, `${state.baseServerUri}pinnitcombo` );\r\n            console.log(`pinning combo!`)\r\n        }\r\n        else{\r\n            pinnedCombo = {IpfsHash: null};\r\n        }\r\n\r\n        const drawimage = async (traitTypes, width, height) => {\r\n            let sampleArray = []; const cap_it = traitTypes.length;\r\n            for( let v = 0; v < cap_it; v++ ){\r\n                const  drawableTraits = traitTypes[v].filter( x=> x.value !== 'N/A');\r\n                const drawableTraits_length = drawableTraits.length;\r\n                const canvas = document.createElement(\"canvas\");\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                const ctx = canvas.getContext( '2d'  );\r\n                let loadedimgs = 1;\r\n                for(let p = 0; p < drawableTraits_length; p++) {\r\n                    let  drawableTrait = drawableTraits[p];\r\n                    try {\r\n                        // newlayers =  { trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash }\r\n                        let iterlength = ( ( p === 0 ) && state.data.background.length > 0 )?state.data.background.length:state.data.newlayers.length;\r\n                        loop1:\r\n                        for( let i = 0; i < iterlength; i++ ) {\r\n                            const traitinfo = ( ( p === 0 ) && state.data.background.length > 0 )?state.data.background[i]:state.data.newlayers[i];\r\n                            if( traitinfo.ipfsHash === drawableTrait.value ){\r\n                                console.log(`drawing images: ${p}`)\r\n\r\n                                // console.log(`trait ipfsHash: ${traitinfo.ipfsHash}, drawableTrait value: ${ drawableTrait.value }, name:: ${JSON.stringify(state.data.layers[traitinfo.layer_index].traits[traitinfo.trait_index].trait_name)}`);\r\n                                let img = new Image();\r\n                                let base4path = ( ( p === 0 ) && state.data.background.length > 0 )?traitinfo.path:state.data.layers[traitinfo.layer_index].traits[traitinfo.trait_index].path;\r\n                                img.src = imgURLFromBase64String(base4path);\r\n                                // eslint-disable-next-line no-loop-func\r\n                                img.addEventListener( \"load\", async ()=>{\r\n                                    // console.log(`loaded img: ${loadedimgs}, drawableTraits length: ${drawableTraits_length}, sample index: ${v}`);\r\n                                    ctx.drawImage(img, 0, 0, width, height);\r\n                                    if( loadedimgs === drawableTraits_length ){\r\n                                        const sampleimage = await imgToBase64String(null, canvas.toDataURL(\"image/png\"));\r\n                                        sampleArray.push( { name: `sample turd #${v}`, attributes: drawableTraits, path: sampleimage } );\r\n                                        const updateDB = async ( data, collname, account, thesamples, combo_ipfs_hash )=>{\r\n                                            let payload = new FormData();\r\n                                            payload.append('data', JSON.stringify(state.data));\r\n                                            payload.append('collname', state.data.coll_name);\r\n                                            payload.append('collSym', state.data.coll_symbol);\r\n                                            payload.append('account', conntd);\r\n                                            payload.append('ipfs_uri', combo_ipfs_hash);\r\n                                            // payload.append('samples', JSON.stringify(thesamples));\r\n                                            // let saveCollection = await fetch(`${state.baseServerUri}/savenftcollection`, {method:'POST', body:payload}).then((response)=>response.json()).then((ress)=>ress);\r\n                                            payload = null;\r\n                                            fetch(nftcontract).then( r=>r.text()).then( async (contract)=>{\r\n                                                // let newcontract = JSON.parse(JSON.stringify(yaadcontract));\r\n                                                // newcontract.name = state.data.coll_name.split(\" \").join(\"_\");\r\n                                                return setState((prev)=>({...prev, data: {...prev.data, coll_name: prev.data.coll_name, coll_symbol: prev.data.coll_symbol, samples: thesamples, possibleCombos, contracts: [{name:\"main\", contract,}] }, currsubState: \"RandomGenerator-RandomGenerated\" }));    \r\n                                            });\r\n                                        };\r\n                                        if( v === (cap_it-1) ){\r\n                                            await updateDB(state.data, state.data.coll_name, conntd, sampleArray, pinnedCombo);\r\n                                        }\r\n                                    }\r\n                                    loadedimgs++;\r\n                                });\r\n                                break loop1;\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(`drawing error occurred: ${JSON.stringify(error)}`)\r\n                        // return res.json({error, current_state: `looping through attributes, failed to draw index ${p}. Details: ${JSON.stringify(traits[p])}`})\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const getSamplesAndClearComboData = async (comboz, cap)=>{\r\n            const cap_it = (cap)?cap:comboz.length;\r\n            let sampleImgs = [];\r\n            for(let v = 0; v < cap_it; v++){\r\n                sampleImgs.push(comboz[v]);\r\n            }\r\n\r\n            combo = null;\r\n            \r\n            return drawimage(sampleImgs, 1000, 1000);\r\n        };\r\n\r\n        const samples = await getSamplesAndClearComboData(combo, printCap);\r\n    }\r\n    \r\n    const handleSol = async (e)=>{\r\n        showLoading();\r\n        let elem  = (e)?e.target:null;\r\n        let elemFiles = elem.files;\r\n        \r\n        const  readAndShowFiles = async (demFiles) => {\r\n            let contractArray = [];\r\n            for (let dafile of demFiles) {\r\n                let readr = new FileReader();\r\n                readr.onloadend = async ()=>{\r\n                    let  nameArray = dafile.name.split('.');\r\n                    nameArray.splice((dafile.name.split('.').length-1),1);\r\n                    contractArray.push({name: nameArray.join('.'), contract: readr.result});\r\n                    \r\n                    if(contractArray.length === demFiles.length){\r\n                        state.data.contracts = contractArray;\r\n                        state.currsubState = \"RandomGenerator-LayerOptions-ContractName\";\r\n                        setState((prev)=>prev);\r\n                        hideLoading();\r\n                    }\r\n                }\r\n                // readr.\r\n                readr.readAsText(dafile);\r\n            }\r\n        }\r\n\r\n        await readAndShowFiles(elemFiles);\r\n    };\r\n\r\n    const formDataHandler = (e)=>{\r\n        const ele = e.target;\r\n        const eleID = ele.getAttribute(\"id\");\r\n        const the_value = ele.value.trim();\r\n        \r\n        if ( contractZone ) { ele.value = state.data.coll_name; return; }\r\n        if ( the_value === \"\" ) return false;\r\n        \r\n        switch ( eleID ) {\r\n            case \"contractName\":\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 30 ) ) { ele.value = state.data.coll_name; return; }\r\n                state.data.coll_name = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n            case \"contractSymbol\":\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 4 ) ) { ele.value = state.data.coll_symbol; return; }\r\n                state.data.coll_symbol = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n            default:\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 50 ) ) { ele.value = state.formVals; return; }\r\n                state.formVals = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n        }\r\n        return;\r\n    }\r\n    \r\n    function GenLayers (){\r\n        function Layerz( { layerData } ){\r\n            let mouseUpFired, initPositions = [], elebox = document.getElementById('LayerGenBoxx'), newindex = null;\r\n\r\n            useEffect(()=>{\r\n                [].forEach.call(document.getElementsByClassName('layerBox'), (element) => {\r\n                    initPositions.push( element.getBoundingClientRect().top + document.getElementById('popup').scrollTop );\r\n                });\r\n            },[ elebox, initPositions ])\r\n\r\n            const layer_move_initializer = ( event, layerIndex )=>{\r\n                if(event.target.getAttribute('class') === 'layerBox'){\r\n                    mouseUpFired = false;\r\n\r\n                    if(event.type === 'mousedown' || event.type === 'touchstart'){\r\n                        if(mouseUpFired === true){ return false; }\r\n                        let div = event.target, divWitdh = div.clientWidth, popup = document.getElementById('popup'), indexOfSelectedItem = layerIndex, arrayOfEles = document.getElementsByClassName('layerBox'), centerofdiv = div.clientHeight/2;\r\n                        div.classList.add(\"sortable-handler\");\r\n                        newindex = indexOfSelectedItem;\r\n                        div.style.width = divWitdh+'px';\r\n                        div.style.top = (event.type === 'touchstart')?((event.touches[0].clientY + popup.scrollTop) - centerofdiv)+'px':((event.clientY + popup.scrollTop) - centerofdiv)+'px';\r\n                        \r\n                        window.onmousemove = (e)=>{\r\n                            if(mouseUpFired === false){\r\n                                div.style.top = ((e.clientY + popup.scrollTop) - centerofdiv)+'px';\r\n                                initPositions.forEach((element, i) => {\r\n                                    if ( indexOfSelectedItem > i ) {\r\n                                        if ( ( ( e.clientY + popup.scrollTop ) - 35 ) < ( element ) && ( ( e.clientY + popup.scrollTop ) - 35 ) > ( element - 70 ) ) {\r\n                                            divSwapper(arrayOfEles[i].parentNode, div.parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n\r\n                                    if( indexOfSelectedItem < i ) {\r\n                                        if ( ( ( e.clientY + popup.scrollTop ) + 35 ) > ( element + 70 ) && ( ( e.clientY + popup.scrollTop ) + 35 ) < ( element + 140 ) ) {\r\n                                            divSwapper(div.parentNode, arrayOfEles[i].parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        };\r\n                        \r\n                        window.ontouchmove = (e)=>{\r\n                            if(mouseUpFired === false){\r\n                                div.style.top = ( ( e.touches[0].clientY + popup.scrollTop ) - centerofdiv )+'px';\r\n                                initPositions.forEach((element, i) => {\r\n                                    if ( indexOfSelectedItem > i ) {\r\n                                        if( ( ( e.touches[0].clientY + popup.scrollTop ) - 35 ) < (element) && ( ( e.touches[0].clientY + popup.scrollTop ) - 35 ) > ( element - 70 ) ){\r\n                                            divSwapper(arrayOfEles[i].parentNode, div.parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n\r\n                                    if ( indexOfSelectedItem < i ) {\r\n                                        if( ( ( e.touches[0].clientY + popup.scrollTop ) + 35 ) > ( element + 70 ) && ( ( e.touches[0].clientY + popup.scrollTop ) + 35 ) < ( element + 140 )){\r\n                                            divSwapper( div.parentNode, arrayOfEles[i].parentNode );\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n                                });\r\n                                \r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n            };\r\n\r\n            const layer_move_ender = ( event, initIndex )=>{\r\n                if(event.target.getAttribute('class') === 'layerBox'){ showLoading(); }\r\n                \r\n                mouseUpFired = true;\r\n                \r\n                if( event.type === 'mouseup' || event.type === 'touchend' || event.type === 'touchcancel'){\r\n                    let div = event.target;\r\n                    div.classList.remove(\"sortable-handler\");\r\n                    let arrayOfEles = document.getElementsByClassName('layerBox');\r\n                    let p = 0;\r\n    \r\n                    while ( p < arrayOfEles.length ) {\r\n                        arrayOfEles[p].classList.remove('betweenItem_two');\r\n                        arrayOfEles[p].classList.remove('betweenItem');\r\n                        p++;\r\n                    }\r\n    \r\n                    mouseUpFired = true;\r\n    \r\n                    if( event.target.getAttribute('class') === 'layerBox' ){\r\n                        if( initIndex !== newindex){\r\n                            let tempArray = state.data.layers.splice( initIndex, 1 )[0];\r\n                            state.data.layers.splice(newindex, 0, tempArray);\r\n                        }\r\n                        setState((prev)=>({...prev}));\r\n                        return hideLoading();\r\n                    }\r\n                }\r\n                \r\n            };\r\n\r\n            const setTrait = async ( e, parentIndx, indx )=>{\r\n                e.preventDefault();\r\n                const ele = e.target;\r\n                if(ele.value){\r\n                    state.data.layers[ parentIndx ].traits[ indx ].trait_name = ele.value;\r\n                    ele.setAttribute( 'placeholder', ele.value );\r\n                }\r\n            };\r\n\r\n            const delTrait = ( e, parentIndx, indxx )=>{\r\n                showLoading();\r\n                state.data.layers[ parentIndx ].traits.splice( indxx, 1 );\r\n                if ( state.data.layers[ parentIndx ].traits.length === 0 ) state.data.layers.splice( parentIndx, 1 );\r\n\r\n                hideLoading();\r\n                return setState((prev)=>({...prev}));\r\n            };\r\n    \r\n            const LayerImagesBox = ()=>{\r\n                let boxcont = [], traitLength = state.data.layers[ layerData.index ].traits.length;\r\n                for ( let indxx = 0; indxx < traitLength; indxx++ ) {\r\n                    let imgsrc = `data:image/${state.data.layers[ layerData.index ].traits[ indxx ].ext};base64,${state.data.layers[ layerData.index ].traits[ indxx ].path}`,\r\n                    traitName = state.data.layers[ layerData.index ].traits[ indxx ].trait_name;\r\n                    boxcont.push(<div key={indxx} className='layer-image-container'>\r\n                        <div className='img-box'>\r\n                            <img src={imgsrc} alt=''/>\r\n                        </div>\r\n                        <div className='traitName'>\r\n                            <input className='traitNameBox' id={\"traitName_\"+indxx} placeholder={ traitName } type=\"text\" name='name' onClick={(e)=>{ e.target.value = traitName}} onChange={(e)=>setTrait( e, layerData.index, indxx )} />\r\n                            <button className=\"del-trait\" onClick={ (e)=>delTrait( e, layerData.index, indxx ) } >X</button>\r\n                        </div>\r\n                    </div>)                             \r\n                };\r\n                return(boxcont);\r\n            }\r\n            \r\n            return(\r\n                <div className='layer-box-content' onMouseDown={(e)=>layer_move_initializer( e, layerData.index )} onMouseUp={(e)=>layer_move_ender( e, layerData.index )} onTouchStart={(e)=>layer_move_initializer( e, layerData.index )} onTouchCancel={(e)=>layer_move_ender( e, layerData.index )} onTouchEnd={(e)=>layer_move_ender( e, layerData.index )}>\r\n                    <div className='layerBox'>\r\n                        <button className='expander-box' onClick={(e)=>expandbox( e, layerData.index )} >\r\n                            <div className=\"prioBox\" style={{width:\"10px\", float: \"left\", height:\"10px\", borderRadius:\"5px\", left:\"-10px\", top:\"-10px\", boxSizing:\"border-box\", backgroundColor:\"rgb(140, 140, 140)\"}} onClick={()=>{return false}}>\r\n                                <div className=\"prioBoxx\" style={{width:\"70%\", height:\"70%\", margin:\"15%\", borderRadius:\"35%\", backgroundColor:(state.data.layers[ layerData.index ].priority)?\"rgb(0, 172, 7)\":\"#F0000\", boxSizing:\"border-box\", borderLeft:(state.data.layers[ layerData.index ].priority)?\"1px solid rgb(159, 255, 162)\":\"1px solid rgb(190, 190, 190)\", borderTop:(state.data.layers[ layerData.index ].priority)?\"1px solid rgb(159, 255, 162)\":\"1px solid rgb(190, 190, 190)\"}}>\r\n                                    <div className=\"prioBoxxx\" style={{width:\"30%\", height:\"30%\", top:\"1px\", right:\"1px\", borderRadius:\"35%\", backgroundColor:(state.data.layers[ layerData.index ].priority)?\"rgb(159, 255, 162)\":\"rgb(190, 190, 190)\", boxSizing:\"border-box\",}}>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='layer-name' >\r\n                                <span> { state.data.layers[ layerData.index ].name } </span>\r\n                            </div>\r\n                            <div className='triangle-icon-container' >\r\n                                <img className='triangle-icon' src='./inverted-triangle.svg' alt='' />\r\n                            </div>\r\n                        </button>\r\n                        <div className='edit-layer-box'>\r\n                            <div className='edit-layer-icon-div' onClick={(e)=>setState((prev)=>({...prev, temp_index:layerData.index, currsubState: \"RandomGenerator-LayerOptions-Edit-Layer\" } )) }>\r\n                                <img src='./edit icon.svg' alt='Edit layer' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='layer-images-box inactive'>\r\n                        <button className='add-Layer-imgs' onClick={()=>setState((prev)=>({...prev, temp_index:layerData.index, currsubState: \"RandomGenerator-LayerOptions-AddLayer\" })) } >+</button>\r\n                        <LayerImagesBox/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        if(state.data.layers.length > 0){\r\n            let layerlen = state.data.layers.length, layerindx = 0, boxcont = [];\r\n            for ( layerindx; layerindx < layerlen; layerindx++ ){\r\n                boxcont.push(<Layerz layerData={{ index:layerindx }} key={layerindx}/>);\r\n            }\r\n            return(boxcont)\r\n        }\r\n    }\r\n    \r\n    // console.log(`char code for space: ${\" \".charCodeAt(0)}`);\r\n    \r\n    function TheBGs(){\r\n        const setBGTrait = ( e, bgtraitIndex )=>{\r\n            e.preventDefault(); const ele = e.target;\r\n            \r\n            if( ele.value ){\r\n                state.data.background[ bgtraitIndex ].trait_name = ele.value;\r\n                ele.setAttribute('placeholder', ele.value);\r\n            }\r\n        };\r\n\r\n        const delBG = ( e, bgtraitIndex )=>{\r\n            showLoading();\r\n            state.data.background.splice( bgtraitIndex, 1);\r\n            if( state.data.background?.length === 0 ) { delete state.data.background; }\r\n            setState((prev)=>({...prev}));\r\n            return hideLoading()\r\n        };\r\n        \r\n        if(state.data.layers?.length > 1){\r\n            if(state.data.background){\r\n                const bglength = state.data.background.length; let bgstack = [];\r\n                \r\n                for ( let indxx = 0; indxx < bglength; indxx++ ){\r\n                    const imgURL = `data:image/${ state.data.background[indxx].ext };base64,`+state.data.background[indxx].path;\r\n                    bgstack.push( <div key={indxx} className='BG_UpldContentBx'><div className='BG_UpldContent'><img src={imgURL} alt=''/><div className='traitName'><input className='BG_traitNameBox' type={'text'} placeholder={ state.data.background[ indxx ].trait_name } onClick={ (e)=> { e.target.value = state.data.background[ indxx ].trait_name} } onChange={(e)=>setBGTrait( e, indxx )} /></div></div><button className=\"delBG\" id={'deleteBGUpldContentBx_'+indxx} onClick={ (e)=>delBG( e, indxx )}>X</button></div> )\r\n                }\r\n\r\n                return( <> <div className='bg_title_box'> <span> Backgrounds </span> </div> {bgstack} <div className='LayerbgAdd' id='selectBG' onClick={(e)=>setState((prev)=>({...prev, currsubState:\"RandomGenerator-LayerOptions-BG-Upld\" }))}> <div className='LayerbgContentadd'> <span>+</span> </div> <span> Add image. </span> </div> </> )\r\n            }\r\n        }\r\n    }\r\n    \r\n    let activeContract = state.data[\"activeContract\"], conDetails = {};\r\n    \r\n    useEffect(()=>{\r\n        if(state.data[\"contracts\"] && activeContract){\r\n            conDetails[\"name\"] = state.data[\"contracts\"][activeContract].name;\r\n            conDetails[\"contract\"] = state.data[\"contracts\"][activeContract].contract;\r\n        }\r\n    },[activeContract])\r\n\r\n    function ThaSamples (){\r\n        if(state.data.samples?.length > 0){\r\n            let sampleLen = 0; let boxcont = [];\r\n\r\n            while (sampleLen < state.data.samples?.length){\r\n                const imgurl = imgURLFromBase64String(state.data.samples[sampleLen].path);\r\n                boxcont.push(<div key={sampleLen} className='layer-image-container'><div className={\"img-box\"}><img className='sampleImage' src={imgurl} alt=''/></div></div>);\r\n                sampleLen++;\r\n            }\r\n            \r\n            return(<div className='contracted-box'>\r\n                <div id='nftSamples-container' className='contracted-container'>\r\n                    <h3>Generated Samples</h3>\r\n                    { boxcont }\r\n                </div>\r\n                <button className=\"expander-div\" onClick={(e)=>{ expandABox( e, document.getElementById( 'nftSamples-container' ), 'nftSamples-expanded-container', 'nftSamples-contracted-container' ); }} >expand</button>\r\n            </div>)\r\n        }\r\n\r\n        // showLoading();\r\n        // checkWorkInterval(`${state.baseServerUri}progress/generator/${state.data.coll_name}`, 45000, (piss)=>{\r\n        //     console.log(`meeehh its done-- ${JSON.stringify(piss)}`);\r\n        //     if(piss !== null && piss !== undefined){\r\n        //         stopCheckWork();\r\n        //         state.data.samples = piss.data.samples;\r\n        //         setState((prev)=>prev);\r\n        //         hideLoading();\r\n        //     }\r\n\r\n        //     return (<span style={{color:\"white\"}}>homoooo: {piss}</span> )\r\n        // });\r\n    }\r\n    \r\n    let contractZone = (state.currsubState === \"RandomGenerator-RandomGenerated\")?true:false;\r\n    \r\n    function ContractBox(){\r\n        let boxxcont = [];\r\n        if(state.data.contracts?.length > 0 && state.currsubState !== \"RandomGenerator-ContractDeployed\"){\r\n            const the_contracts = state.data.contracts;\r\n            let contractLen = the_contracts.length;\r\n            \r\n            const showContract = ( e, daindex )=>{\r\n                showLoading(); e.preventDefault();\r\n                state.data.activeContract = daindex;\r\n                setState((prev)=>({...prev}));\r\n                hideLoading();\r\n            };\r\n            \r\n            for ( let sampleLen = 0; sampleLen < contractLen; sampleLen++ ){\r\n                boxxcont.push(\r\n                    <button key={sampleLen} onClick={ (e)=>showContract( e, sampleLen ) } className={\"contractBox\"} >\r\n                        <img src='./solidity_icon.svg' id={\"contractBoxImg_\"+sampleLen} alt=''/>\r\n                        <span id={\"contractBoxSpan_\"+sampleLen} >{ the_contracts[sampleLen].name }</span>\r\n                    </button>\r\n                );\r\n            }\r\n            \r\n            let contractDetailsBox = <div className='contracted-box'>\r\n                <div style={{ height:'20px', width:'20px', margin:'0px 0px -30px auto', cursor:'pointer'}} onClick={(e)=>{ showLoading(); return setState((prev)=>({...prev, formVals:{activeContractIndex:0, contract:state.data.contracts}, currsubState:\"RandomGenerator-LayerOptions-Write-Contract\" })); } }>\r\n                    <img src='./edit icon.svg' alt=''/>\r\n                </div>\r\n                <div id='contracted-container' className='contracted-container'>\r\n                    <h3>{state.data.contracts[0]?.name}.sol</h3>\r\n                    <span>{state.data.contracts[0]?.contract}</span>\r\n                </div>\r\n                <button className=\"expander-div\" onClick={(e)=>expandABox( e, document.getElementById('contracted-container'), 'contracted-container-expanded', 'contracted-container') } >expand</button>\r\n            </div>;\r\n            return( <> <BoxTitle data={{divClass:'contractTitle', textType:'h2', text:'Deploy Contract'}}/>{ <div id=\"pissingD\"> {boxxcont} </div> } {contractDetailsBox} </> )\r\n        }else{\r\n            return(<>\r\n                <BoxTitle data={{divClass:'optionsTitle', textType:'h2', text:'Contract Deployed.'}}/>\r\n                <a href={state.data.contract_link} target=\"_blank\" rel=\"noreferrer\">\r\n                    <BoxTitle data={{divClass:'regularText', textType:'span', text:`Contract address: ${state.data.contract_address}`}}/>\r\n                </a>\r\n            </>\r\n            )\r\n        }\r\n    }\r\n\r\n    function CollNameBox(){\r\n        return(<div className='coll_name_box'>\r\n            <div className='contractNameContainer'>\r\n                <input type='text' id='contractName' className='contractName' placeholder={(state.data.coll_name)?`Name: ${state.data.coll_name}`:\"Name: \"} onChange={formDataHandler} onClick={(e)=> (state.data.coll_name)? e.target.value = state.data.coll_name:false} />\r\n            </div>\r\n            <div className='contractSymbolContainer'>\r\n                <input type='text' id='contractSymbol' className='contractSymbol' placeholder={(state.data.coll_symbol)?`Symbol: ${state.data.coll_symbol}`:\"Symbol: \"} onChange={formDataHandler} onClick={(e)=> (state.data.coll_symbol)? e.target.value = state.data.coll_symbol:false } />\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    let currentSubState, mainBox, submitButton, coll_Name_Box;\r\n\r\n    switch ( state.currsubState ) {\r\n        case \"RandomGenerator-ContractDeployed\":\r\n        case \"RandomGenerator-RandomGenerated\":\r\n            mainBox = <div id='LayerGenBoxx'> \r\n                <ContractBox/>\r\n                <ThaSamples/>\r\n                <Buttonz data={{class:\"submitBttn\", id:'Generate-pfp', value: 'Deploy Contract', func: deployContract}} />\r\n            </div>;\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-AddLayer\":\r\n        case \"RandomGenerator-LayerOptions-BG-Upld\":\r\n            let addLayerIMG = state.currsubState === 'RandomGenerator-LayerOptions-AddLayer';\r\n            let layerImg_tmpIndx = ( addLayerIMG && state.temp_index === null )\r\n            let pissoffbox = ( layerImg_tmpIndx )?<input className='LayerName' id='LayerName' name='name' type='text' placeholder={(state.formVals !== null)?state.formVals:'Enter layer name.'} onChange={formDataHandler} onClick={(e)=> e.target.value = state.formVals}/>:<BoxTitle data={{ divClass:\"editBoxTitle\", textType:'h2', text:`Upload images.`}}/>;\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                { pissoffbox }\r\n                <BoxTitle data={{ divClass:\"optionsTitle\", textType:'span', text:( addLayerIMG )?(`Click the \"+\" to upload layer images${( state.temp_index !== null)?\" for: \"+state.data.layers[ state.temp_index ]?.name:\"\"}.`):`Click the \"+\" to upload background images.`}}/>\r\n                <button className='plusBttn' id='LayerUpldLabel' htmlFor='multi_asset' style={{ fontSize: '50px !important'}} onClick={( addLayerIMG )?(e)=>{ showLoading(e); let ele_val = state.formVals; if( !ele_val && state.temp_index === null ) { e.preventDefault(); setMsgStacks((prev)=>( {...prev, messages:[ \"Enter a layer name!\" ], substate:state.currsubState } )); return hideLoading(e); } document.getElementById('multi_asset').click(); return hideLoading(e); }:(e)=>{ showLoading(e); document.getElementById('multi_asset').click(); return hideLoading(e);}} >+\r\n                    <input type={'file'} id='multi_asset' name={( addLayerIMG )?'multi_asset':'bg_asset'} multiple='multiple' onChange={ (e)=>handleAddLayerUpld( e, state.temp_index ) } hidden/>\r\n                </button>\r\n                <div id='layerContentBox'></div>\r\n                <button className=\"submitBttn\" id={( addLayerIMG )?'addLayerImages':'bg_upld'} onClick={ (e)=>handleAddLayerUpld( e, state.temp_index ) } >\r\n                    {( addLayerIMG )?((typeof( state.temp_index ) === \"number\")?'Add':'Create'):'No Background'}\r\n                </button>\r\n            </div>;\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Edit-Layer\":\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{divClass:\"editBoxTitle\", textType:'h2', text:`Edit '${state.data.layers[ state.temp_index ]?.name}' layer.`}}/>\r\n                <div style={{ padding:\"0px 10px 10px 10px\"}}>\r\n                    <BoxTitle data={{divClass:\"optionsTitle\", textType:'span', text:`Rename layer.`}}/>\r\n                    <Buttonz data={{class:'renameLayerBttn', id:'bg_upld', value:'Rename', func: renameLayer}} />\r\n                </div>\r\n                <div style={{ padding: \"0px 10px 10px 10px\", width: \"30%\", boxSizing: \"border-box\", display: \"inline-block\"}}>\r\n                    <BoxTitle data={{divClass:\"optionsTitle\", textType:'span', text:`Prioritized.`}}/>\r\n                    <button id=\"priorityLayerBttn\" className={( state.data.layers[ state.temp_index ].priority === true )?'disablepriorityLayerBttn':'makepriorityLayerBttn'} onClick={(e)=>{ prioritizeLayer(e) }}>\r\n                        <div id='makepriorityLayerOption' className={( state.data.layers[ state.temp_index ].priority === true )?'ispriorityLayerOption':'notpriorityLayerOption'}>\r\n                            <span id='makepriorityLayerOptionSpan'>{( state.data.layers[ state.temp_index ].priority === true )?\"YES\":\"NO\"}</span>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n                <div style={{ padding: \"0px 10px 10px 10px\", width: \"70%\", boxSizing: \"border-box\", display: \"inline-block\", float:\"right\"}}>\r\n                    <BoxTitle data={{divClass:\"optionsTitle\", textType:'span', text:`Delete layer.`}}/>\r\n                    <Buttonz data={{class:\"delLayerBttn\", id:'bg_upld', value: 'DELETE', func: delLayer}} />\r\n                </div>\r\n            </div>\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Rename_Layer\":\r\n        case \"RandomGenerator-LayerOptions-Del-Layer\":\r\n            let renameBox = state.currsubState === \"RandomGenerator-LayerOptions-Rename_Layer\"\r\n            let newLayerName = ( renameBox )?<DaInput data={{typeClass:'LayerName', typeId:'LayerName', name:'name', type:'text', placeholder:state.data.layers[ state.temp_index ].name, onChange:formDataHandler}}/>:<Buttonz data={{class:'delLayerBttn', id:'', value:'YES', func: delLayer}} />;\r\n\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{divClass:\"optionsTitle\", textType:'h4', text:( renameBox )?'Change layer name.':`Select yes to delete ${state.data.layers[ state.temp_index ]?.name} layer.`}}/>\r\n                { newLayerName }\r\n                <button className=\"nodelLayerBttn\" onClick={( renameBox )?renameLayer:closeLayerOptionsBox}>{(renameBox)?'RENAME':'NO'}</button>\r\n            </div>\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Write-Contract\":\r\n            currentSubState = <CodeEditor/>\r\n            break;\r\n        default:\r\n            currentSubState = null; state.formVals = null; state.temp_index = null;\r\n            submitButton = ( state.data.layers.length > 1 )?<button id={(state.data.background)?'Generate-pfp':'selectBG'} className=\"submitBttn\" onClick={(e)=>{ if ( state.data.background ) { return generate_it( e, 25 ) }else{ return setState((prev)=>({...prev, currsubState:\"RandomGenerator-LayerOptions-BG-Upld\" })); } }} >{ (state.data.background)?'GENERATE':'Choose Backgrounds' }</button>:'';\r\n            coll_Name_Box = <CollNameBox/>;\r\n            mainBox = <>\r\n                <button className='generatorRightPanelAddNewLayer' id='generatorRightPanelAddNewLayer' onClick={(e)=>{ if( state.data.coll_name?.length > 0 && state.data.coll_symbol?.length > 0 ){ return setState((prev)=>({...prev, temp_index:null, currsubState: \"RandomGenerator-LayerOptions-AddLayer\" })); }else{ let messages = []; if( !state.data.coll_symbol ){ messages.push(\"Enter a project/NFT symbol!\") } if( !state.data.coll_name ){ messages.push( \"Enter a project/NFT name!\" ) } if( messages.length > 0 ){ return setMsgStacks( (prev)=>({...prev, messages, substate:state.currsubState }) ) } } }} > + </button>\r\n                <BoxTitle data={{divClass:'optionsTitle', textType:'h2', text:'LAYERS'}}/>\r\n                <BoxTitle data={{divClass:'optionsTitle', textType:'span', text:`Click the \"+\" icon to create new layer`}}/>\r\n                <div id='LayerGenBoxx'> <GenLayers/> </div>\r\n                <TheBGs/>\r\n                {submitButton}\r\n            </>;\r\n            break;\r\n    }\r\n\r\n    function MainContainer (){\r\n        if(!currentSubState){\r\n            return(\r\n                <div className='RandomGenerator'>\r\n                    <button className='closeBox' onClick={()=> setState( (prev)=>({...prev, state:\"home\", data:{ coll_name : null, coll_symbol : null, layers:[] }, currsubState:null, temp_index: null }) ) }>X</button>\r\n                    {coll_Name_Box}\r\n                    <div className='LayerGenBox'>\r\n                        { mainBox }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className={( state.currsubState === 'RandomGenerator-LayerOptions-Write-Contract')?'RandomGenerator':'LayerOptionsBox'} >\r\n                    <button className='closeBox' onClick={closeLayerOptionsBox} >X</button>\r\n                    {currentSubState}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    return( <MainContainer/> )\r\n};\r\n\r\nexport default RandomGenerator;","import { getFileExtension } from \"./imgSignatures\";\r\n\r\nconst validateIMGtype = async ( demFiles, childClassName, parentIdName, wrongFiles, callback) => {\r\n    const parentEle = document.getElementById(parentIdName);\r\n    parentEle.innerHTML = \"\";\r\n    const demlen = demFiles.length;\r\n    console.log(`files length: ${demlen}`);\r\n    if ( demlen === 0 ){\r\n        return callback([ \"Upload a file.\", wrongFiles]);\r\n    }\r\n    let imgArray = [];\r\n    let loadedImgs = 0;\r\n    for ( let n = 0; n < demlen ; n++ ) {\r\n        let dafile = demFiles[n];\r\n        // eslint-disable-next-line no-loop-func\r\n        getFileExtension( dafile, ( [ path, ext ] )=>{\r\n            if( ext ){\r\n                if(ext.match(/^(jpg|png|gif|webp)/)){\r\n                    const img = document.createElement(\"img\");\r\n\r\n                    img.addEventListener( 'load', ()=>{\r\n                        if( img.width <= 2000  && img.height <= 2000 ){\r\n                            loadedImgs++;\r\n                            imgArray.push( { path, ext, } );\r\n                            const para = document.createElement(\"div\");\r\n                            para.appendChild(img);\r\n                            para.classList.add((childClassName)?childClassName:'LayerUpldContentBox')\r\n                            parentEle.appendChild(para);\r\n                        }else{\r\n                            img.remove();\r\n                            wrongFiles.push(n);\r\n                        }\r\n\r\n                        if ( demlen === ( loadedImgs + wrongFiles.length ) ){\r\n                            return callback( [ null, wrongFiles, ( imgArray.length > 0 )?imgArray:null ] );\r\n                        }\r\n                    });\r\n                    img.src = `data:image/${ext};base64,`+path;\r\n                }else{\r\n                    wrongFiles.push(n);\r\n                    if(demFiles.length === wrongFiles.length){\r\n                        return callback([ \"Unsupported file types! JPG, JPEG, PNG, WEBP, GIF, JPE only.\", wrongFiles ]);\r\n                    }\r\n                }\r\n            }else{\r\n                wrongFiles.push(n);\r\n                if(demFiles.length === wrongFiles.length){\r\n                    return callback([ \"Unknown file type, images only! Supported types: JPG, JPEG, PNG only.\", wrongFiles ]);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport { validateIMGtype }"],"names":["expandABox","e","expandee","expandedClass","contractedClass","ele","target","classList","contains","remove","add","innerText","divSwapper","node1","node2","parentNode","replaceChild","insertBefore","get_all_possible_array_combos","async","input","output","n","da_path","undefined","length","current_item","gogo","val","push","pop","slice","CodeEditor","lazy","props","window","location","host","msgStacks","setMsgStacks","useContext","MsgContext","state","setState","StateContext","data","activeContract","closeLayerOptionsBox","gotTo","showLoading","currsubState","localStorage","clear","formVals","tempFiles","prev","deployContract","address","currentAddress","coll_name","trim","messages","substate","coll_symbol","contractOptions","language","sources","settings","outputSelection","newline","contracts","contract","split","newlineLen","myContractName","indx","includes","console","log","forEach","ind","name","content","JSON","stringify","chainData","connected","contractData","FormData","code","hideLoading","append","compiledContract","fetch","baseServerUri","method","body","then","theresponse","json","compiled","abi","bytecode","factory","ContractFactory","signer","nftToken","deploy","tx","catch","reason","contract_address","contract_link","currentNetwork","error","handleAddLayerUpld","layerindex","layerName","bgElement","getAttribute","currentFiles","files","demFiles","childClassName","parentIdName","wrongFiles","callback","parentEle","document","getElementById","innerHTML","demlen","imgArray","loadedImgs","dafile","getFileExtension","path","ext","match","img","createElement","addEventListener","width","height","para","appendChild","src","validateIMGtype","err","wrongfiles","imgfiles","textContent","temp_index","layers","msgs","arr","background","file_len","traits","imgURL","Array","isArray","trait_name","delLayer","previous","splice","renameLayer","the_value","alreadyExists","isAplhaNumeric","stringLengthRange","generate_it","printCap","psblecmbz","arrays","combos","priority","possblCombos","currentSubState","conntd","connectToChain","account","insertBackground","comboz","backgroundArray","d","backgrounds","newBGArray","f","options","pinataMetadata","keyvalues","description","pinataOptions","cidVersion","assetName","Date","now","pin_body","fetchBlob","imgURLFromBase64String","newimgBlob","blob","pinnedBG","resp","pinned","ipfsHash","IpfsHash","trait_index","loop_and_pin_background","newBG","Math","floor","random","trait_type","value","combo","collectionName","layersArray","bgArray","loop_and_pin","collName","emptyComboArray","newlayers","reverse","pin","base64ToBlob","pinnedItem","layer_index","loop_and_pin_layers","map_traits","ego","len","traitTypes","isPriority","map","x","v","mapTraitTypes","traittypes_fin","priorities","endo","traitTypesPushNA","arra1","temp","index","ctr","shuffle","allPossibleCombos","possibleCombos","getBytes","str","obj","TextEncoder","encode","byteSize","res","pinnedCombo","optns","pinUrl","rezz","pinCombo","cap","cap_it","sampleImgs","sampleArray","drawableTraits","filter","drawableTraits_length","canvas","ctx","getContext","loadedimgs","p","drawableTrait","iterlength","loop1","i","traitinfo","Image","base4path","drawImage","sampleimage","imgToBase64String","toDataURL","attributes","updateDB","collname","thesamples","combo_ipfs_hash","payload","nftcontract","r","text","samples","drawimage","getSamplesAndClearComboData","formDataHandler","eleID","contractZone","setAttribute","GenLayers","Layerz","mouseUpFired","layerData","initPositions","elebox","newindex","useEffect","call","getElementsByClassName","element","getBoundingClientRect","top","scrollTop","layer_move_initializer","event","layerIndex","type","div","divWitdh","clientWidth","popup","indexOfSelectedItem","arrayOfEles","centerofdiv","clientHeight","style","touches","clientY","onmousemove","ontouchmove","layer_move_ender","initIndex","tempArray","setTrait","parentIndx","preventDefault","delTrait","indxx","LayerImagesBox","boxcont","traitLength","imgsrc","traitName","className","alt","id","placeholder","onClick","onChange","onMouseDown","onMouseUp","onTouchStart","onTouchCancel","onTouchEnd","me","backgroundColor","expandbox","float","borderRadius","left","boxSizing","margin","borderLeft","borderTop","right","layerlen","layerindx","TheBGs","setBGTrait","bgtraitIndex","delBG","bglength","bgstack","conDetails","ThaSamples","sampleLen","imgurl","mainBox","submitButton","coll_Name_Box","ContractBox","boxxcont","the_contracts","contractLen","showContract","daindex","contractDetailsBox","cursor","activeContractIndex","divClass","textType","href","rel","CollNameBox","class","func","addLayerIMG","pissoffbox","htmlFor","fontSize","click","multiple","hidden","padding","display","toggle","prioritizeLayer","renameBox","newLayerName","typeClass","typeId","MainContainer"],"sourceRoot":""}