{"version":3,"file":"static/js/912.740e0798.chunk.js","mappings":"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","sources":["components/codeEditor/codeEditor.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { hideLoading, showLoading } from \"../ui/loading\";\r\nimport { BoxTitle } from '../form/formcomps';\r\nimport { MsgContext } from \"../../context/msgcontext\";\r\nimport { StateContext } from '../../context/StateContext';\r\nimport \"./codeEditor.css\";\r\n\r\n\r\nconst defaultErrorStack = { messages:[], formdata:[], substate:null };\r\n\r\nconst setNumbers = async ( e, inputText )=>{\r\n    document.getElementById(\"solidityEditor\").value = inputText;\r\n    let numberOfLines = inputText.split('\\n').length;\r\n    let newlen;\r\n\r\n    if ( numberOfLines > document.getElementById('lineNumbers')?.childElementCount && document.getElementById('lineNumbers')?.childElementCount !== 0 ){\r\n        newlen = document.getElementById('lineNumbers')?.childElementCount;\r\n        for ( newlen; newlen < numberOfLines; newlen++ ) {\r\n            document.getElementById('lineNumbers').innerHTML += `<span></span>`;\r\n        }\r\n    }\r\n\r\n    if( numberOfLines < document.getElementById('lineNumbers')?.childElementCount ){\r\n        newlen = document.getElementById('lineNumbers')?.childElementCount - numberOfLines;\r\n        // for ( numberOfLines; numberOfLines < newlen; numberOfLines++ ) {\r\n        let indx = 0;\r\n        while ( indx < newlen ) {\r\n            document.getElementById('lineNumbers').childNodes[numberOfLines].remove();\r\n            indx++;\r\n        }\r\n    }\r\n\r\n    if ( document.getElementById('lineNumbers')?.childElementCount === 0 ){\r\n        let indx = 0;\r\n        while ( indx < numberOfLines ) {\r\n            document.getElementById('lineNumbers').innerHTML += `<span></span>`;\r\n            indx++;\r\n        }\r\n    }\r\n\r\n    document.getElementById(\"solidityEditor\").style.height = (document.getElementById('lineNumbers').clientHeight+20)+\"px\";\r\n    return hideLoading();\r\n}\r\n\r\nfunction CodeEditor({ data, substate }){\r\n    const { msgStacks, setMsgStacks } = useContext( MsgContext );\r\n    const { state, setState } = useContext( StateContext );\r\n    console.log(`state: ${JSON.stringify(state)}`)\r\n    let activecontract;\r\n\r\n\r\n    // ************************************************************************************************************************\r\n    // if( !state.formVals ){\r\n    //     setState((prev)=>({...prev, formVals: {...prev.formVals, contract:\"\", addContract:{...prev.formVals.addContract, active:false }}}))\r\n    // }\r\n    // ************************************************************************************************************************\r\n\r\n    useEffect( ()=>{\r\n        if ( state.currsubState === \"RandomGenerator-LayerOptions-Write-Contract\" ){\r\n            showLoading();\r\n            \r\n            if( !state.formVals ){\r\n                setState((prev)=>({...prev, formVals: {...prev.formVals, contract:\"\", addContract: { active:true, overwrite:true } }}))\r\n            }\r\n\r\n            document.addEventListener('paste', (e)=>{\r\n                if ( !state.formVals.pasteDisclaimer ) {\r\n                    if ( e.target.getAttribute(\"class\") === \"solidityEditor\" ){\r\n                        let paste = ( e.clipboardData || window.clipboardData || document.clipboardData ).getData( 'text' );\r\n                        e.target.focus();\r\n                        const start = e.target.selectionStart;\r\n                        const end = e.target.selectionEnd;\r\n                        const textAreaText = e.target.value;\r\n                        const firstPart = textAreaText.substring( 0, start );\r\n                        const secondPart = textAreaText.substring( end, textAreaText.length );\r\n                        state.formVals.pasteDisclaimer = true;\r\n                        setState((prev)=>({...prev, formVals:{...prev.formVals,contract:firstPart+paste+secondPart }, modal:{ header:\"WARNING!\", message:`You just pasted code into the editor please ensure you understand the code before deploying to prevent yourself from being comprimised/scammed!`, func:()=>{ return setState( (prev)=>({...prev, modal:null, formVals:{...prev.formVals, pasteDisclaimer:true} } ) ); } } } ))\r\n                        return hideLoading();\r\n                    }\r\n                }\r\n            });\r\n\r\n            if ( state.formVals.addContract?.active === true ) {\r\n                document.getElementById(\"addSolFile\").click();\r\n            }\r\n            \r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n            activecontract = state.formVals.contract[ state.formVals.activeContractIndex ]?.contract;\r\n            setNumbers( null, activecontract );\r\n            return hideLoading();\r\n        }\r\n        return;\r\n    },[ state.formVals, state.modal, setState, state.currsubState ])\r\n    \r\n    const newline = activecontract?.split('\\n');\r\n    const newlineLen = newline?.length;\r\n    let boxxcont = [], bbx = [];\r\n    \r\n    for ( let indx = 0; indx < newlineLen; indx++){\r\n        if( newline[ indx ].includes('contract ') && newline[ indx ].split('contract ')[0].trim() === \"\"  && state.formVals.activeContractIndex === 0 ){\r\n            console.log(`contract name: ${newline[ indx ].split('contract ')[1].trim().split(\" \")[0]}`);\r\n        }\r\n\r\n        boxxcont.push(<span key={indx}></span>);\r\n    }\r\n\r\n    const delContract =  (e, ind)=>{\r\n        showLoading();\r\n        state.formVals.contract.splice(ind, 1);\r\n        const mainContractLineSplit = state.formVals.contract[ 0 ]?.contract?.split('\\n');\r\n        const mainContractLineSplitLen = mainContractLineSplit?.length;\r\n        let indx = 0;\r\n\r\n        while ( indx < mainContractLineSplitLen ){\r\n            if( mainContractLineSplit[ indx ].includes(`import \"./import_${ind}.sol\";`) ){\r\n                mainContractLineSplit.splice( (indx), 1 );\r\n                break;\r\n            }\r\n\r\n            if( mainContractLineSplit[ indx ].includes('contract ') ){\r\n                break;\r\n            }\r\n\r\n            indx++\r\n        }\r\n\r\n        state.formVals.contract[ 0 ].contract = mainContractLineSplit.join('\\n');\r\n        return setState((prev)=>({...prev, formVals:{...prev.formVals, activeContractIndex: 0}}));\r\n    };\r\n\r\n    state.formVals?.contract?.forEach((element, ind) => {\r\n        let delbttn = (ind !== 0)?<button style={{ backgroundColor:\"white\", fontSize:\"10px\", height:\"20px\", width:\"20px\", borderRadius:\"10px\", padding:\"2px\", zIndex:\"5\", fontWeight:\"700\", cursor:\"pointer\", margin:\"0px 0px auto -20px\" }} onClick={(e)=>delContract(e, ind) } >X</button>:\"\";\r\n        bbx.push(<><div key={ind} className='solTabs' style={{padding:\"9px 0px\", backgroundColor:( ind === state.formVals.activeContractIndex )?\"rgb(24, 24, 25)\":\"transparent\"}} onClick={(e)=>setState((prev)=>({...prev, formVals:{...prev.formVals, activeContractIndex: ind}}))}><span>{element.name}</span></div>{delbttn}</>)\r\n    });\r\n    \r\n    const handleContractUpload = (e)=>{\r\n        setState((prev)=>({\r\n            ...prev,\r\n            modal:{\r\n                ...prev.modal,\r\n                func:()=>{\r\n                    return setState((prev)=>({\r\n                        ...prev,formVals:{\r\n                            ...prev.formVals,\r\n                            addContract:null \r\n                        },\r\n                        modal:null\r\n                    }))\r\n                },\r\n                header:\"OVERWRITE?\",\r\n                message:\"Would you like to overwrite current active contract? If so click yes, otherwise click no.\",\r\n                options:[\r\n                    {\r\n                        name:\"YES\",\r\n                        func:()=>{\r\n                            return setState((prev)=>({\r\n                                ...prev,\r\n                                modal: null,\r\n                                formVals:{\r\n                                    ...prev.formVals,\r\n                                    addContract: { active:true, overwrite:true }\r\n                                }\r\n                            }))\r\n                        } \r\n                    },\r\n                    {\r\n                        name:\"NO\",\r\n                        func:()=>{\r\n                            return setState((prev)=>({\r\n                                ...prev,\r\n                                modal: null,\r\n                                formVals: {\r\n                                    ...prev.formVals,\r\n                                    addContract: { active:true, overwrite:false }\r\n                                }\r\n                            }))\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }))\r\n    };\r\n\r\n    const addNewContract = (e)=>{\r\n        showLoading();\r\n        const readr = new FileReader();\r\n        readr.addEventListener(\"load\", (ee)=>{\r\n            const text = (ee.target.result);\r\n            let contract;\r\n            let activeindex = 0;\r\n            if( state.formVals.addContract?.overwrite === false ){\r\n                activeindex = state.formVals.contract.length;\r\n                contract = state.formVals.contract;\r\n                contract.push({name: `import_${activeindex}`, contract:ee.target.result});\r\n\r\n                const mainContractLineSplit = state.formVals.contract[ 0 ]?.contract?.split('\\n');\r\n                const mainContractLineSplitLen = mainContractLineSplit?.length;\r\n                let indx = 0;\r\n\r\n                while ( indx < mainContractLineSplitLen ){\r\n                    if( mainContractLineSplit[ indx ].includes('pragma solidity ') ){\r\n                        // console.log(`------- ${indx}) line: '${newline[ indx ]}'`);\r\n                        mainContractLineSplit.splice( (indx+1), 0, `import \"./import_${activeindex}.sol\";` );\r\n                        break;\r\n                    }\r\n                    indx++\r\n                }\r\n                // mainContractLineSplit.join('\\r\\n');\r\n                state.formVals.contract[ 0 ].contract = mainContractLineSplit.join('\\n');\r\n                return setState((prev)=>({...prev, modal:null, formVals:{...prev.formVals, contract, activeContractIndex: activeindex, addContract:null }}));\r\n            }\r\n\r\n            const mainContractLineSplit = text.split('\\n');\r\n            const mainContractLineSplitLen = mainContractLineSplit?.length;\r\n\r\n            if( state.formVals.activeContractIndex === 0 ) {\r\n                \r\n                let indx = 0, pragma = false, pragmaIndex = null, existingImports = [], existingImportsLength = state.formVals.contract.length;\r\n                if ( existingImportsLength > 1 ){\r\n                    for(let daind = 1; daind < existingImportsLength; daind++ ){\r\n                        existingImports.push(`import \"./import_${daind}.sol\";`)\r\n                    }\r\n                }\r\n    \r\n                while ( indx < mainContractLineSplitLen ){\r\n                    if ( mainContractLineSplit[ indx ].includes('import ') && mainContractLineSplit[ indx ].split('import ')[0].trim() === \"\"){\r\n                        mainContractLineSplit.splice( (indx), 1 );\r\n                    }\r\n\r\n                    if( pragma === true && !mainContractLineSplit[ indx ].includes('import ') && mainContractLineSplit[ indx ].trim()[0] !== \"/\" && mainContractLineSplit[ indx ].trim()[0] !== undefined ){\r\n                        mainContractLineSplit.splice((pragmaIndex+1), 0, ...existingImports )\r\n                        break;\r\n                    }\r\n\r\n                    if( mainContractLineSplit[ indx ].includes('pragma ') && mainContractLineSplit[ indx ].split('pragma ')[0].trim() === \"\"){\r\n                        pragma = true;\r\n                        pragmaIndex = indx;\r\n                    }\r\n\r\n                    indx++\r\n                }\r\n            }\r\n            \r\n            contract = state.formVals.contract;\r\n            contract[state.formVals.activeContractIndex].contract = (state.formVals.activeContractIndex === 0)?mainContractLineSplit.join('\\n'):text;\r\n            setState((prev)=>({...prev, modal:null, formVals:{...prev.formVals, contract, addContract:{...prev.formVals.addContract, active:false } }}));\r\n            return hideLoading();\r\n        });\r\n        readr.readAsText( e.target.files[0] ); \r\n    };\r\n\r\n    let numberSideBar = <div className=\"lineNumbers\" id=\"lineNumbers\" >{boxxcont}</div>\r\n    return (\r\n        <div className='LayerUpldBox' style={{padding:\"20px\"}}>\r\n            <button className='closeBox' onClick={()=> setState( (prev)=>({...prev, state:\"home\", data:{ coll_name : null, coll_symbol : null, layers:[] }, currsubState:null, temp_index: null }) ) }>X</button>\r\n            {/* <BoxTitle data={{divClass:\"contractEditorTitle\", textType:'h2', text:'NFT Contract ( ERC721 )'}}/> */}\r\n            <BoxTitle data={{divClass:\"contractEditorTitle\", textType:'span', text:'Edit Resume Below'}}/>\r\n            <div className=\"contractEditorToolBar\" >\r\n                <div className=\"toolBarElement\" onClick={(e)=>{let contract = state.formVals.contract; contract[ state.formVals.activeContractIndex ].contract = document.getElementById(\"solidityEditor\").value; setState((prev)=>({...prev, data:{...prev.data, contracts:contract}, formVals:{...prev.formVals, contract, } }) )}}>\r\n                    <img src='./save_icon.svg' alt='' />\r\n                    <span> save </span>\r\n                </div>\r\n                <label className=\"toolBarElement\" id=\"addSolFile\" htmlFor='contractUpld' onClick={(e)=>( state.formVals.addContract?.active )?'':handleContractUpload()}>\r\n                    <input type={\"file\"} name=\"contractUpld\" id=\"contractUpld\" onChange={(e)=> addNewContract(e) } hidden/>\r\n                    <h2>+</h2>\r\n                    <span> New Resume </span>\r\n                </label>\r\n            </div>\r\n            <div className='solTabsWrapper'>{bbx}</div>\r\n            <div className=\"editor\" id=\"editor\" >\r\n                {numberSideBar}\r\n                <textarea className='solidityEditor' id='solidityEditor' onKeyUp={(e)=>{ if( e.key === \"Enter\" || e.key === \"Backspace\" || e.key === \"Delete\" || e.ctrlKey ){ return setNumbers( e, e.target.value ) }}} onChange={(e)=>state.formVals.contract[ state.formVals.activeContractIndex ].contract = e.target.value } />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CodeEditor;"],"names":["setNumbers","async","e","inputText","document","getElementById","value","newlen","numberOfLines","split","length","childElementCount","innerHTML","indx","childNodes","remove","style","height","clientHeight","hideLoading","data","substate","msgStacks","setMsgStacks","useContext","MsgContext","state","setState","StateContext","activecontract","console","log","JSON","stringify","useEffect","currsubState","showLoading","formVals","prev","contract","addContract","active","overwrite","addEventListener","pasteDisclaimer","target","getAttribute","paste","clipboardData","window","getData","focus","start","selectionStart","end","selectionEnd","textAreaText","firstPart","substring","secondPart","modal","header","message","func","click","activeContractIndex","newline","newlineLen","boxxcont","bbx","includes","trim","push","forEach","element","ind","delbttn","backgroundColor","fontSize","width","borderRadius","padding","zIndex","fontWeight","cursor","margin","onClick","splice","mainContractLineSplit","mainContractLineSplitLen","join","delContract","className","name","numberSideBar","id","coll_name","coll_symbol","layers","temp_index","divClass","textType","text","contracts","src","alt","htmlFor","options","type","onChange","readr","FileReader","ee","result","activeindex","pragma","pragmaIndex","existingImports","existingImportsLength","daind","undefined","readAsText","files","addNewContract","hidden","onKeyUp","key","ctrlKey"],"sourceRoot":""}