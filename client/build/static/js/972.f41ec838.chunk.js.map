{"version":3,"file":"static/js/972.f41ec838.chunk.js","mappings":"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","sources":["helpers/imgdatahelpers.js","helpers/generatorhelpers.js","helpers/domHandlers.js","pages/generator.js"],"sourcesContent":["import { imgSignature } from \"./imgSignatures\";\r\n\r\nconst validateIMGtype = async ( demFiles, childClassName, parentIdName, wrongFiles, callback) => {\r\n    const parentEle = document.getElementById(parentIdName);\r\n    parentEle.innerHTML = \"\";\r\n    const demlen = demFiles.length;\r\n    console.log(`files length: ${demlen}`);\r\n    if ( demlen === 0 ){\r\n        return callback([{id:null, value: null, msg:\"Upload a file.\"}, wrongFiles]);\r\n    }\r\n    \r\n    let loadedImgs = 0;\r\n\r\n    const signatures = ['89504e47'.toLowerCase(), 'FFD8FFE0'.toLowerCase(), 'FFD8FFE1'.toLowerCase(), 'FFD8FFE2'.toLowerCase(), 'FFD8FFE8'.toLowerCase(), 'FFD8FFDB'.toLowerCase(), 'FFD8FFEE'.toLowerCase() ];\r\n\r\n    for ( let n = 0; n < demlen ; n++ ) {\r\n        let dafile = demFiles[n];\r\n        // eslint-disable-next-line no-loop-func\r\n        imgSignature( dafile, (fileSignature)=>{\r\n            console.log(`file sig: ${fileSignature}`);\r\n            // check if signature matches the signatures of jpgs and png file\r\n            if( signatures.includes(fileSignature) ){\r\n                const img = document.createElement(\"img\");\r\n\r\n                img.addEventListener( 'load', ()=>{\r\n                    if( img.width <= 2000  && img.height <= 2000 ){\r\n                        loadedImgs++;\r\n                        const para = document.createElement(\"div\");\r\n                        para.appendChild(img);\r\n                        para.classList.add((childClassName)?childClassName:'LayerUpldContentBox')\r\n                        parentEle.appendChild(para);\r\n                    }else{\r\n                        img.remove();\r\n                        wrongFiles.push(n);\r\n                    }\r\n\r\n                    if ( demlen === ( loadedImgs + wrongFiles.length ) ){\r\n                        return callback([null, wrongFiles]);\r\n                    }\r\n                });\r\n                \r\n                img.src = URL.createObjectURL(dafile);\r\n            }else{\r\n                wrongFiles.push(n);\r\n                if(demFiles.length === wrongFiles.length){\r\n                    return callback([{id:null, value: null, msg:\"Unsupported file types! JPG, JPEG, PNG only.\"}, wrongFiles]);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport { validateIMGtype }","\r\nconst shuffle = (arra1)=> {\r\n    var ctr = arra1.length, temp, index;\r\n    // While there are elements in the array\r\n    while (ctr > 0) {\r\n        // Pick a random index\r\n        index = Math.floor(Math.random() * ctr);\r\n        // Decrease ctr by 1\r\n        ctr--;\r\n        // And swap the last element with it\r\n        temp = arra1[ctr];\r\n        arra1[ctr] = arra1[index];\r\n        arra1[index] = temp;\r\n    }\r\n    return arra1;\r\n}\r\n\r\nconst get_all_possible_array_combos =  async ( input, output, n, da_path )=>{\r\n    da_path = (da_path === null || da_path === undefined)? []: da_path;\r\n    n = (n === null || n === undefined)? 0:n;\r\n    if(n < input.length){\r\n        const current_item = input[n]; let gogo = 0;\r\n        while(gogo < current_item.length){\r\n            let val = current_item[gogo];\r\n            da_path.push(val);\r\n            get_all_possible_array_combos(input, output, n+1, da_path);\r\n            da_path.pop();\r\n            gogo++;\r\n        }\r\n    }else{\r\n        output.push(da_path.slice());\r\n    }\r\n};\r\n\r\nexport { shuffle, get_all_possible_array_combos };","const expandABox  = ( e, expandee, expandedClass, contractedClass )=>{\r\n    // element that calls the click event should be a button or element containing inner text\r\n    let ele = e.target;\r\n\r\n    // Check if div to be expanded is already expanded via a css class\r\n    // If it is expanded then swap class for a contracted css class ( which in this case is overflowY set to 'hidden' )\r\n    if ( expandee.classList.contains( expandedClass ) ) {\r\n        expandee.classList.remove( expandedClass );\r\n        expandee.classList.add( contractedClass ); // 'contract-container');\r\n        ele.innerText = \"..expand..\"\r\n    }else{\r\n        // If element contains contracted class instead then toggle it and replace it for expanded class\r\n        expandee.classList.add( expandedClass );\r\n        expandee.classList.remove( contractedClass );\r\n        ele.innerText = \"..less..\"\r\n    }\r\n};\r\n\r\nconst divSwapper = (node1, node2)=>{\r\n    node1.parentNode.replaceChild(node1, node2);\r\n    node1.parentNode.insertBefore(node2, node1); \r\n}\r\n\r\nexport { expandABox, divSwapper }","import React, { useContext, useState, useEffect, useMemo } from 'react'\r\nimport { StateContext } from '../context/StateContext';\r\nimport { imgToBase64String, imgURLFromBase64String, base64ToBlob } from \"../helpers/imgBLOBto64\";\r\nimport { ContractFactory } from \"ethers\";\r\nimport { connectToChain, signer,  currentNetwork, blockchainNetworks, currentAddress } from \"../helpers/web3Helpers\";\r\nimport { validateIMGtype } from \"../helpers/imgdatahelpers\";\r\nimport { isAplhaNumeric, stringLengthRange } from \"../helpers/stringValidator\";\r\nimport { shuffle, get_all_possible_array_combos } from \"../helpers/generatorhelpers\";\r\nimport { expandABox, divSwapper } from \"../helpers/domHandlers\";\r\nimport yaadcontract from '../contracts/yaad.json';\r\nimport nftcontract from '../contracts/the_yaad.sol';\r\nimport { DaInput, BoxTitle, Buttonz } from '../components/form/formcomps';\r\nimport { LoadingBox, showLoading, hideLoading } from \"../components/ui/loading\";\r\nimport { MsgContext } from \"../context/msgcontext\";\r\nimport { Link } from 'react-router-dom';\r\nimport  './generator.css'\r\n\r\nfunction RandomGenerator (props){\r\n    const pumpum = window.location.host;\r\n    let baseServerUri = ( pumpum  === \"localhost:3000\")?'api/':'https://yaadlabs.herokuapp.com/api/';\r\n    const homeState = { state:\"home\", data:{ coll_name : null, coll_symbol : null, layers:[] }, currsubState:null, temp_index: null, baseServerUri: baseServerUri,};\r\n    const defaultErrorStack = { intervalId:null, formdata:[], substate:null };\r\n    const { msgStacks, setMsgStacks } = useContext( MsgContext );\r\n    const { state, setState } = useContext( StateContext );\r\n    useEffect(()=>{\r\n        if ( state.data.layers?.length > 0 ){\r\n            state.data.possibleCombos = 1;\r\n            state.data.layers.forEach((val, indx, arr)=>{\r\n                state.data.possibleCombos *= ( val.priority )?(val.traits.length):(val.traits.length+1) \r\n            });\r\n\r\n            console.log(`possible combos: ${state.data.possibleCombos}`);\r\n        }\r\n    }, [ state.data.layers?.length ] )\r\n\r\n    let da_files;\r\n    var wrongFiles = [];\r\n    state.data.activeContract = 0;\r\n\r\n    const closeLayerOptionsBox = (e)=>{\r\n        switch (state.currsubState) {\r\n            case \"RandomGenerator\":\r\n                localStorage.clear();\r\n                setState((prev)=>({...prev, state:\"\", data:\"\"}));\r\n                break;\r\n            default:\r\n                setState((prev)=>({...prev, currsubState: \"RandomGenerator\" } ));\r\n                break;\r\n        }\r\n    };\r\n\r\n    const deployContract = async (e)=>{\r\n        showLoading(e);\r\n        \r\n        if(!state.data.coll_name || state.data.coll_name.trim() === \"\"){\r\n            return setMsgStacks( (prev)=>({...prev, messages:[ \"Enter a project/NFT name!\" ], substate:state.currsubState }) );\r\n        }\r\n        \r\n        if(!state.data.coll_symbol || state.data.coll_symbol.trim() === \"\"){\r\n            return setMsgStacks( (prev)=>({...prev, messages:[ \"Enter a symbol!\" ], substate:state.currsubState }) );\r\n        }\r\n\r\n        try {\r\n            fetch(nftcontract).then( r=>r.text()).then( async (contract)=>{\r\n                // console.log(`contract: ${text}`)\r\n                let contractOptions = {\r\n                    language: \"Solidity\", \r\n                    sources: {\r\n                    'yaad.sol': {\r\n                        content: contract\r\n                    }\r\n                    },\r\n                    settings:{\r\n                    outputSelection:{\r\n                        '*': {\r\n                        '*':['*']\r\n                        }\r\n                    }\r\n                    }\r\n                };\r\n\r\n                const connected = await connectToChain( blockchainNetworks[6] );\r\n                let contractData = new FormData();\r\n                if( connected === false ) { hideLoading(); return false; }\r\n                contractData.append('contractJSON', JSON.stringify(contractOptions));\r\n                const compiledContract = await fetch( state.baseServerUri+\"compileContract\", { method:'POST',body: contractData} ).then((theresponse)=>theresponse.json()).then((compiled)=>compiled);\r\n                const abi = compiledContract.abi;\r\n                const bytecode = compiledContract.bytecode;\r\n                const factory = new ContractFactory(abi, bytecode, signer);\r\n                const nftToken = await factory.deploy(state.data.coll_name, state.data.coll_symbol).then((tx)=>tx).catch((e)=>e);\r\n                console.log(`nft token: ${JSON.stringify(nftToken)}`);\r\n                contractData = null;\r\n                if( nftToken.code ){\r\n                    hideLoading(e);\r\n                    return;\r\n                }\r\n\r\n                // {\"name\":\"ropsten\",\"chainId\":3,\"ensAddress\":\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"}\r\n                if(nftToken.address){\r\n                    hideLoading(e);\r\n                    return setState( (prev)=>( { ...prev, currsubState: \"RandomGenerator-ContractDeployed\", data:{...prev.data, contract_address: nftToken.address, contract_link: `https://${currentNetwork.name}.etherscan.io/address/${nftToken.address}`} } ));\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(`error: ${error}`)\r\n            return error;\r\n        }\r\n    };\r\n\r\n    const handleAddBGLayer = (e)=>{\r\n        return setState((prev)=>({...prev, currsubState:\"RandomGenerator-LayerOptions-BG-Upld\" }));\r\n    };\r\n\r\n    const handleAddLayer = (e)=>{\r\n        showLoading();\r\n        const elementID = e.target.getAttribute('id');\r\n        let eleIndex = [].indexOf.call(document.getElementsByClassName(e.target.getAttribute('class')), e.target);\r\n        \r\n        switch (elementID) {\r\n            case null:\r\n                setState((prev)=>({...prev, temp_index: eleIndex, currsubState: \"RandomGenerator-LayerOptions-AddLayer\" }));\r\n                break;\r\n            case \"selectBG\":\r\n                setState((prev)=>({...prev, currsubState: \"RandomGenerator-LayerOptions-BG-Upld\" }));\r\n                break;\r\n            default:\r\n                setState((prev)=>({...prev, currsubState: \"RandomGenerator-LayerOptions-AddLayer\" }));\r\n                break;\r\n        }\r\n    }\r\n    \r\n    const handleAddLayerUpld = async (e)=>{\r\n        showLoading(e);\r\n        let layerName, bgElement = false;\r\n        \r\n        if( e.target.getAttribute('type') === 'file' && ( e.target.getAttribute('name') === 'multi_asset' || e.target.getAttribute('name') === 'bg_asset' ) ){\r\n            // if( da_files.length > 0 ) showLoading()\r\n            const currentFiles = ( e.target.files.length < 1 && da_files.length > 0 )?da_files:e.target.files;\r\n            if ( currentFiles.length < 1 ) { e.target.classList.remove('inactive'); hideLoading(); return; }\r\n\r\n            await validateIMGtype( currentFiles, 'LayerUpldContentBox', 'layerContentBox', [], ([err, wrongfiles])=>{\r\n                wrongFiles = wrongfiles;\r\n\r\n                if( err !== null || ( wrongfiles.length === currentFiles.length )) {\r\n                    hideLoading(e);\r\n                    return setMsgStacks((prev)=>({...prev, substate: state.currsubState, formdata:(err !== null)?[err]:[{id: \"LayerUpldLabel\", value: \"\", msg:\"Images too large Max height: 2000px, max width: 2000px.\"}] }));\r\n                }\r\n\r\n                if( document.getElementById('bg_upld') ) document.getElementById('bg_upld').textContent = ( currentFiles.length > 0)?'NEXT':'No Background';\r\n                \r\n                da_files = ( currentFiles.length === 0 )?[]:currentFiles;\r\n                hideLoading(e);\r\n            });\r\n            \r\n            return;\r\n        }\r\n        \r\n        if( e.target.getAttribute(\"id\") !== \"bg_upld\" ){\r\n            layerName = ( state.temp_index === null )? state.formVals:document.getElementById(\"LayerName\").value.trim();\r\n            let formdata = [];\r\n            if ( !layerName ){ formdata.push({id: \"LayerName\", value: \"\", msg:\"Enter a layer name!\"}) }\r\n            if ( da_files?.length < 1 || !da_files ){ formdata.push({id: null, value: null, msg:\"Click the '+' to upload files!\" }) }\r\n            if ( formdata?.length > 0 ) { hideLoading(e); return setMsgStacks((prev)=>({...prev, substate: state.currsubState, formdata, } ) ) }\r\n        }\r\n        showLoading(e);\r\n        \r\n        bgElement=(e.target.getAttribute(\"id\") === \"bg_upld\")&& true;\r\n\r\n        if(( da_files === undefined || da_files.length === 0 || da_files.length === \"\") && e.target.getAttribute(\"id\") === \"bg_upld\"){\r\n            state.data.background = ( !state.data.background || state.data.background?.length === 0 )?[]:state.data.background;\r\n            return closeLayerOptionsBox();\r\n        }\r\n        \r\n        let exists = false, indxx = null;\r\n        state.data.layers?.forEach((val,indx, arr)=>{\r\n            if( val.name === layerName ){\r\n                exists = true;\r\n                indxx = indx;\r\n            }\r\n        })\r\n\r\n        let file_len = da_files.length, last_index = file_len-1, loadedindx = 0;\r\n        const filesToLoadLen = da_files.length - wrongFiles.length;\r\n        \r\n        loop1:\r\n        for ( let n = 0; n < file_len; n++ ){\r\n            loop2:\r\n            for( const p of wrongFiles ){\r\n                if( p  === n ) { continue loop1; }\r\n            }\r\n            \r\n            let img = new Image();\r\n            // eslint-disable-next-line no-loop-func\r\n            img.addEventListener(\"load\", async ()=>{\r\n                loadedindx++;\r\n                const imgURL = await imgToBase64String(img);\r\n                console.log(`first character of base 64 string:: ${imgURL[0]}`)\r\n                let imgEXT = (imgURL[0] === '/' )?\"jpg\":\"png\";\r\n                if(bgElement){\r\n                    if( Array.isArray(state.data.background) ){\r\n                        state.data.background.push({trait_name: n, path: imgURL, ext: imgEXT });\r\n                    }else{\r\n                        state.data.background = [{trait_name: n, path: imgURL, ext: imgEXT }]\r\n                    }\r\n                }else{\r\n                    if(exists === true){\r\n                        await state.data.layers[indxx].traits.push({ trait_name: n, path: imgURL, ext: imgEXT });\r\n                    }else{\r\n                        state.data.layers.push({ name: layerName, traits: [{ trait_name: n, path: imgURL, ext: imgEXT }] });\r\n                        exists = true;\r\n                        indxx = state.data.layers.length-1;\r\n                    }\r\n                }\r\n                \r\n                if( loadedindx + wrongFiles.length === file_len ){\r\n                    return closeLayerOptionsBox();\r\n                }\r\n            })\r\n\r\n            img.src = URL.createObjectURL(da_files[n]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    const delLayer = async (e)=>{\r\n        if(state.currsubState === \"RandomGenerator-LayerOptions-Edit-Layer\"){\r\n            return setState((prev)=>( {...prev, currsubState: \"RandomGenerator-LayerOptions-Del-Layer\", previous: prev.currsubState} ));\r\n        }else{\r\n            showLoading();\r\n            if( state.temp_index !== null ){\r\n                state.data.layers.splice( state.temp_index, 1);\r\n                hideLoading();\r\n                return closeLayerOptionsBox();\r\n            }\r\n            return closeLayerOptionsBox();\r\n        }\r\n    }\r\n    \r\n    const renameLayer = (e)=>{\r\n        showLoading(e);\r\n        const the_value = state.formVals;\r\n        if(state.currsubState === \"RandomGenerator-LayerOptions-Edit-Layer\"){\r\n            return setState((prev)=>({...prev, currsubState: \"RandomGenerator-LayerOptions-Rename_Layer\" }));\r\n        }else{\r\n            let alreadyExists = false;\r\n            if ( !isAplhaNumeric( the_value, [ \"_\", \" \",\".\" ] ) || !stringLengthRange( the_value, 1, 50 ) ) { hideLoading(e); return; }\r\n            state.data.layers.forEach((val, indx, arr)=>{\r\n                if ( val.name === the_value.trim() ){\r\n                    alreadyExists = true;\r\n                }\r\n            });\r\n\r\n            if ( alreadyExists === true ) {\r\n                hideLoading(e);\r\n                return setMsgStacks((prev)=>({...prev, formdata:[{id:null, msg:\"Layer name is already in use, Enter another name.\"}]}));\r\n            }\r\n\r\n            state.data.layers[ state.temp_index ].name = state.formVals;\r\n            // ele.setAttribute('placeholder', state.formVals);\r\n            return closeLayerOptionsBox();\r\n        }\r\n    };\r\n    \r\n    const prioritizeLayer = async (e)=>{\r\n        const ele = e.target;\r\n        if(state.temp_index){\r\n            console.log(`prioritizezd! \\n temp index ${state.temp_index}, isPriority: ${JSON.stringify(state.data.layers[ state.temp_index ])}`);\r\n            let isPriority = state.data.layers[ state.temp_index ].priority;\r\n            console.log(`prioritizezd! \\n temp index ${state.temp_index}, isPriority: ${isPriority}`);\r\n            let priorityLayerBttn = document.getElementById(\"priorityLayerBttn\");\r\n            let priorityLayerOption = document.getElementById(\"makepriorityLayerOption\");\r\n            \r\n            state.data.layers[ state.temp_index ].priority = !state.data.layers[ state.temp_index ].priority;\r\n            priorityLayerBttn.classList.toggle(\"disablepriorityLayerBttn\");\r\n            priorityLayerBttn.classList.toggle(\"makepriorityLayerBttn\");\r\n            priorityLayerOption.classList.toggle('ispriorityLayerOption');\r\n            priorityLayerOption.classList.toggle('notpriorityLayerOption');\r\n            priorityLayerOption.children[0].innerText = ( isPriority === true )?\"NO\":\"YES\";\r\n        }\r\n    };\r\n\r\n    const expandbox = (e)=>{\r\n        showLoading();\r\n        const ele = e.target;\r\n        const indx = [].indexOf.call(document.getElementsByClassName(ele.getAttribute('class')), ele);\r\n        let me = 0;\r\n        while( me < document.getElementsByClassName('detail-edit-trait-box' ).length){\r\n            if(me !== indx){\r\n                if(!document.getElementsByClassName('detail-edit-trait-box')[me].classList.contains('inactive')){\r\n                    document.getElementsByClassName('detail-edit-trait-box')[me].classList.add('inactive');\r\n                }\r\n                if(document.getElementsByClassName('generatorRightPanelLayerBox-title-img')[me].classList.contains('rotateExpander')){\r\n                    document.getElementsByClassName('generatorRightPanelLayerBox-title-img')[me].classList.remove('rotateExpander');\r\n                }\r\n            }\r\n            me++;\r\n        }\r\n\r\n        if(document.getElementsByClassName('detail-edit-trait-box')[indx].classList.contains('inactive')){\r\n            document.getElementsByClassName('generatorRightPanelLayerBox-title-img')[indx].classList.add('rotateExpander');\r\n            document.getElementsByClassName('detail-edit-trait-box')[indx].classList.remove('inactive');\r\n            document.getElementsByClassName(\"expander-box\")[indx].style.backgroundColor = \"rgb(129, 129, 129)\";\r\n        }else{\r\n            document.getElementsByClassName('generatorRightPanelLayerBox-title-img')[indx].classList.remove('rotateExpander');\r\n            document.getElementsByClassName('detail-edit-trait-box')[indx].classList.add('inactive');\r\n            document.getElementsByClassName(\"expander-box\")[indx].style.backgroundColor = \"rgb(190, 190, 190)\";\r\n        }\r\n\r\n        hideLoading();\r\n    };\r\n    \r\n    const generate_it = async ( e, printCap )=>{\r\n        showLoading(e);\r\n        console.log(`combo length: ${state.data.possibleCombos}`);\r\n        if ( parseInt(state.data.possibleCombos) < printCap ){ \r\n            console.log(`less than printCap;`);\r\n            hideLoading(e)\r\n            return setMsgStacks((prev)=>({...prev, formdata: [ {id: null, value: null, msg: \"Add more images to your layers or add more layer.\"} ], substate: state.currentSubState}));\r\n        }\r\n        let conntd = await connectToChain( blockchainNetworks[6] );\r\n        if( conntd === false ){ return false; }\r\n        \r\n        state.data.account = conntd;\r\n\r\n        const loop_and_pin_layers = async ( collName, layers )=>{\r\n            let emptyComboArray = []; state.data.newlayers = [];\r\n            layers.reverse();\r\n            for(let indx = 0; indx < layers.length; indx++){\r\n                emptyComboArray.push( { name: layers[indx].name, priority: layers[indx].priority, traits:[] } );\r\n                for( let pin = 0; pin < layers[indx].traits.length; pin++ ){\r\n                    const options = {\r\n                        pinataMetadata:{\r\n                        name: `${layers[indx].name}: ${layers[indx].traits[pin].trait_name}`,\r\n                        keyvalues: {\r\n                            description: `nft trait element from collection, generated by Yaad labs.`,\r\n                            name: `${layers[indx].name}: ${layers[indx].traits[pin].trait_name}`\r\n                        }\r\n                        },\r\n                        pinataOptions: {\r\n                            cidVersion: 0\r\n                        }\r\n                    };\r\n                    let assetName = conntd+\"__\"+Date.now()+\".\"+layers[indx].traits[pin].ext;\r\n                    let pin_body = new FormData();\r\n                    const newimgBlob = await base64ToBlob(imgURLFromBase64String(layers[indx].traits[pin].path));\r\n                    pin_body.append( 'img', newimgBlob, assetName );\r\n                    pin_body.append( 'the_options', JSON.stringify(options) );\r\n                    const pinnedItem = await fetch( `${state.baseServerUri}pinnit`, {method:'POST', body: pin_body} ).then((resp)=>resp.json()).then((pinned)=> pinned );\r\n                    layers[indx].traits[pin].ipfsHash = pinnedItem.IpfsHash;\r\n                    state.data.newlayers.push({ trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash })\r\n                    emptyComboArray[indx].traits.push({ trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash });\r\n                }\r\n            }\r\n            \r\n            return emptyComboArray;\r\n        };\r\n\r\n        const loop_and_pin_background = async ( backgrounds )=>{\r\n            let newBGArray = [];\r\n            for(let f = 0; f < backgrounds.length; f++){\r\n                const options = {\r\n                    pinataMetadata:{\r\n                    name: `background ${f}.`,\r\n                    keyvalues: {\r\n                        description: `nft trait element from collection, generated by Yaad labs.`,\r\n                    }\r\n                    },\r\n                    pinataOptions: {\r\n                        cidVersion: 0\r\n                    }\r\n                    \r\n                };\r\n\r\n                let assetName = conntd+\"__\"+Date.now()+\".\"+backgrounds[f].ext;\r\n                let pin_body = new FormData();\r\n                const fetchBlob = await fetch( imgURLFromBase64String( backgrounds[f].path ) );\r\n                const newimgBlob = await fetchBlob.blob();\r\n                pin_body.append( 'img', newimgBlob, assetName );\r\n                // pin_body.append( 'path',backgrounds[f].path );\r\n                pin_body.append( 'the_options', JSON.stringify(options) );\r\n                console.log(`pinning layers!`);\r\n                const pinnedBG = await fetch( `${state.baseServerUri}pinnit`, {method:'POST', body: pin_body}).then((resp)=>resp.json()).then((pinned)=>pinned);\r\n                backgrounds[f].ipfsHash = pinnedBG.IpfsHash;\r\n                newBGArray.push({ trait_name: backgrounds[f].trait_name, trait_index: f, ipfsHash: pinnedBG.IpfsHash});\r\n            }\r\n            return newBGArray;\r\n        };\r\n\r\n        const mapTraitTypes = async (comboz) => {\r\n            let len = 0; let traitTypes = []; let ego, isPriority = [];\r\n            while( len < comboz.length ){\r\n                if(comboz[len].priority){\r\n                    isPriority.push(comboz[len].name);\r\n                }\r\n                ego = comboz[len].traits.map(( x, v ) => {\r\n                    return { trait_type: comboz[len].name, trait_name: comboz[len].traits[v].trait_name, value: x.ipfsHash};\r\n                });\r\n\r\n                traitTypes.push(ego);            \r\n                len++;\r\n            }\r\n            ego = null;\r\n            return [traitTypes, isPriority];\r\n        };\r\n        \r\n        const traitTypesPushNA = async ( traitTypes, priorities ) => {\r\n            let endo = 0;\r\n            while ( endo < traitTypes.length ) {\r\n                if(!priorities.includes(traitTypes[endo][0].trait_type)){\r\n                    traitTypes[endo].push({trait_type: traitTypes[endo][0].trait_type, value: 'N/A'});\r\n                }\r\n                endo++;\r\n            }\r\n            return traitTypes\r\n        };\r\n\r\n        const insertBackground = async ( comboz, backgroundArray ) =>{\r\n            let d = 0; const backgrounds = await loop_and_pin_background( backgroundArray );\r\n            while( d < comboz.length ){\r\n                let newBG = backgrounds[ Math.floor(Math.random() * backgrounds.length) ];\r\n                comboz[d].splice(0, 0, { trait_type: \"background\", trait_name: newBG.trait_name, value: newBG.ipfsHash });\r\n                d++;\r\n            }\r\n        };\r\n\r\n        const allPossibleCombos = async ( collectionName, layersArray, bgArray )=> {\r\n            let comboz = [];\r\n            // let layerz = JSON.parse( JSON.stringify(state.data.layers) );\r\n            const loop_and_pin = await loop_and_pin_layers( collectionName, layersArray );\r\n            const map_traits = await mapTraitTypes(loop_and_pin);\r\n            const traittypes_fin = await traitTypesPushNA(map_traits[0], map_traits[1]);\r\n            \r\n            await get_all_possible_array_combos(traittypes_fin, comboz);\r\n            await shuffle(comboz);\r\n            console.log(`bg: ${JSON.stringify(bgArray)}`)\r\n            if ( bgArray?.length > 0 ) { await insertBackground( comboz, bgArray ); }\r\n            return comboz;\r\n        };\r\n\r\n        let combo =  await allPossibleCombos( state.data.coll_name, state.data.layers, state.data.background );\r\n        const possibleCombos = combo.length;\r\n        const byteSize = async (obj)=>{\r\n            let str = null;\r\n            if( typeof(obj) === 'string' ){\r\n                str = obj;\r\n            }else{\r\n                str = JSON.stringify(obj);\r\n            }\r\n            const bytes = new TextEncoder().encode(str).length;\r\n            return bytes;\r\n        };\r\n\r\n        const getBytes = await byteSize(combo).then((res)=>res);\r\n\r\n        console.log(`size of combo: ${getBytes} bytes`);\r\n\r\n        const pinCombo = async (combo, optns, pinUrl)=> {\r\n            let pin_body = new FormData();\r\n            pin_body.append('path', JSON.stringify(combo)); \r\n            pin_body.append('the_options', JSON.stringify(optns));\r\n            const pinnedCombo = await fetch( pinUrl, {method:'POST', body: pin_body}).then((rezz)=>rezz.json()).then((pinned)=>pinned);\r\n            pin_body = null;\r\n            return pinnedCombo;\r\n        }\r\n\r\n        let optns = { pinataMetadata:{ name: state.data.coll_name, keyvalues: {} }, pinataOptions: { cidVersion: 0 } };\r\n        \r\n        let pinnedCombo;\r\n        if(getBytes < 20000000){\r\n            pinnedCombo = await pinCombo( combo, optns, `${state.baseServerUri}pinnitcombo` );\r\n            console.log(`pinning combo!`)\r\n        }\r\n        else{\r\n            pinnedCombo = {IpfsHash: null};\r\n        }\r\n\r\n        const drawimage = async (traitTypes, width, height) => {\r\n            let sampleArray = []; const cap_it = traitTypes.length;\r\n            for( let v = 0; v < cap_it; v++ ){\r\n                const  drawableTraits = traitTypes[v].filter( x=> x.value !== 'N/A');\r\n                const drawableTraits_length = drawableTraits.length;\r\n                const canvas = document.createElement(\"canvas\");\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                const ctx = canvas.getContext( '2d'  );\r\n                let loadedimgs = 1;\r\n                for(let p = 0; p < drawableTraits_length; p++) {\r\n                    let  drawableTrait = drawableTraits[p];\r\n                    try {\r\n                        // newlayers =  { trait_name: layers[indx].traits[pin].trait_name, layer_index:indx, trait_index:pin, ipfsHash:pinnedItem.IpfsHash }\r\n                        let iterlength = ( ( p === 0 ) && state.data.background.length > 0 )?state.data.background.length:state.data.newlayers.length;\r\n                        loop1:\r\n                        for( let i = 0; i < iterlength; i++ ) {\r\n                            const traitinfo = ( ( p === 0 ) && state.data.background.length > 0 )?state.data.background[i]:state.data.newlayers[i];\r\n                            if( traitinfo.ipfsHash === drawableTrait.value ){\r\n                                console.log(`drawing images: ${p}`)\r\n\r\n                                // console.log(`trait ipfsHash: ${traitinfo.ipfsHash}, drawableTrait value: ${ drawableTrait.value }, name:: ${JSON.stringify(state.data.layers[traitinfo.layer_index].traits[traitinfo.trait_index].trait_name)}`);\r\n                                let img = new Image();\r\n                                let base4path = ( ( p === 0 ) && state.data.background.length > 0 )?traitinfo.path:state.data.layers[traitinfo.layer_index].traits[traitinfo.trait_index].path;\r\n                                img.src = imgURLFromBase64String(base4path);\r\n                                // eslint-disable-next-line no-loop-func\r\n                                img.addEventListener( \"load\", async ()=>{\r\n                                    // console.log(`loaded img: ${loadedimgs}, drawableTraits length: ${drawableTraits_length}, sample index: ${v}`);\r\n                                    ctx.drawImage(img, 0, 0, width, height);\r\n                                    if( loadedimgs === drawableTraits_length ){\r\n                                        const sampleimage = await imgToBase64String(null, canvas.toDataURL(\"image/png\"));\r\n                                        sampleArray.push( { name: `sample turd #${v}`, attributes: drawableTraits, path: sampleimage } );\r\n                                        const updateDB = async ( data, collname, account, thesamples, combo_ipfs_hash )=>{\r\n                                            let payload = new FormData();\r\n                                            payload.append('data', JSON.stringify(state.data));\r\n                                            payload.append('collname', state.data.coll_name);\r\n                                            payload.append('collSym', state.data.coll_symbol);\r\n                                            payload.append('account', conntd);\r\n                                            payload.append('ipfs_uri', combo_ipfs_hash);\r\n                                            // payload.append('samples', JSON.stringify(thesamples));\r\n                                            // let saveCollection = await fetch(`${state.baseServerUri}/savenftcollection`, {method:'POST', body:payload}).then((response)=>response.json()).then((ress)=>ress);\r\n                                            payload = null;\r\n                                            let newcontract = JSON.parse(JSON.stringify(yaadcontract));\r\n                                            newcontract.name = state.data.coll_name.split(\" \").join(\"_\");\r\n                                            return setState((prev)=>({...prev, data: {...prev.data, coll_name: prev.data.coll_name, coll_symbol: prev.data.coll_symbol, samples: thesamples, possibleCombos, contracts: [newcontract] }, currsubState: \"RandomGenerator-RandomGenerated\" }));\r\n                                        };\r\n                                        if( v === (cap_it-1) ){\r\n                                            await updateDB(state.data, state.data.coll_name, conntd, sampleArray, pinnedCombo);\r\n                                        }\r\n                                    }\r\n                                    loadedimgs++;\r\n                                });\r\n                                break loop1;\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(`drawing error occurred: ${JSON.stringify(error)}`)\r\n                        // return res.json({error, current_state: `looping through attributes, failed to draw index ${p}. Details: ${JSON.stringify(traits[p])}`})\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const getSamplesAndClearComboData = async (comboz, cap)=>{\r\n            const cap_it = (cap)?cap:comboz.length;\r\n            let sampleImgs = [];\r\n            for(let v = 0; v < cap_it; v++){\r\n                sampleImgs.push(comboz[v]);\r\n            }\r\n\r\n            combo = null;\r\n            \r\n            return drawimage(sampleImgs, 1000, 1000);\r\n        };\r\n\r\n        const samples = await getSamplesAndClearComboData(combo, printCap);\r\n    }\r\n    \r\n    const handleSol = async (e)=>{\r\n        showLoading();\r\n        let elem  = (e)?e.target:null;\r\n        let elemFiles = elem.files;\r\n        \r\n        const  readAndShowFiles = async (demFiles) => {\r\n            let contractArray = [];\r\n            for (let dafile of demFiles) {\r\n                let readr = new FileReader();\r\n                readr.onloadend = async ()=>{\r\n                    let  nameArray = dafile.name.split('.');\r\n                    nameArray.splice((dafile.name.split('.').length-1),1);\r\n                    contractArray.push({name: nameArray.join('.'), contract: readr.result});\r\n                    \r\n                    if(contractArray.length === demFiles.length){\r\n                        state.data.contracts = contractArray;\r\n                        state.currsubState = \"RandomGenerator-LayerOptions-ContractName\";\r\n                        setState((prev)=>prev);\r\n                        hideLoading();\r\n                    }\r\n                }\r\n                // readr.\r\n                readr.readAsText(dafile);\r\n            }\r\n        }\r\n\r\n        await readAndShowFiles(elemFiles);\r\n    };\r\n\r\n    const formDataHandler = (e)=>{\r\n        const ele = e.target;\r\n        const eleID = ele.getAttribute(\"id\");\r\n        const the_value = ele.value.trim();\r\n        \r\n        if ( contractZone ) { ele.value = state.data.coll_name; return; }\r\n        if ( the_value === \"\" ) return false;\r\n        \r\n        switch ( eleID ) {\r\n            case \"contractName\":\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 30 ) ) { ele.value = state.data.coll_name; return; }\r\n                state.data.coll_name = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n            case \"contractSymbol\":\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 4 ) ) { ele.value = state.data.coll_symbol; return; }\r\n                state.data.coll_symbol = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n            default:\r\n                if ( !isAplhaNumeric( the_value, [ \"_\", \" \" ] ) || !stringLengthRange( the_value, 1, 50 ) ) { ele.value = state.formVals; return; }\r\n                state.formVals = the_value;\r\n                ele.setAttribute(\"placeholder\", the_value);\r\n                break;\r\n        }\r\n        return;\r\n    }\r\n    \r\n    function GenLayers (){\r\n        function Layerz(props){\r\n            let mouseUpFired;\r\n            let initPositions = [];\r\n            let elebox = document.getElementById('LayerGenBoxx');\r\n            let initDivIndx = null; let newindex = null;\r\n\r\n            useEffect(()=>{\r\n                [].forEach.call(document.getElementsByClassName('generatorRightPanelLayerBox'), (element) => {\r\n                    initPositions.push( element.getBoundingClientRect().top + document.getElementById('popup').scrollTop );\r\n                });\r\n            },[elebox, initPositions])\r\n\r\n            const layer_move_initializer = (event)=>{\r\n                if(event.target.getAttribute('class') === 'generatorRightPanelLayerBox'){\r\n                    mouseUpFired = false;\r\n\r\n                    if(event.type === 'mousedown' || event.type === 'touchstart'){\r\n                        if(mouseUpFired === true){ return false; }\r\n                        let div = event.target, divWitdh = div.clientWidth,\r\n                        popup = document.getElementById('popup');\r\n                        // popup.style.overflowY = 'hidden';\r\n                        div.classList.add(\"sortable-handler\");\r\n\r\n                        let indexOfSelectedItem = [].indexOf.call(document.getElementsByClassName('generatorRightPanelLayerBox'), div),\r\n                        arrayOfEles = document.getElementsByClassName('generatorRightPanelLayerBox'),\r\n                        centerofdiv = div.clientHeight/2;\r\n                        newindex = indexOfSelectedItem;\r\n                        div.style.width = divWitdh+'px';\r\n                        \r\n                        div.style.top = (event.type === 'touchstart')?((event.touches[0].clientY + popup.scrollTop) - centerofdiv)+'px':((event.clientY + popup.scrollTop) - centerofdiv)+'px';\r\n                        initDivIndx = indexOfSelectedItem;\r\n                        // console.log(`mouse location: ${event.clientY}, div loaction ${popup.scrollTop}`);\r\n                        window.onmousemove = (e)=>{\r\n                            if(mouseUpFired === false){\r\n                                div.style.top = ((e.clientY + popup.scrollTop) - centerofdiv)+'px';\r\n                                initPositions.forEach((element, i) => {\r\n                                    if ( indexOfSelectedItem > i ) {\r\n                                        if ( ( ( e.clientY + popup.scrollTop ) - 35 ) < ( element ) && ( ( e.clientY + popup.scrollTop ) - 35 ) > ( element - 70 ) ) {\r\n                                            divSwapper(arrayOfEles[i].parentNode, div.parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n\r\n                                    if( indexOfSelectedItem < i ) {\r\n                                        if ( ( ( e.clientY + popup.scrollTop ) + 35 ) > ( element + 70 ) && ( ( e.clientY + popup.scrollTop ) + 35 ) < ( element + 140 ) ) {\r\n                                            divSwapper(div.parentNode, arrayOfEles[i].parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        };\r\n                        \r\n                        window.ontouchmove = (e)=>{\r\n                            if(mouseUpFired === false){\r\n                                div.style.top = ( ( e.touches[0].clientY + popup.scrollTop ) - centerofdiv )+'px';\r\n                                initPositions.forEach((element, i) => {\r\n                                    if ( indexOfSelectedItem > i ) {\r\n                                        if( ( ( e.touches[0].clientY + popup.scrollTop ) - 35 ) < (element) && ( ( e.touches[0].clientY + popup.scrollTop ) - 35 ) > ( element - 70 ) ){\r\n                                            divSwapper(arrayOfEles[i].parentNode, div.parentNode);\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n\r\n                                    if ( indexOfSelectedItem < i ) {\r\n                                        if( ( ( e.touches[0].clientY + popup.scrollTop ) + 35 ) > ( element + 70 ) && ( ( e.touches[0].clientY + popup.scrollTop ) + 35 ) < ( element + 140 )){\r\n                                            divSwapper( div.parentNode, arrayOfEles[i].parentNode );\r\n                                            newindex = i;\r\n                                            indexOfSelectedItem = i;\r\n                                        }\r\n                                    }\r\n                                });\r\n                                \r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n            };\r\n\r\n            const layer_move_ender = (event)=>{\r\n                if(event.target.getAttribute('class') === 'generatorRightPanelLayerBox'){\r\n                    showLoading();\r\n                }\r\n                \r\n                mouseUpFired = true;\r\n                \r\n                if(event.type === 'mouseup' || event.type === 'touchend' ){\r\n                    let popup = document.getElementById('popup');\r\n                    // popup.style.height = 'auto';\r\n                    // popup.style.overflowY = 'auto';\r\n                    let div = event.target;\r\n                    div.classList.remove(\"sortable-handler\");\r\n                    let arrayOfEles = document.getElementsByClassName('generatorRightPanelLayerBox');\r\n                    let p = 0;\r\n    \r\n                    while ( p < arrayOfEles.length ) {\r\n                        arrayOfEles[p].classList.remove('betweenItem_two');\r\n                        arrayOfEles[p].classList.remove('betweenItem');\r\n    \r\n                        p++;\r\n                    }\r\n    \r\n                    mouseUpFired = true;\r\n    \r\n                    if(event.target.getAttribute('class') === 'generatorRightPanelLayerBox'){\r\n                        if(initDivIndx !== newindex){\r\n                            let tempArray = state.data.layers.splice(initDivIndx,1)[0];\r\n                            state.data.layers.splice(newindex, 0, tempArray);\r\n                        }\r\n                        // let scrollEle = (document.getElementById('popup'))?document.getElementById('popup'):document.getElementById('popupdark');\r\n                        return setState((prev)=>({...prev}));\r\n                        // hideLoading();\r\n                    }\r\n                    \r\n                }\r\n                \r\n            };\r\n\r\n            const setTrait = async (e)=>{\r\n\r\n                e.preventDefault();\r\n\r\n                const ele = e.target;\r\n                \r\n                if(ele.value){\r\n                        // let eleindex = [].indexOf.call(document.getElementsByClassName(ele.getAttribute('class')), ele);\r\n                        let eleindex = parseInt(ele.getAttribute('id').split('_')[1]);\r\n                        // let key = props.obj.key;\r\n                        let eleparentNode = ele.parentNode.parentNode.parentNode.parentNode;\r\n                        let eleClassName = eleparentNode.getAttribute('class');\r\n                        let eleKey = [].indexOf.call(document.getElementsByClassName(eleClassName), eleparentNode);\r\n                        \r\n                        // console.log(`this key is ${[].indexOf.call(document.getElementsByClassName(eleClassName), eleparentNode)}`);\r\n                        state.data.layers[eleKey].traits[eleindex].trait_name = ele.value;\r\n                        ele.setAttribute('placeholder', ele.value);\r\n                        // trait_name\r\n                }\r\n            };\r\n\r\n            const delTrait = async (e)=>{\r\n                showLoading();\r\n                e.preventDefault();\r\n                const ele = e.target;\r\n                console.log(`del trait`)\r\n                let eleindex = parseInt(ele.getAttribute('id').split('_')[1]);\r\n                let eleparentNode = ele.parentNode.parentNode.parentNode.parentNode;\r\n                let eleClassName = eleparentNode.getAttribute('class');\r\n                let eleKey = [].indexOf.call(document.getElementsByClassName(eleClassName), eleparentNode);\r\n                let delVal = state.data.layers[eleKey].traits.splice(eleindex, 1);\r\n                // let boddy = new FormData();\r\n                // let conntd = await currentAddress();\r\n                \r\n                // if(conntd !== false){\r\n                //     boddy.append('account', conntd);\r\n                // }else{\r\n                //     console.log(`Wallet not connected!!`);\r\n                //     return false;\r\n                // }\r\n                \r\n                // boddy.append('value', JSON.stringify(delVal));\r\n\r\n                // let deletedTrait = await fetch(state.baseServerUri+'/delTrait', {method:\"post\", body: boddy,}).then((res)=> res.json()).then((piss)=>piss);\r\n                \r\n                // if(deletedTrait.error){\r\n                //     state.data.msg = deletedTrait.error;\r\n                //     hideLoading();\r\n                //     return setState((prev)=>( prev ));\r\n                // }\r\n\r\n                if(state.data.layers[eleKey].traits.length === 0) state.data.layers.splice(eleKey, 1);\r\n\r\n                hideLoading();\r\n                return setState((prev)=>({...prev}));\r\n            };\r\n\r\n            let editLayer = (e)=>{\r\n                e.preventDefault();\r\n                let ele = e.target;\r\n                let eleIndex = [].indexOf.call(document.getElementsByClassName(ele.getAttribute('class')), ele);\r\n                setState((prev)=>({...prev, temp_index: eleIndex, currsubState: \"RandomGenerator-LayerOptions-Edit-Layer\" } ));\r\n            }\r\n    \r\n            const DetailEditTraitBox = ()=>{\r\n                let boxcont = [];\r\n                for  (let indxx = 0; indxx < state.data.layers[props.obj.key].traits.length; indxx++){\r\n                    let imgsrc = imgURLFromBase64String(state.data.layers[props.obj.key].traits[indxx].path);\r\n                    boxcont.push(<div key={indxx} className='LayerUpldContentBx'>\r\n                        <div className='LayerUpldContent'>\r\n                            <img src={imgsrc} alt=''/>\r\n                            <div className='traitName'>\r\n                                <input className='traitNameBox' id={\"traitName_\"+indxx} placeholder={state.data.layers[props.obj.key].traits[indxx].trait_name} type=\"text\" name='name' onClick={(e)=>{ e.target.value = state.data.layers[props.obj.key].traits[parseInt(e.target.getAttribute(\"id\").split(\"_\")[1])].trait_name}} onChange={setTrait} />\r\n                                <button className=\"del-trait\" id={`delele_${indxx}`} onClick={delTrait} >X</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>)                             \r\n                };\r\n                return(boxcont);\r\n            }\r\n            \r\n            return(\r\n                <div className='layer-box-content' onMouseDown={layer_move_initializer} onMouseUp={layer_move_ender} onTouchStart={layer_move_initializer} onTouchCancel={layer_move_ender} onTouchEnd={layer_move_ender}>\r\n                    <div className='generatorRightPanelLayerBox'>\r\n                        <button className='expander-box' onClick={expandbox} >\r\n                            <div className=\"prioBox\" style={{width:\"10px\", float: \"left\", height:\"10px\", borderRadius:\"5px\", left:\"-10px\", top:\"-10px\", boxSizing:\"border-box\", backgroundColor:\"rgb(140, 140, 140)\"}} onClick={()=>{return false}}>\r\n                                <div className=\"prioBoxx\" style={{width:\"70%\", height:\"70%\", margin:\"15%\", borderRadius:\"35%\", backgroundColor:(state.data.layers[props.obj.key].priority)?\"rgb(0, 172, 7)\":\"#F0000\", boxSizing:\"border-box\", borderLeft:(state.data.layers[props.obj.key].priority)?\"1px solid rgb(159, 255, 162)\":\"1px solid rgb(190, 190, 190)\", borderTop:(state.data.layers[props.obj.key].priority)?\"1px solid rgb(159, 255, 162)\":\"1px solid rgb(190, 190, 190)\"}}>\r\n                                    <div className=\"prioBoxxx\" style={{width:\"30%\", height:\"30%\", top:\"1px\", right:\"1px\", borderRadius:\"35%\", backgroundColor:(state.data.layers[props.obj.key].priority)?\"rgb(159, 255, 162)\":\"rgb(190, 190, 190)\", boxSizing:\"border-box\",}}>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='generatorRightPanelLayerBox-title' >\r\n                                <span className='generatorRightPanelLayerBox-title-Span'> {props.obj.name} </span>\r\n                            </div>\r\n                            <div className='generatorRightPanelLayerBox-title-img-div' >\r\n                                <img height='12px' width='12px' className='generatorRightPanelLayerBox-title-img' src='./inverted-triangle.svg' alt='' />\r\n                            </div>\r\n                        </button>\r\n                        <div className='edit-trait-box'>\r\n                            <div className='edit-trait-img-div' onClick={editLayer}>\r\n                                <img className='edit-trait-img' src='./edit icon.svg' alt='Edit layer' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='detail-edit-trait-box inactive'>\r\n                        <button className='LayerUpldContentBxAdd' onClick={handleAddLayer} >+</button>\r\n                        <DetailEditTraitBox/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(state.currsubState === \"RandomGenerator\" && state.data.layers ){\r\n\r\n            if(state.data.layers.length > 0){\r\n                let layerlen = 0; let boxcont = [];\r\n                while (layerlen < state.data.layers.length){\r\n                    boxcont.push(<Layerz obj={{name:state.data.layers[layerlen].name, key:layerlen}} key={layerlen}/>)\r\n                    layerlen++;\r\n                }\r\n                return(boxcont)\r\n            }else{\r\n                return('')\r\n            }\r\n        }\r\n    }\r\n    \r\n    // console.log(`char code for space: ${\" \".charCodeAt(0)}`);\r\n    \r\n    function Dabttn(){\r\n        const setBGTrait = (e)=>{\r\n            e.preventDefault();\r\n            const ele = e.target;\r\n            \r\n            if(ele.value){\r\n                if(ele.getAttribute('id').split('_')[0] === 'BGName'){\r\n                    let eleKey = [].indexOf.call(document.getElementsByClassName('BG_traitNameBox'), ele);\r\n                    state.data.background[eleKey].trait_name = ele.value;\r\n                    ele.setAttribute('placeholder', ele.value);\r\n                }\r\n            }\r\n        };\r\n\r\n        const delBG = async (e)=>{\r\n            showLoading(); e.preventDefault(); const ele = e.target;\r\n            \r\n            const eleindex = parseInt(ele.getAttribute('id').split('_')[1]);\r\n            const delVal = state.data.background.splice(eleindex, 1);\r\n\r\n            // const conntd = await connectToChain();\r\n            // if(conntd !== false){\r\n            //     boddy.append('account', conntd);\r\n            // }else{\r\n            //     hideLoading();\r\n            //     return false;\r\n            // }\r\n            \r\n            // boddy.append('value', JSON.stringify(delVal))\r\n\r\n            // let deletedTrait = await fetch(state.baseServerUri+'/delTrait', {method:\"post\", body: boddy,}).then((res)=>res.json()).then((piss)=>piss);\r\n            \r\n            // if(deletedTrait.error){\r\n            //     state.data.msg = deletedTrait.error;\r\n            //     hideLoading();\r\n            //     return setState((prev)=>( prev ));\r\n            // }\r\n\r\n            if( state.data.background?.length === 0 ) delete state.data.background;\r\n\r\n            // hideLoading();\r\n            return setState((prev)=>({...prev}));\r\n        };\r\n        \r\n        if(state.data.layers?.length > 1){\r\n            let Bgwords = (state.data.background)?'GENERATE':'Choose Backgrounds';\r\n            \r\n            function TheBGs(){\r\n                if(state.data.background){\r\n                    let indxx = 0; let bgstack = [];\r\n                    \r\n                    while ( indxx < state.data.background.length ){\r\n                        const imgURL = imgURLFromBase64String( state.data.background[indxx].path );\r\n                        bgstack.push(<div key={indxx} className='BG_UpldContentBx'><div className='BG_UpldContent'><img src={imgURL} alt=''/><DaInput data={{class:'traitName', typeClass:'BG_traitNameBox', typeId:\"BGName_\"+indxx, placeholder:state.data.background[indxx].trait_name, type:'text', name:'name', onClick:(e)=>{ e.target.value = state.data.background[parseInt(e.target.getAttribute(\"id\").split(\"_\")[1])].trait_name}, onChange:setBGTrait }}/></div><Buttonz data={{class:\"delBG\", id:'deleteBGUpldContentBx_'+indxx, value:'X', func: delBG}} /></div>)\r\n                        indxx++;\r\n                    }\r\n\r\n                    return(\r\n                        <div>\r\n                            <div className='bg_title_box'> <span> Backgrounds </span> </div>\r\n                            {bgstack}\r\n                            <div className='LayerbgAdd' id='selectBG' style={{zIndex:\"1\"}} onClick={handleAddBGLayer}>\r\n                                <div className='LayerbgContentadd'> <span>+</span> </div>\r\n                                <span> Add image. </span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n\r\n            return(\r\n                <div>\r\n                    <TheBGs/>\r\n                    <button id={(state.data.background)?'Generate-pfp':'selectBG'} className=\"LayerUpldBttn\" onClick={(e)=>{ return (state.data.background)?generate_it( e, 200 ):handleAddLayer(e)}} >{ Bgwords }</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    let activeContract = state.data[\"activeContract\"], conDetails = {};\r\n    \r\n    useEffect(()=>{\r\n        if(state.data[\"contracts\"] && activeContract){\r\n            conDetails[\"name\"] = state.data[\"contracts\"][activeContract].name;\r\n            conDetails[\"contract\"] = state.data[\"contracts\"][activeContract].contract;\r\n        }\r\n    },[activeContract])\r\n\r\n    function ThaSamples (){\r\n        if(state.data.samples?.length > 0){\r\n            let sampleLen = 0; let boxcont = [];\r\n\r\n            while (sampleLen < state.data.samples?.length){\r\n                // console.log(`samples length:: ${state.data.samples.length}, samples index:: ${state.data.samples} ${JSON.stringify(state.data.samples)}`);\r\n                const imgurl = imgURLFromBase64String(state.data.samples[sampleLen].path);\r\n                boxcont.push(<div key={sampleLen} className='LayerUpldContentBx'><div className={(state.currsubState === \"RandomGenerator-ContractDeployed\")?\"LayerUpldContent\":\"LayerUpldContent\"}><img className='sampleImage' src={imgurl} alt=''/></div></div>);\r\n                sampleLen++;\r\n            }\r\n            \r\n            return(boxcont)\r\n        }\r\n\r\n        // showLoading();\r\n        // checkWorkInterval(`${state.baseServerUri}progress/generator/${state.data.coll_name}`, 45000, (piss)=>{\r\n        //     console.log(`meeehh its done-- ${JSON.stringify(piss)}`);\r\n        //     if(piss !== null && piss !== undefined){\r\n        //         stopCheckWork();\r\n        //         state.data.samples = piss.data.samples;\r\n        //         setState((prev)=>prev);\r\n        //         hideLoading();\r\n        //     }\r\n\r\n        //     return (<span style={{color:\"white\"}}>homoooo: {piss}</span> )\r\n        // });\r\n    }\r\n    \r\n    let contractZone = (state.currsubState === \"RandomGenerator-RandomGenerated\")?true:false;\r\n    \r\n    function ContractBox(){\r\n        let boxxcont = [];\r\n        if(state.data.contracts?.length > 0 && state.currsubState !== \"RandomGenerator-ContractDeployed\"){\r\n            let sampleLen = 0;\r\n            const the_contracts = state.data.contracts;\r\n            const showContract = (e)=>{\r\n                showLoading();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const da_ele = e.target;\r\n                const daindex = parseInt(da_ele.getAttribute('id').split(\"_\")[1]);\r\n                state.data.activeContract = daindex;\r\n                setState((prev)=>({...prev}));\r\n                hideLoading();\r\n            };\r\n            \r\n            while (sampleLen < the_contracts.length){\r\n                boxxcont.push(\r\n                    <button key={sampleLen} onClick={showContract} className={\"contractBox\"} id={\"contractBox_\"+sampleLen}>\r\n                        <img src='./solidity_icon.svg' id={\"contractBoxImg_\"+sampleLen} alt=''/>\r\n                        <span id={\"contractBoxSpan_\"+sampleLen} >{ the_contracts[sampleLen].name }</span>\r\n                    </button>\r\n                );\r\n                \r\n                sampleLen++;\r\n            }\r\n            \r\n            let contractDetailsBox = <div className='contract-box'><div id='contract-container' className='contract-container'><h2>{state.data.contracts[0]?.name}.sol</h2><span>{state.data.contracts[0]?.contract}</span></div><button className=\"expander-div\" onClick={(e)=>expandABox( e, document.getElementById('contract-container'), 'contract-container-expanded', 'contract-container') } >..expand..</button></div>;\r\n            return( <> {/* <div id=\"pissingD\"> {boxxcont} </div> */} {contractDetailsBox} </> )\r\n        }\r\n    }\r\n\r\n    function AddLayer(){\r\n        return(\r\n            <div style={{marginBottom:\"20px\"}}>\r\n                <input type=\"file\" id={(contractZone)?'project_contract':'single_asset'} name={(contractZone)?'project_contract':'single_asset'} accept={(contractZone)?'*':\"image/*\"} multiple=\"multiple\" style={{opacity:100, zIndex:1}} onChange={(contractZone)?handleSol:state.data.func} hidden/>\r\n                <button className='generatorRightPanelAddNewLayer' id='generatorRightPanelAddNewLayer' onClick={(e)=>{ if( state.data.coll_name?.length > 0 && state.data.coll_symbol?.length > 0 ){ state.temp_index = null; handleAddLayer(e); }else{ let messages = []; if( !state.data.coll_symbol ){ messages.push(\"Enter a project/NFT symbol!\") } if( !state.data.coll_name ){ messages.push( \"Enter a project/NFT name!\" ) } if( messages.length > 0 ){ return setMsgStacks( (prev)=>({...prev, messages, substate:state.currsubState }) ) } } }} > + </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function CollNameBox(){\r\n        return(<div className='coll_name_box'>\r\n            <div className='contractNameContainer'>\r\n                <BoxTitle data={{divClass:'contractNameText', textType:'span', text:'Name:'}}/>\r\n                <DaInput data={{ type:'text', typeId:'contractName', typeClass:'contractName', placeholder:(state.data.coll_name)?state.data.coll_name:\"Enter your project name.\", onChange:formDataHandler, onClick:(e)=>{e.target.value = state.data.coll_name}}}/>\r\n            </div>\r\n            <div className='contractSymbolContainer'>\r\n                <BoxTitle data={{divClass:'contractSymbolText', textType:'span', text:'Symbol:'}}/>\r\n                <DaInput data={{ type:'text', typeId:'contractSymbol', typeClass:'contractSymbol', placeholder:(state.data.coll_symbol)?state.data.coll_symbol:\"Enter project symbol.\", onChange:formDataHandler}}/>\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    let currentSubState, LayerUpldBoxTitle, mainBox, daButtn, addLayer, coll_Name_Box;\r\n\r\n    switch (state.currsubState) {\r\n        case \"RandomGenerator-ContractDeployed\":\r\n            mainBox = <div className='contract-box' id='LayerGenBoxx'> \r\n                <div className='contract-deployed-container'>\r\n                    <BoxTitle data={{divClass:'generatorRightPanelTitle', textType:'h2', text:'Contract Deployed.'}}/>\r\n                    <a href={state.data.contract_link} target=\"_blank\" rel=\"noreferrer\"><BoxTitle data={{divClass:'regularText', textType:'span', text:`Contract address: ${state.data.contract_address}`}}/></a>\r\n                </div>\r\n                <div className=\"nftSamples-contracted-container\" id='nftSamples-container' style={{marginTop:\"20px\", maxHeight:\"400px\",  overflowY:\"hidden\", marginBottom:\"20px\" }}>\r\n                    <BoxTitle data={{ divClass:'generatorRightPanelTitle', textType:'h4', text:'Generated Samples.'}}/>\r\n                    <ThaSamples/>\r\n                    <button className=\"expander-div\" onClick={(e)=>{ expandABox( e, document.getElementById( 'nftSamples-container' ), 'nftSamples-expanded-container', 'nftSamples-contracted-container' ); }} >..expand..</button>\r\n                </div>\r\n            </div>;\r\n            break;\r\n        case \"RandomGenerator-RandomGenerated\":\r\n            coll_Name_Box = <CollNameBox/>;\r\n            daButtn = <Buttonz data={{class:\"LayerUpldBttn\", id:'Generate-pfp', value: 'Deploy Contract', func: deployContract}} />;\r\n            mainBox = <div className='contract-deployed-container' >\r\n                <ContractBox/>\r\n                <div id='LayerGenBoxx'>\r\n                    <div id='nftSamples-container' className='nftSamples-contracted-container' >\r\n                        <BoxTitle data={{divClass:'generatorRightPanelTitle', textType:'h4', text:'Generated Samples.'}}/>\r\n                        <ThaSamples/>\r\n                    </div>\r\n                    <button  className=\"expander-div\" onClick={(e)=>{ expandABox(e, document.getElementById( 'nftSamples-container' ), 'nftSamples-expanded-container', 'nftSamples-contracted-container' ); }} >..expand..</button>\r\n                </div>\r\n            </div>;\r\n            // LayerUpldBoxTitle = <div> <BoxTitle data={{divClass:'generatorRightPanelTitle', textType:'h1', text:'Contract.'}}/><BoxTitle data={{divClass:'generatorRightPanelTitle', textType:'span', text:`Click the \"${(activeContract)?state.data[\"contracts\"][activeContract]?.name:state.data[\"contracts\"][0]?.name}\" button to view the NFT contract. \\nIf you already have a contract, click \"Already have a contract\" to link your contract.` }}/></div>\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-AddLayer\":\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <DaInput data={( state.temp_index  !== null )? { typeClass:'LayerName', typeId:'LayerName', name:'name', type:'text', hidden:true, value:state.data.layers[ state.temp_index ]?.name } : { typeClass:'LayerName', typeId:'LayerName', name:'name', type:'text', placeholder:(state.formVals !== null)?state.formVals:'Enter layer name.', onChange:formDataHandler, onClick:(e)=>{ e.target.value = state.formVals;} } }/>\r\n                <BoxTitle data={{ divClass:\"generatorRightPanelTitle\", textType:'span', text:`Click the \"+\" to upload layer images${( state.temp_index !== null)?\" for: \"+state.data.layers[ state.temp_index ]?.name:\"\"}.`}}/>\r\n                <label className='LayerUpldBttn' id='LayerUpldLabel' htmlFor='multi_asset' onClick={(e)=>{ let ele_val = state.formVals; if( !ele_val && state.temp_index === null ) { e.preventDefault(); setMsgStacks((prev)=>( {...prev, formdata:[{id:\"LayerName\", value: document.getElementById(\"LayerName\").value, msg: \"Enter a layer name!\"}], substate:state.currsubState } )) } }}>\r\n                    <h1>+</h1>\r\n                    <DaInput data={{hidden:true, type:'file', typeId:'multi_asset', class:'inactive', name:'multi_asset', multiple:'multiple', accept:'image/*', onChange:handleAddLayerUpld}}/>\r\n                </label>\r\n                <div id='layerContentBox'></div>\r\n                <Buttonz data={{class:\"LayerUpldBttn\", id:'addLayerImages', value: (typeof( state.temp_index ) === \"number\")?'Add':'Create', func: handleAddLayerUpld }} />\r\n            </div>;\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-BG-Upld\":\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{ divClass:\"generatorRightPanelTitle\", textType:'span', text:'Click the \"+\" to upload background images.'}}/>\r\n                <label className='LayerUpldBttn' htmlFor='multi_asset'>\r\n                    <h1>+</h1>\r\n                    <DaInput data={{typeClass:'LayerName', typeId:'multi_asset', name:'bg_asset', type:'file', multiple:'multiple', hidden:true, accept:'image/*', onChange:handleAddLayerUpld}}/>\r\n                </label>\r\n                <div id='layerContentBox'></div>\r\n                <Buttonz data={{class:\"LayerUpldBttn\", id:'bg_upld', value: 'No Background', func: handleAddLayerUpld}} />\r\n            </div>;\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Edit-Layer\":\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{divClass:\"editBoxTitle\", textType:'h2', text:`Edit '${state.data.layers[ state.temp_index ]?.name}' layer.`}}/>\r\n                <div style={{ padding:\"0px 10px 10px 10px\"}}>\r\n                    <BoxTitle data={{divClass:\"generatorRightPanelTitle\", textType:'h4', text:`Rename layer.`}}/>\r\n                    <Buttonz data={{class:'renameLayerBttn', id:'bg_upld', value:'Rename', func: renameLayer}} />\r\n                </div>\r\n                <div style={{ padding: \"0px 10px 10px 10px\", width: \"30%\", boxSizing: \"border-box\", display: \"inline-block\"}}>\r\n                    <BoxTitle data={{divClass:\"generatorRightPanelTitle\", textType:'h4', text:`Prioritized.`}}/>\r\n                    <button id=\"priorityLayerBttn\" className={( state.data.layers[ state.temp_index ].priority === true )?'disablepriorityLayerBttn':'makepriorityLayerBttn'} onClick={(e)=>{ let isPriority = state.data.layers[ state.temp_index ].priority; state.data.layers[ state.temp_index ].priority = ( isPriority === true )?false:true; document.getElementById(\"priorityLayerBttn\").classList.toggle(\"disablepriorityLayerBttn\"); document.getElementById(\"priorityLayerBttn\").classList.toggle(\"makepriorityLayerBttn\"); document.getElementById(\"makepriorityLayerOption\").classList.toggle('ispriorityLayerOption'); document.getElementById(\"makepriorityLayerOption\").classList.toggle('notpriorityLayerOption'); document.getElementById(\"makepriorityLayerOptionSpan\").innerText =( isPriority === true )?\"NO\":\"YES\"; }}>\r\n                        <div id='makepriorityLayerOption' className={( state.data.layers[ state.temp_index ].priority === true )?'ispriorityLayerOption':'notpriorityLayerOption'}>\r\n                            <span id='makepriorityLayerOptionSpan'>{( state.data.layers[ state.temp_index ].priority === true )?\"YES\":\"NO\"}</span>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n                <div style={{ padding: \"0px 10px 10px 10px\", width: \"70%\", boxSizing: \"border-box\", display: \"inline-block\", float:\"right\"}}>\r\n                    <BoxTitle data={{divClass:\"generatorRightPanelTitle\", textType:'h4', text:`Delete layer.`}}/>\r\n                    <Buttonz data={{class:\"delLayerBttn\", id:'bg_upld', value: 'DELETE', func: delLayer}} />\r\n                </div>\r\n            </div>\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Rename_Layer\":\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{divClass:\"generatorRightPanelTitle\", textType:'h4', text:'Change layer name.'}}/>\r\n                <DaInput data={{typeClass:'LayerName', typeId:'LayerName', name:'name', type:'text', placeholder:state.data.layers[ state.temp_index ].name, onChange:formDataHandler}}/>\r\n                <button className=\"nodelLayerBttn\" onClick={renameLayer}>RENAME</button>\r\n            </div>\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-Del-Layer\":\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{divClass:\"generatorRightPanelTitle\", textType:'h4', text:`Select yes to delete ${state.data.layers[ state.temp_index ]?.name} layer.`}}/>\r\n                <Buttonz data={{class:'delLayerBttn', id:'', value:'YES', func: delLayer}} />\r\n                <Buttonz data={{class:'nodelLayerBttn', id:'', value:'NO', func: closeLayerOptionsBox}} />\r\n            </div>\r\n            break;\r\n        case \"RandomGenerator-LayerOptions-ContractName\":\r\n            currentSubState = <div className='LayerUpldBox'>\r\n                <BoxTitle data={{divClass:\"generatorRightPanelTitle\", textType:'h2', text:'enter contract name.'}}/>\r\n                <DaInput data={{typeClass:'LayerName', typeId:'LayerName', name:'name', type:'text', placeholder:\"Enter main contract name.\", onChange:formDataHandler}}/>\r\n                <ContractBox/>\r\n                <Buttonz data={{class:\"nodelLayerBttn\", id:'', value:'SUBMIT', func: ()=>{return false}}} />\r\n            </div>\r\n            break;\r\n        default:\r\n            daButtn = <Dabttn/>\r\n            currentSubState = \"\";\r\n            state.formVals = null; state.temp_index = null;\r\n            coll_Name_Box = <CollNameBox/>; addLayer = <AddLayer/>;\r\n            mainBox = <div id='LayerGenBoxx'><GenLayers/></div>;\r\n            LayerUpldBoxTitle = <div> <BoxTitle data={{divClass:'generatorRightPanelTitle', textType:'h2', text:'LAYERS'}}/> <BoxTitle data={{divClass:'generatorRightPanelTitle', textType:'span', text:`Click the \"+\" icon to create new layer`}}/></div>;\r\n            break;\r\n    }\r\n    \r\n    function MainContainer (){\r\n        if(!currentSubState){\r\n            return(\r\n                <div className='RandomGenerator'>\r\n                    <button className='closeBox' onClick={()=> setState( (prev)=>({...prev, state:\"home\", data:{ coll_name : null, coll_symbol : null, layers:[] }, currsubState:null, temp_index: null }) ) }>X</button>\r\n                    {coll_Name_Box}\r\n                    <div className='LayerGenBox'>\r\n                        {LayerUpldBoxTitle}\r\n                        {addLayer}\r\n                        {mainBox}\r\n                        {daButtn}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className='LayerOptionsBox'>\r\n                    <Buttonz data={{class:'closeBox', id:'', value:'X', func: closeLayerOptionsBox}} />\r\n                    {currentSubState}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    return( <div className='popupdark' id='popup'> <MainContainer/> </div> )\r\n};\r\n\r\nexport default RandomGenerator;"],"names":["validateIMGtype","demFiles","childClassName","parentIdName","wrongFiles","callback","parentEle","document","getElementById","innerHTML","demlen","length","console","log","id","value","msg","loadedImgs","signatures","toLowerCase","n","dafile","imgSignature","fileSignature","includes","img","createElement","addEventListener","width","height","para","appendChild","classList","add","remove","push","src","URL","createObjectURL","shuffle","arra1","temp","index","ctr","Math","floor","random","get_all_possible_array_combos","input","output","da_path","undefined","current_item","gogo","val","pop","slice","expandABox","e","expandee","expandedClass","contractedClass","ele","target","contains","innerText","divSwapper","node1","node2","parentNode","replaceChild","insertBefore","props","window","location","host","da_files","useContext","MsgContext","setMsgStacks","msgStacks","StateContext","state","setState","useEffect","data","layers","possibleCombos","forEach","indx","arr","priority","traits","activeContract","closeLayerOptionsBox","currsubState","localStorage","clear","prev","deployContract","showLoading","coll_name","trim","messages","substate","coll_symbol","fetch","nftcontract","then","r","text","contract","contractOptions","language","sources","content","settings","outputSelection","connectToChain","blockchainNetworks","connected","contractData","FormData","hideLoading","append","JSON","stringify","baseServerUri","method","body","theresponse","json","compiled","compiledContract","abi","bytecode","factory","ContractFactory","signer","deploy","tx","catch","nftToken","code","address","contract_address","contract_link","currentNetwork","handleAddBGLayer","handleAddLayer","elementID","getAttribute","eleIndex","indexOf","call","getElementsByClassName","temp_index","handleAddLayerUpld","bgElement","currentFiles","files","err","wrongfiles","formdata","textContent","layerName","formVals","background","exists","indxx","name","file_len","loadedindx","Image","imgToBase64String","imgURL","imgEXT","Array","isArray","trait_name","path","ext","delLayer","previous","splice","renameLayer","the_value","alreadyExists","isAplhaNumeric","stringLengthRange","expandbox","me","style","backgroundColor","generate_it","printCap","parseInt","currentSubState","conntd","account","loop_and_pin_layers","collName","emptyComboArray","newlayers","reverse","pin","options","pinataMetadata","keyvalues","description","pinataOptions","cidVersion","assetName","Date","now","pin_body","base64ToBlob","imgURLFromBase64String","newimgBlob","resp","pinned","pinnedItem","ipfsHash","IpfsHash","layer_index","trait_index","loop_and_pin_background","backgrounds","newBGArray","f","fetchBlob","blob","pinnedBG","mapTraitTypes","comboz","len","traitTypes","isPriority","ego","map","x","v","trait_type","traitTypesPushNA","priorities","endo","insertBackground","backgroundArray","d","newBG","allPossibleCombos","collectionName","layersArray","bgArray","loop_and_pin","map_traits","traittypes_fin","combo","byteSize","obj","str","bytes","TextEncoder","encode","res","getBytes","pinCombo","optns","pinUrl","rezz","pinnedCombo","drawimage","sampleArray","cap_it","drawableTraits","filter","drawableTraits_length","canvas","ctx","getContext","loadedimgs","p","drawableTrait","iterlength","loop1","i","traitinfo","base4path","drawImage","toDataURL","sampleimage","attributes","updateDB","collname","thesamples","combo_ipfs_hash","payload","newcontract","parse","yaadcontract","split","join","samples","contracts","error","getSamplesAndClearComboData","cap","sampleImgs","handleSol","elem","elemFiles","readAndShowFiles","contractArray","readr","FileReader","onloadend","nameArray","result","readAsText","formDataHandler","eleID","contractZone","setAttribute","GenLayers","Layerz","mouseUpFired","initPositions","elebox","initDivIndx","newindex","element","getBoundingClientRect","top","scrollTop","layer_move_initializer","event","type","div","divWitdh","clientWidth","popup","indexOfSelectedItem","arrayOfEles","centerofdiv","clientHeight","touches","clientY","onmousemove","ontouchmove","layer_move_ender","tempArray","setTrait","preventDefault","eleindex","eleparentNode","eleClassName","eleKey","delTrait","DetailEditTraitBox","boxcont","key","imgsrc","className","alt","placeholder","onClick","onChange","onMouseDown","onMouseUp","onTouchStart","onTouchCancel","onTouchEnd","float","borderRadius","left","boxSizing","margin","borderLeft","borderTop","right","layerlen","Dabttn","setBGTrait","delBG","TheBGs","bgstack","class","typeClass","typeId","func","zIndex","Bgwords","conDetails","ThaSamples","sampleLen","imgurl","LayerUpldBoxTitle","mainBox","daButtn","addLayer","coll_Name_Box","ContractBox","boxxcont","the_contracts","showContract","stopPropagation","da_ele","daindex","contractDetailsBox","AddLayer","marginBottom","accept","multiple","opacity","hidden","CollNameBox","divClass","textType","href","rel","marginTop","maxHeight","overflowY","htmlFor","padding","display","toggle","MainContainer"],"sourceRoot":""}